<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: angela Status: ready -->
 <chapter xml:id="tutorial" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Una explicaci&oacute;n sencilla</title>

  <para>
   A continuaci&oacute;n, le introduciremos a PHP en un peque&ntilde;o
   y sencillo manual. Este documento explica c&oacute;mo crear
   p&aacute;ginas web din&aacute;micas para Internet con PHP, aunque
   PHP no solamente est&aacute; dise&ntilde;ado para la
   creaci&oacute;n de &eacute;stas. Consulte la secci&oacute;n
   titulada <link linkend="intro-whatcando">&iquest;Qu&eacute; se
   puede hacer con PHP?</link> para m&aacute;s informaci&oacute;n.
  </para>
  <para>
   Las p&aacute;ginas web que utilizan PHP son tratadas como
   p&aacute;ginas de HTML comunes y corrientes, y puede crearlas y
   editarlas de la misma manera que lo hace con documentos normales de
   HTML.
  </para>

  <sect1 xml:id="tutorial.requirements">
   <title>&iquest;Qu&eacute; necesito?</title>
   <para>
    En este manual vamos a asumir que usted cuenta con un servidor que
    soporta PHP y que todos los archivos con la
    extensi&oacute;n <filename>.php</filename> son manejados por
    PHP. En la mayor&iacute;a de servidores, &eacute;sta es la
    extensi&oacute;n que toman los archivos PHP por defecto, pero
    pregunte al administrador de su servidor para estar seguro. Si su
    servidor soporta PHP, entonces no necesita hacer nada, solamente
    crear sus archivos <filename>.php</filename> y guardarlos en su
    directorio web, y el servidor, como por arte de magia, los
    analizar&aacute; para usted. No hay necesidad de compilar nada,
    tampoco tiene necesidad de instalar otras
    herramientas. M&iacute;relo de esta manera, estos archivos de PHP
    son tan simples como archivos de HTML con una nueva familia de
    etiquetas que le permiten una gran cantidad de cosas. La
    mayor&iacute;a de las compa&ntilde;&iacute;as de hospedaje de
    p&aacute;ginas web ofrecen el soporte que necesita para usar PHP,
    pero si por alguna raz&oacute;n ellos no lo hacen, considere leer
    la secci&oacute;n titulada <link xlink:href="&url.php.links;">Recursos
    PHP</link> para mas informaci&oacute;n acerca de
    compa&ntilde;&iacute;as de hospedaje que soportan PHP
   </para>
   <para>
    Digamos que usted tiene limitado acceso a internet y se encuentra
    programando localmente. En este caso, querr&aacute; instalar un
    servidor de web como
    <link xlink:href="&url.apache;">Apache</link>, y
    <link xlink:href="&url.php.downloads;">PHP</link>. Lo m&aacute;s seguro
    es que tambi&eacute;n quiera instalar una base de datos
    como <link xlink:href="&url.mysql.docs;">MySQL</link>. Puede instalar
    estos productos individualmente o simplemente <link
    xlink:href="&url.installkits;">localizar un paquete
    pre-configurado</link> que autom&aacute;ticamente instale todos
    estos productos con solamente unos movimientos de su
    rat&oacute;n. Es muy f&aacute;cil instalar un servidor web con
    soporte para PHP en cualquier sistemas operativo, incluyendo Linux
    y Windows. En Linux,
    <link xlink:href="&url.rpmfind;">rpmfind</link> y <link
    xlink:href="&url.rpmfind.pbone;">PBone</link> le ayudar&aacute;n a
    encontrar un RPM.
   </para>
  </sect1>

  <sect1 xml:id="tutorial.firstpage">
   <title>Su primera p&aacute;gina con PHP</title>
   <para>
    Comienze por crear un archivo
    llamado <filename>hola.php</filename> y colocarle en el
    "directorio ra&iacute;z" (<varname>DOCUMENT_ROOT</varname>) con el
    siguiente contenido:
   </para>
   <para>
    <example>
     <title>Nuestro primer script
     PHP: <filename>hola.php</filename></title>
     <programlisting role="php">
<![CDATA[
<html>
 <head>
  <title>Ejemplo de PHP</title>
 </head>
 <body>
 <?php echo "<p>Hola Mundo</p>"; ?>
 </body>
</html>
]]>
     </programlisting>
     <simpara>
      Utilice su navegador web para acceder al archivo, con la URL
      terminando en "/hola.php". Si est&aacute; programando localmente
      este URL lucir&aacute; algo
      como <literal>http://localhost/hola.php</literal> o
      <literal>http://127.0.0.1/hola.php</literal> pero esto depende
      de la configuraci&oacute;n de su servidor web. Aunque este tema
      est&aacute; fuera del alcance de este tutorial, tambi&eacute;n
      puede ver las directivas <varname>DocumentRoot</varname> y
      <varname>ServerName</varname> en la configuraci&oacute;n de su
      servidor (en Apache, esto es &httpd.conf;). Si todo est&aacute;
      configurado correctamente, el archivo ser&aacute; analizado por
      PHP y el siguiente contenido aparecer&aacute; en su navegador:
     </simpara>
      <screen role="html">
<![CDATA[
<html>
 <head>
  <title>Ejemplo de PHP</title>
 </head>
 <body>
 <p>Hola Mundo</p>
 </body>
</html>
]]>
      </screen>
    </example>
   </para>
   <para>
    Note que esto no es como los scripts de CGI. El archivo no
    necesita ninguna clase especial de permisos para ser
    ejecutado. Piense en ellos como si fueran archivos HTML con un
    conjunto muy especial de etiquetas disponibles, y que hacen muchas
    cosas interesantes.
   </para>
   <para>
    Este programa es extremadamente simple, y no necesita usar PHP
    para crear una p&aacute;gina como &eacute;sta. Todo lo que hace es
    mostrar: <literal>Hola Mundo</literal> usando la sentencia
    <function>echo</function>. 
   </para>
   <para>
    Si ha intentado usar este ejemplo, y no produjo ning&uacute;n
    resultado, preguntando si deseaba descargar el archivo, o
    mostr&oacute; todo el archivo como texto, lo m&aacute;s seguro es
    que PHP no se encuentra habilitado en su servidor. P&iacute;dale a
    su administrador que active esta funci&oacute;n por usted, o use
    el cap&iacute;tulo titulado
    <link linkend="install">Instalaci&oacute;n</link> en el
    manual. Si est&aacute; trabajando localmente, lea tambi&eacute;n
    el cap&iacute;tulo dedicado a la instalaci&oacute;n, y
    aseg&uacute;rese de que todo est&eacute; configurado
    apropiadamente. Si el problema contin&uacute;a, por favor use una
    de las muchas opciones para obtener <link
    xlink:href="&url.php.support;">ayuda con PHP</link>.
   </para>
   <para>
    El objetivo de este ejemplo es demostrar c&oacute;mo puede usar
    las etiquetas PHP. En este ejemplo
    usamos <literal>&lt;?php</literal> para indicar el inicio de la
    etiqueta PHP. Despu&eacute;s indicamos la sentencia y abandonamos
    el modo PHP usando
    <literal>?&gt;</literal>. Puede salir de PHP y regresar cuantas
    veces lo desee usando este m&eacute;todo. Para m&aacute;s
    informaci&oacute;n, puede leer la secci&oacute;n en el manual
    titulada <link linkend="language.basic-syntax">Sintaxis
    b&aacute;sica de PHP</link>.
   </para>
   <note>
    <title>Una nota acerca de editores de texto</title>
    <para>
     Hay muchos editores de texto y Entornos Integrados de Desarrollo
     (IDE por sus siglas en Ingl&eacute;s) que puede usar para crear,
     editar, y organizar archivos PHP. Puede encontrar una lista
     parcial de &eacute;stos en <link xlink:href="&url.phpeditorlist;">Lista
     de editores de PHP</link>. Si desea recomendar un editor, por
     favor visite la p&aacute;gina mencionada anteriormente, y
     comunique su recomendaci&oacute;n a las personas encargadas del
     mantenimiento para que lo incluyan en la lista. Contar con un
     editor que resalte la sintaxis de PHP puede ser de mucha ayuda.
    </para>
   </note>
   <note>
    <title>Una nota acerca de los procesadores de palabras</title>
    <para>
     Los procesadores de palabras como "StarOffice", "Microsoft word"
     y "Abiword" no son buenas opciones para editar archivos de
     PHP. Si desea usar uno de &eacute;stos programas para probar sus
     scripts, primero debe asegurarse de guardar el documento en
     formato de "Texto" puro, o PHP no ser&aacute; capaz de ejecutar
     el script.
    </para>
   </note>
   <note>
    <title>Una nota acerca del "Bloc de Notas de Windows"</title>
    <para>
     Si desea escribir sus archivos PHP usando el "Bloc de Notas de
     Windows" o en alg&uacute;n otro editor de texto para Windows
     necesita asegurarse de que sus archivos sean guardados con la
     extensi&oacute;n .php (la mayor&iacute;a de editores de texto en
     Windows autom&aacute;ticamente tratar&aacute;n de a&ntilde;adir
     la extensi&oacute;n .txt a los archivos a menos que tome los
     siguientes pasos para prevenirlo). Cuando guarde sus archivos y
     el programa le pregunte qu&eacute; nombre le desea dar al
     archivo, use comillas para indicar el nombre (es decir,
     "<filename>hola.php</filename>"). Una alternativa es, en la lista
     de opciones "Archivos de Texto *.txt", seleccionar la
     opci&oacute;n "Todos los archivos *.*". Aqu&iacute; puede
     escribir el nombre del archivo sin las comillas.
    </para>
   </note>
   <para>
    Ahora que ha creado un peque&ntilde;o script de PHP que funciona
    correctamente, es hora de trabajar con el script de PHP m&aacute;s
    famoso; vamos a hacer una llamada a la
    funci&oacute;n <function>phpinfo</function> para obtener
    informaci&oacute;n acerca de su sistema y configuraci&oacute;n
    como las <link linkend="language.variables.predefined">variables
    predefinidas disponibles</link>, los m&oacute;dulos utilizados por
    PHP, y las diferentes opciones de <link
    linkend="configuration">configuraci&oacute;n</link>. Tomemos unos
    segundos para revisar esta informaci&oacute;n.
   </para>
   
  </sect1>

  <sect1 xml:id="tutorial.useful">
   <title>Algo &uacute;til</title>
   <para>
    Hagamos ahora algo que puede ser m&aacute;s &uacute;til. Vamos a
    chequear qu&eacute; clase de navegador web utiliza. Para hacerlo,
    vamos a consultar la informaci&oacute;n que el navegador nos
    env&iacute;a como parte de su petici&oacute;n HTTP. Esta
    informaci&oacute;n es guardada en una <link
    linkend="language.variables">variable</link>. Las variables
    siempre comienzan con un signo de d&oacute;lar ("$") en PHP. La
    variable que vamos a utilizar en esta situaci&oacute;n
    es <varname>$_SERVER["HTTP_USER_AGENT"]</varname>.
   </para>
   <note>
    <para>
     <link linkend="reserved.variables.server">$_SERVER</link> es una
     variable reservada por PHP que contiene toda la
     informaci&oacute;n del servidor web. Es conocida como Autoglobal
     (o Superglobal).

     Consulte el manual en su secci&oacute;n titulada <link
     linkend="language.variables.superglobals">Autoglobales</link>
     para mas informaci&oacute;n. &Eacute;stas son variables
     especiales que fueron introducidas en la versi&oacute;n <link
     xlink:href="&url.php.release4.1.0;">4.1.0</link> de PHP. Antes
     pod&iacute;amos usar las
     matrices <varname>$HTTP_*_VARS</varname>, tales como
     <varname>$HTTP_SERVER_VARS</varname>. Aunque &eacute;stas han
     sido marcadas como obsoletas, tales matrices todav&iacute;a
     existen. (Tambi&eacute;n puede echar un vistazo a las notas
     relacionadas con el <link
     linkend="tutorial.oldcode">c&oacute;digo antiguo</link>.)
    </para>
   </note>
   <para>
    Para poder ver esta variable solo necesita:
   </para>
   <para>
    <example>
    <title>Impresi&oacute;n de una variable (elemento de la
    matriz)</title>
    <programlisting role="php">
<![CDATA[
<?php echo $_SERVER["HTTP_USER_AGENT"]; ?>
]]>
    </programlisting>
    <para>
     Un ejemplo de los resultados de este programa ser&iacute;a:
    </para>
      <screen role="html">Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)
      </screen>

   </example>
   </para>
   <para>
    Hay muchos <link linkend="language.types">tipos</link> de
    variables en PHP.  En el ejemplo anterior imprimimos una <link
    linkend="language.types.array">matriz</link>. Las matrices pueden
    ser muy &uacute;tiles.
   </para>
   <para>
    <varname>$_SERVER</varname> es simplemente una variable que se
    encuentra disponible autom&aacute;ticamente para usted en
    PHP. Puede encontrar una lista en la secci&oacute;n titulada <link
    linkend="reserved.variables">Variables Reservadas</link> del
    manual, o puede generar una lista completa creando un archivo como
    el presentado a continuaci&oacute;n:
   </para>
   <para>
    <example>
     <title>Consultar todas las variables predefinidas
     con <function>phpinfo</function></title>
     <programlisting role="php">
<![CDATA[
<?php phpinfo(); ?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Si abre este archivo con su navegador, puede ver una p&aacute;gina
    con informaci&oacute;n acerca de PHP, junto a una lista de todas
    las variables que puede usar.
   </para>
   <para>
    Puede usar m&aacute;s de un declaraci&oacute;n PHP dentro de una
    etiqueta PHP, y crear peque&ntilde;os segmentos de c&oacute;digo
    que pueden hacer m&aacute;s que un "echo". Por ejemplo, si
    quisi&eacute;ramos detectar el uso de "Internet Explorer",
    har&iacute;amos algo as&iacute;:
   </para>
   <para>
    <example>
     <title>Ejemplos de uso de <link
     linkend="language.control-structures">estructuras de control
     </link> y <link linkend="functions">funciones</link></title>
     <programlisting role="php">
<![CDATA[
<?php
if (strstr($_SERVER["HTTP_USER_AGENT"], "MSIE")) {
	echo "Est&aacute; usando Internet Explorer<br />";
}
?>
]]>
     </programlisting>
     <para>
      Un ejemplo de los resultado del script puede ser:
      </para>
      <screen role="html">
<![CDATA[
Est&aacute; usando Internet Explorer<br />
]]>
      </screen>
     </example>
   </para>
   <para>
    A continuaci&oacute;n introduciremos un par de conceptos
    nuevos. Tenemos una declaraci&oacute;n
    <link linkend="control-structures.if">"if"</link>. Si est&aacute;
    familiarizado con la sintaxis b&aacute;sica del lenguaje "C", esto
    se vera l&oacute;gico, Pero si no entiende "C", u otros lenguajes
    de programaci&oacute;n donde encuentra la sintaxis usada
    anteriormente, probablemente deber&iacute;a conseguir un libro que
    le introduzca mejor a PHP, y lea los primeros cap&iacute;tulos, o
    tambi&eacute;n puede ver la parte del manual titulada <link
    linkend="langref">Referencia del lenguaje</link>.  Puedes
    encontrar una lista de libros sobre PHP en <link
    xlink:href="&url.php.books;">&url.php.books;</link>.
   </para>
   <para>
    El segundo concepto que introducimos fue la funci&oacute;n llamada
    <function>strstr</function>. <function>strstr</function> es una
    funci&oacute;n integrada de PHP que busca un cadena dentro de otra
    cadena m&aacute;s larga. En el caso anterior estamos buscando
    <literal>"MSIE"</literal> dentro de
    <varname>$_SERVER["HTTP_USER_AGENT"]</varname>. Si la cadena fue
    encontrada, la funci&oacute;n devolver&aacute; verdadero
    ("&true;"), la declaraci&oacute;n
    <link linkend="control-structures.if">"if"</link> se eval&uacute;a
    a verdadero ("&true;") y el c&oacute;digo adentro de las llaves {}
    es ejecutado. De otra manera no resulta ejecutado. T&oacute;mese
    la libertad de crear ejemplos similares usando <link
    linkend="control-structures.if">"if"</link>, <link
    linkend="control-structures.else">"else" ("de otra
    manera")</link>, y otras funciones
    como <function>strtoupper</function>
    y <function>strlen</function>. Cada p&aacute;gina del manual
    contiene ejemplos que puede usar. Si no est&aacute; seguro sobre
    el modo de uso &eacute;stas funciones, es recomendable que lea las
    p&aacute;ginas del manual tituladas <link
    linkend="about.prototypes">C&oacute;mo leer una definici&oacute;n
    de funci&oacute;n</link> y la secci&oacute;n relacionada a <link
    linkend="functions">Funciones en PHP</link>
   </para>
   <para>
    Podemos continuar y demostrar c&oacute;mo puede saltar adentro y
    afuera del modo PHP en el medio de un bloque de c&oacute;digo.
    </para>
   <para>
    <example>
     <title>Mezcla de los modos HTML y PHP</title>
     <programlisting role="php">
<![CDATA[
<?php
if (strstr($_SERVER["HTTP_USER_AGENT"], "MSIE")) {
?>
<h3>strstr debe haber devuelto verdadero</h3>
<center><b>Est&aacute; usando Internet Explorer</b></center>
<?php
} else {
?>
<h3>strstr debi&oacute; devolver falso</h3>
<center><b>No est&aacute; usando Internet Explorer</b></center>
<?php
}
?>
]]>
     </programlisting>
     <para>
      Un ejemplo de los resultados de este script puede ser:
     </para>
            <screen role="html">
<![CDATA[
<h3>strstr debe haber devuelto verdadero </h3>
<center><b>Est&aacute; usando Internet Explorer</b></center>
]]>
      </screen>
    </example>
   </para>
   <para>
    En vez de usar una sentencia PHP "echo" para demostrar algo,
    saltamos fuera del c&oacute;digo PHP y escribimos HTML puro. Este
    es un punto muy importante y potente que debemos observar
    aqu&iacute;, y es que la fluidez l&oacute;gica del script
    est&aacute; intacta. S&oacute;lamente las partes donde hay HTML
    ser&aacute;n enviadas a su navegador dependiendo de los resultados
    que <function>strstr</function> devuelve (si fue verdadero
    [&true;], o falso [&false;]). En otras palabras, si la cadena
    <literal>MSIE</literal> fue encontrada o no.
   </para>
  </sect1>
   
  <sect1 xml:id="tutorial.forms">
   <title>Uso de Formularios HTML</title>
   <para>
    Otra de las caracter&iacute;sticas de PHP es que gestiona
    formularios de HTML. El concepto b&aacute;sico que es importante
    entender es que cualquier elemento de los formularios
    estar&aacute; disponible autom&aacute;ticamente en su
    c&oacute;digo PHP. Por favor refi&eacute;rase a la secci&oacute;n
    titulada <link linkend="language.variables.external">Variables
    fuera de PHP</link> en el manual para m&aacute;s
    informaci&oacute;n y ejemplos sobre c&oacute;mo usar formularios
    HTML con PHP. Observemos un ejemplo:
   </para>
   <para>
    <example>
     <title>Un formulario HTML sencillo</title>
     <programlisting role="html">
<![CDATA[
<form action="accion.php" method="POST">
 Su nombre: <input type="text" name="nombre" />
 Su edad: <input type="text" name="edad" />
 <input type="submit">
</form>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    No hay nada especial en este formularo, es HTML limpio sin ninguna
    clase de etiquetas desconocidas. Cuando el cliente llena
    &eacute;ste formulario y oprime el bot&oacute;n etiquetado
    "Submit", una p&aacute;gina
    titulada <filename>accion.php</filename> es llamada. En este
    archivo encontrar&aacute; algo as&iacute;:
   </para>
   <para>
    <example>
     <title>Procesamiento de informaci&oacute;n de nuestro formulario
     HTML</title>
     <programlisting role="php">
<![CDATA[
Hola <?php echo $_POST["nombre"]; ?>.
Tiene <?php echo $_POST["edad"]; ?> a&ntilde;os
]]>
     </programlisting>
     <para>
      Un ejemplo del resultado de este script podr&iacute;a ser:
     </para>
      <screen role="html">

Hola Jos&eacute;.
Tiene 22 a&ntilde;os

      </screen>
    </example>
   </para>
   <para>
    Es aparentemente obvio lo que hace. No hay mucho m&aacute;s que
    decir al respecto. Las
    variables <varname>$_POST["nombre"]</varname>
    y <varname>$_POST["edad"]</varname> son definidas
    autom&aacute;ticamente por PHP. Hace un momento usamos la variable
    autoglobal <varname>$_SERVER</varname>, ahora hemos introducido
    autoglobal <link linkend="reserved.variables.post">$_POST</link>,
    que contiene toda la informaci&oacute;n enviada por el
    m&eacute;todo POST. F&iacute;jese en el
    atributo <emphasis>method</emphasis> en nuestro formulario; es
    POST. Si hubi&eacute;ramos usado <emphasis>GET</emphasis>,
    entonces nuestra informaci&oacute;n estar&iacute;a en la variable
    autoglobal <link
    linkend="reserved.variables.get">$_GET</link>. Tambi&eacute;n
    puede utilizar la autoglobal <link
    linkend="reserved.variables.request">$_REQUEST</link> si no le
    importa el origen de la petici&oacute;n. &Eacute;sta variable
    contiene una mezcla de informaci&oacute;n GET, POST y
    COOKIE. Tambi&eacute;n puede ver la funci&oacute;n
    <function>import_request_variables</function>.
   </para>
  </sect1>
  
  <sect1 xml:id="tutorial.oldcode">
   <title>Use de c&oacute;digo antiguo con nuevas versiones de
   PHP</title>
   <para>
    Ahora que PHP ha crecido y se ha convertido en un lenguaje
    popular, hay muchos m&aacute;s recursos que contienen
    c&oacute;digo que puede reusar en sus propios programas. Por lo
    general, las personas que se encargan del desarrollo de PHP tratan
    de que el lenguaje sea compatible con versiones anteriores, para
    que los programas escritos con versiones antiguas contin&uacute;en
    funcionando cuando instale una nueva versi&oacute;n de PHP. En un
    mundo perfecto, nunca necesitar&iacute;a modificar su
    c&oacute;digo para hacerlo funcionar con versiones nuevas del
    lenguaje; pero, como todos sabemos, este no es un mundo perfecto,
    y usualmente son necesarios los cambios en su c&oacute;digo.
   </para>
   <para>
    Dos de los cambios mas importantes que afectan el c&oacute;digo
    viejo son:
    <itemizedlist>
     <listitem>
      <simpara>
       La desaparici&oacute;n de las
       matrices <varname>$HTTP_*_VARS</varname> (que usualmente son
       usadas como globales al interior de una funci&oacute;n o
       m&eacute;todo). Las siguientes <link
       linkend="language.variables.superglobals">matrices
       autoglobales</link> fueron introducidas en la
       versi&oacute;n <link
       xlink:href="&url.php.release4.1.0;">4.1.0</link> de PHP. Estas son:
       <varname>$_GET</varname>, <varname>$_POST</varname>, 
       <varname>$_COOKIE</varname>, <varname>$_SERVER</varname>,
       <varname>$_FILES</varname>, <varname>$_ENV</varname>, <varname>$_REQUEST</varname>,
       y
       <varname>$_SESSION</varname>. Las
       antiguas <varname>$HTTP_*_VARS</varname>, como $HTTP_POST_VARS,
       todav&iacute;a existen, y han existido desde PHP 3.
      
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Las variables externas que ya no son registradas
       autom&aacute;ticamente. En otras palabras, a partir de
       PHP <link xlink:href="&url.php.release4.2.0;">4.2.0</link>, la
       directiva PHP <link
       linkend="ini.register-globals">register_globals</link>
       est&aacute; <emphasis>deshabilitada</emphasis> (su valor es
       off) en &php.ini;. El m&eacute;todo preferido para obtener
       acceso a &eacute;stos valores es por medio de las "matrices
       autoglobales" mencionados anteriormente. Los scripts, libros y
       tutoriales antiguos pueden asumir que &eacute;sta directiva es
       definida autom&aacute;ticamente como "on". Si es as&iacute;,
       puede usar, por ejemplo,
       <varname>$id</varname> desde la URL 
       <literal>http://www.example.com/foo.php?id=42</literal>. Por
       otra parte, no importa si el valor de la directiva es "on" u
       "off", <varname>$_GET['id']</varname> est&aacute; siempre disponible.
      </simpara>
     </listitem>
    </itemizedlist>
     Para m&aacute;s detalles relacionados con estos cambios, puede ver la
     secci&oacute;n sobre
     <link linkend="language.variables.predefined">variables
     predefinidas</link>.
   </para>
  </sect1>
  
  <sect1 xml:id="tutorial.whatsnext">
   <title>&iquest;Y ahora qu&eacute;?</title>
   <para>
    Con lo que hemos visto, puede entender la mayor parte del manual,
    y tambi&eacute;n los ejemplos que est&aacute;n disponibles en los
    archivos. Tambi&eacute;n puede encontrar otros ejemplos en los
    diferentes sitios de php.net en la secci&oacute;n de enlaces:
    <link xlink:href="&url.php.links;">&url.php.links;</link>.
   </para>
   <para>
    Para ver una presentaci&oacute;n que muestra m&aacute;s acerca de
    lo que puede hacer PHP, visite los diferentes sitios con material
    relacionado a las conferencias realizadas: <link
    xlink:href="&url.php.conf;"> &url.php.conf;</link> y <link
    xlink:href="&url.php.talks;">&url.php.talks;</link>.
   </para>
  </sect1>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
