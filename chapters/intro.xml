<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 306611 Maintainer: yago Status: ready -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info><title>Introducción</title></info>

  <section xml:id="intro-whatis">
   <info><title>¿Qué es PHP?</title></info>
   <para>
    <acronym>PHP</acronym> (acrónimo de <literal>PHP: Hypertext
    Preprocessor</literal>) es un lenguaje de código abierto
    muy popular especialmente adecuado para desarrollo web y que
    puede ser incrustado en HTML.
   </para>
   <para>
    Una respuesta corta y concisa, pero, ¿qué significa
    realmente? Un ejemplo nos aclarará las cosas:
   </para>
   <para>
    <example>
     <info><title>Un ejemplo introductorio</title></info>
     <programlisting role="php">
<![CDATA[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
    "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>Example</title>
    </head>
    <body>

        <?php
            echo "Hola, ¡soy un script PHP!";
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    En lugar de usar muchos comandos para mostar HTML (como en C o Perl),
    páginas PHP contienen HTML con código incluido en el mismo que
    hace "algo" (en este caso, mostrar "Hola ¡soy un script PHP!).
    El código PHP está entre medio de <link
 linkend="language.basic-syntax.phpmode">etiquetas de comienzo y
    final especiales<code>&lt;?php</code> y <code>?&gt;</code></link>
 que nos permitirán entrar y salir del "modo PHP".
   </para>
   <para>
    Lo que distingue a PHP de algo lado-cliente como Javascript,
    es que el código es ejecutado en el servidor, generando HTML
    y enviándolo al cliente. El cliente recibirá
    los resultados de ejecutar el script, sin ninguna posibilidad de
    determinar qué código ha producido el resultado
    recibido. El servidor web puede ser incluso configurado para que
    procese todos los archivos HTML con PHP y entonces no hay manera
    que los usuarios puedan saber que tienes debajo de la manga.
   </para>
   <para>
    Lo mejor de usar PHP es que es extremadamente simple para el
    principiante, pero a su vez, ofrece muchas características
    avanzadas para los programadores profesionales. No sienta miedo de
    leer la larga lista de características de PHP, en poco
    tiempo podrá empezar a escribir sus primeros scripts.
   </para>
   <para>
    Aunque el desarrollo de PHP está centrado en programación de 
    scripts en lado-servidor, se puede utilizar para muchas otras 
    cosas. Siga leyendo y descubra más sobre PHP en la sección <link
    linkend="intro-whatcando">¿Qué se puede hacer con PHP?
    </link> o vaya directo al <link linkend="tutorial">tutorial de
    introducción</link> si solamente está interesado en 
    programación web.
   </para>
  </section>

  <section xml:id="intro-whatcando">
   <info><title>¿Qué se puede hacer con PHP?</title></info>
   <para>
    PHP puede hacer cualquier cosa que se pueda hacer con un script
    CGI, como procesar la información de formularios, generar
    páginas con contenidos dinámicos, o enviar y recibir
    cookies. Y esto no es todo, se puede hacer mucho más.
   </para>
   <para>
    Existen principalmente tres campos en los que se usan scripts en PHP.
    <itemizedlist>
     <listitem>
      <simpara>
       Scripts del lado-servidor. Este es el campo más
       tradicional y el principal foco de trabajo. Se necesitan tres
       cosas para que esto funcione. El intérprete PHP (CGI
       módulo), un servidor web y un navegador. Es necesario 
       hacer funcionar el servidor, con PHP instalado. El
       resultado del programa PHP se puede obtener a través del
       navegador, conectándose con el servidor web. Consultar
       la sección <link linkend="install"> Instrucciones
       de instalación</link> para más información.
      </simpara>
     </listitem>
     <listitem>
      <simpara>      
       Scripts en la línea de comandos. Puede crear un script
       PHP y correrlo sin necesidad de un servidor web o
       navegador. Solamente necesita el intérprete PHP para
       usarlo de esta manera. Este tipo de uso es ideal para scripts
       ejecutados regularmente desde cron (en *nix o Linux) o el
       Planificador de tareas (en Windows). Estos scripts
       también pueden ser usados para tareas simples de
       procesamiento de texto. Consultar la sección <link
       linkend="features.commandline">Usos de PHP en la línea
       de comandos</link> para más información.       
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Escribir aplicaciones de interfaz gráfica. Probablemente
       PHP no sea el lenguaje más apropiado para escribir
       aplicaciones gráficas, pero si conoce bien PHP, y
       quisiera utilizar algunas características avanzadas en
       programas clientes, puede utilizar PHP-GTK para escribir dichos
       programas. También es posible escribir aplicaciones
       independientes de una plataforma. PHP-GTK es una
       extensión de PHP, no disponible en la
       distribución principal. Si está interesado en
       PHP-GTK, puedes visitar las
       <link xlink:href="&url.php.gtk;">páginas web del
       proyecto</link>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP puede ser <link linkend="install">utilizado</link> en cualquiera de los principales sistemas
    operativos del mercado, incluyendo Linux, muchas variantes Unix
    (incluyendo HP-UX, Solaris y OpenBSD), Microsoft Windows, Mac OS
    X, RISC OS y probablemente alguno más.  PHP soporta la
    mayoría de servidores web de hoy en día, incluyendo
    Apache, IIS, y muchos otros. Esto incluye cualquier servidor web
    que pueda utilizar el binario PHP de FastCGI, como lighttpd y nginx.
    PHP funciona ya sea como un módulo, o como un procesador de CGI.
   </para>
   <para>
    De modo que, con PHP tiene la libertad de elegir el sistema
    operativo y el servidor web de su gusto. Además, tiene la
    posibilidad de utilizar programación por procedimientos,
    programación orientada a objetos (POO), o una mezcla de ambas.
   </para>
   <para>
    Con PHP no se encuentra limitado a resultados en HTML. Entre las
    habilidades de PHP se incluyen: creación de
    imágenes, archivos PDF e incluso películas Flash (usando
    libswf y Ming) sobre la marcha. Tambié puede presentar
    otros resultados, como XHTML y cualquier otro tipo de ficheros XML. 
    PHP puede autogenerar éstos archivos y almacenarlos en el sistema 
    de archivos en vez de presentarlos en la pantalla, creando un 
    caché en el lado-servidor para contenido dinámico.    
   </para>
   <para>
    Una de las características más potentes y destacables de PHP es su
    soporte para <link linkend="refs.database">una gran cantidad de bases de datos</link>.
    Escribir una página web con acceso habilitado a una base de datos es increiblemente simple
    utilizando una de las extensiones específicas (por ejemplo, para <link linkend="book.mysqli">mysql</link>),
    o utilizar una capa de abstracción como <link linkend="book.pdo">PDO</link>, o conectarse
    a cualquier base de datos que soporte el estándar de Conexión Abierta a Bases de Datos por medio de la extensión
    <link linkend="book.uodbc">ODBC</link>. Otras bases de datos podrían utilizar
    <link linkend="book.curl">cURL</link> o <link linkend="book.sockets">sockets</link>,
    como lo hace CouchDB.
   </para>
   <para>
    PHP también cuenta con soporte para comunicarse con otros
    servicios usando protocolos tales como LDAP, IMAP, SNMP, NNTP,
    POP3, HTTP, COM (en Windows) y muchos otros. También se
    pueden crear sockets puros e interactuar usando cualquier otro
    protocolo. PHP soporta WDDX para el intercambio
    de datos entre lenguajes de programación en web. Y hablando
    de interconexión, PHP puede utilizar objetos Java de forma
    transparente como objetos de PHP.
   </para>
   <para>
    PHP tiene útiles características de <link linkend="refs.basic.text">procesamiento de texto</link>,
    las cuales incluyen las Expresiones Regulares Compatibles de Perl (<link linkend="book.pcre">PCRE</link>),
    muchas extensiones, y herramientas para el <link linkend="refs.xml">acceso y análisis de documentos XML</link>.
    PHP estandardiza todas las extensiones XML sobre el fundamento sólido de <link linkend="book.libxml">libxml2</link>,
    y extiende este conjunto de características añadiendo soporte para <link linkend="book.simplexml">SimpleXML</link>,
    <link linkend="book.xmlreader">XMLReader</link> y <link linkend="book.xmlwriter">XMLWriter</link>.
   </para>
   <para>
    Existen otras extensiones interesantes, las cuales están categorizadas
    <link linkend="extensions">alfabéticamente</link> y por <link linkend="funcref">categoría</link>.
    Hay extensiones adicionales PECL que podrían estar documentadas o no
    dentro del manual de PHP, tal como <link xlink:href="&url.xdebug;">XDebug</link>.
   </para>
   <para>
    Como puede apreciar, esta página no es suficiente para
    enumerar todas las características y beneficios que PHP
    ofrece. Consulte las secciones
    <link linkend="install">Instalación de PHP</link> y
    <link linkend="funcref">Referencia de las funciones</link> para
    una explicación de las extensiones mencionadas aquí.
   </para>
  </section>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
