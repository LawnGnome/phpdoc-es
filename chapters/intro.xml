<?xml version="1.0" encoding="iso-8859-1"?>
 <chapter id="introduction">
  <title>Introducci&oacute;n</title>

  <sect1 id="intro-whatis">
   <title>Qu&eacute; es PHP?</title>
   <simpara>
    PHP (acronimo de "PHP: Hypertext Preprocessor") es un lenguaje interpretado 
    de alto nivel embebido en p&aacute;ginas HTML y ejecutado en el servidor.
   </simpara>
   <para>
    Una respuesta corta y concisa, pero que significa realmente? Un ejemplo 
    nos aclarar&aacute; las cosas:
   </para>
   <para>
    <example>
     <title>Un ejemplo introductorio</title>
     <programlisting role="php">
&lt;html&gt;
    &lt;head&gt;
        &lt;title&gt;Ejemplo PHP&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;?php echo "Hola, este es un ejemplo con PHP!"; ?&gt;
    &lt;/body&gt;
&lt;/html&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Podemos ver que no es lo mismo que un script CGI escrito en otro
    lenguaje de programaci&oacute;n como Perl o C -- En vez de escribir un programa
    con muchos comandos para crear una salida en HTML, escribimos el c&oacute;digo 
    HTML con cierto c&oacute;digo PHP embebido (introducido) en el mismo, que producir&aacute; cierta 
    salida (en nuestro ejemplo, producir un texto). El c&oacute;digo PHP se incluye  
    entre <link linkend="language.basic-syntax.phpmode">etiquetas especiales de comienzo y final</link> 
    que nos permitir&aacute;n entrar y salir del modo PHP.
   </para>
   <para>
    Lo que distingue a PHP de la tecnolog&iacute;a Javascript, la cual se ejecuta en 
    la m&aacute;;quina cliente, es que el c&oacute;digo PHP es ejecutado en el servidor.
    Si tuviesemos un script similar al de nuestro ejemplo en nuestro servidor, 
    el cliente s&oacute;lamente recibir&iacute;a el resultado de su ejecuci&oacute;n en el
    servidor, sin ninguna posibilidad de determinar que c&oacute;digo ha producido 
    el resultado recibido. El servidor web puede ser incluso configurado para 
    que procese todos los ficheros HTML con PHP.
   </para>
  </sect1>

  <sect1 id="intro-whatcando">
   <title>Qu&eacute; se puede hacer con PHP?</title>
   <para>
    Al nivel m&aacute;s b&aacute;sico, PHP puede hacer cualquier cosa que se pueda hacer
    con un script CGI, como procesar la informaci&oacute;n de formularios, 
    generar p&aacute;ginas con contenidos din&aacute;micos, o mandar y recibir cookies.
   </para>
   <para>
    Quizas la caracter&iacute;stica m&aacute;s potente y destacable de PHP es su soporte 
    para una gran cantidad de bases de datos. Escribir un interfaz via web 
    para una base de datos es una tarea simple con PHP. Las siguientes
    bases de datos est&aacute;n soportadas actualmente:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 and OCI8)</member>
      <member>PostgreSQL</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
   </para>
   <para>
    PHP tambi&eacute;n soporta el uso de otros servicios que usen protocolos
    como IMAP, SNMP, NNTP, POP3, HTTP y derivados. Tambien se pueden abrir
    sockets de red directos (raw sockets) e interactuar con otros protocolos.
   </para>
<!--
   <figure>
    <title>Estructura interna</title>
    <graphic fileref="../images/php3_internal_structure.gif"/>
   </figure>
   <figure>
    <title>Esquema de peticiones </title>
    <graphic fileref="../images/php3_request_scheme.gif"/>
   </figure>
-->
  </sect1>

  <sect1 id="intro-history">
   <title>Corta historia de PHP</title>
   <simpara>
    PHP fue concebido en otono de 1994 por &link.rasmus;. Las primeras 
    versiones no distribuidas al p&uacute;blico fueron usadas en un sus p&aacute;ginas
    web para mantener un control sobre quien consultaba su curr&iacute;culum.
    La primera versi&oacute;n disponible para el p&uacute;blico a principios de 1995
    fue conocida como "Herramientas para paginas web personales" 
    (Personal Home Page Tools). Consistian en un analizador sint&aacute;ctico
    muy simple que solo entendia unas cuantas macros y una serie de 
    utilidades comunes en las p&aacute;ginas web de entonces, un libro de visitas, 
    un contador y otras pequenas cosas. El analizador sintactico fue 
    reescrito a mediados de 1995 y fue nombrado PHP/FI version 2. FI
    viene de otro programa que Rasmus habia escrito y que procesaba
    los datos de formularios. Asi que combin&oacute; las "Herramientas para
    paginas web personales", el "int&eacute;rprete de formularios", anadio 
    soporte para mSQL y PHP/FI vio la luz. PHP/FI crecio a gran velocidad
    y la gente empez&oacute; a contribuir en el c&oacute;digo.
   </simpara>
   <simpara>
    Es dif&iacute;cil dar estad&iacute;sticas exactas, pero se estima que a finales
    de 1996 PHP/FI se estaba usando al menos en 15.000 p&aacute;ginas web 
    alrededor del mundo. A mediados de 1997 este n&uacute;mero habia crecido
    a mas de 50.000. A mediados de 1997 el desarrollo del proyecto sufrio 
    un profundo cambio, dej&oacute; de ser un proyecto personal de Rasmus, al cual
    habian ayudado un grupo de usuarios y se convirtio en un proyecto 
    de grupo mucho m&aacute;s organizado. El analizador sint&aacute;ctico se reescribio
    desde el principio por Zeev Suraski y Andi Gutmans y este nuevo analizador 
    establecio las bases para PHP versi&oacute;n 3. Gran cantidad de codigo de PHP/FI
    fue portado a PHP3 y otra gran cantidad fue escrito compl&eacute;tamente de nuevo.
   </simpara>
   <simpara>
    Hoy en d&iacute;a (finales 1999), tanto PHP/FI como PHP3 se distribuyen
    en un gran n&uacute;mero de productos comerciales tales como el servidor
    web "C2's StrongHold" y Redhat Linux. Una estimaci&oacute;n conservativa
    basada en estad&iacute;sticas de <ulink url="&url.netcraft;">NetCraft</ulink>
    (ver tambi&eacute;n <ulink url="&url.netcraft-survey;">Estudio de NetCraft 
    sobre servidores web</ulink>), es que m&aacute;s de 1.000.000 de servidores 
    alrededor del mundo usan PHP. Para hacernos una idea, este n&uacute;mero es 
    mayor que el n&uacute;mero de servidores que utilizan el "Netscape's Enterprise server" 
    en Internet.
   </simpara>
<!--
   <figure>
    <title>Estudio de NetCraft sobre servidores web</title>
    <graphic fileref="../images/phpstats-199911.gif"/>
   </figure>
-->
   <simpara>
    A la vez que todo esto est&aacute; pasando, el trabajo de desarrollo de
    la pr&oacute;xima generaci&oacute;n de PHP est&aacute; en marcha. Esta versi&oacute;n utiliza
    el potente motor de scripts <ulink url="&url.zend;">Zend</ulink> para 
    proporcionar altas prestaciones, as&iacute; como soporta otros servidores
    web, adem&aacute;s de apache, que corren PHP como m&oacute;dulo nativo. 
   </simpara>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->



