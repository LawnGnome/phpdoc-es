<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.34 Maintainer: rafael Status: ready -->

 <chapter id="introduction">
  <title>Introducci&oacute;n</title>

  <sect1 id="intro-whatis">
   <title>Qu&eacute; es PHP?</title>
   <simpara>
    PHP (acronimo de "PHP: Hypertext Preprocessor") es un lenguaje "open source" interpretado 
    de alto nivel embebido en p&aacute;ginas HTML y ejecutado en el servidor.
   </simpara>
   <para>
    Una respuesta corta y concisa, pero que significa realmente? Un ejemplo 
    nos aclarar&aacute; las cosas:
   </para>
   <para>
    <example>
     <title>Un ejemplo introductorio</title>
     <programlisting role="php">
<![CDATA[
<html>
    <head>
        <title>Example</title>
    </head>
    <body>

        <?php 
        echo "Hi, I'm a PHP script!"; 
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Podemos ver que no es lo mismo que un script escrito en otro
    lenguaje de programaci&oacute;n como Perl o C -- En vez de escribir un programa
    con muchos comandos para crear una salida en HTML, escribimos el c&oacute;digo 
    HTML con cierto c&oacute;digo PHP embebido (introducido) en el mismo, que producir&aacute; cierta 
    salida (en nuestro ejemplo, producir un texto). El c&oacute;digo PHP se incluye  
    entre <link linkend="language.basic-syntax.phpmode">etiquetas especiales de comienzo y final</link> 
    que nos permitir&aacute;n entrar y salir del modo PHP.
   </para>
   <para>
    Lo que distingue a PHP de la tecnolog&iacute;a Javascript, la cual se ejecuta en 
    la m&aacute;quina cliente, es que el c&oacute;digo PHP es ejecutado en el servidor.
    Si tuviesemos un script similar al de nuestro ejemplo en nuestro servidor, 
    el cliente s&oacute;lamente recibir&iacute;a el resultado de su ejecuci&oacute;n en el
    servidor, sin ninguna posibilidad de determinar que c&oacute;digo ha producido 
    el resultado recibido. El servidor web puede ser incluso configurado para 
    que procese todos los ficheros HTML con PHP.
   </para>
   <para>
    Lo mejor de usar PHP es que es extremadamente simple para el principiante, pero
    a su vez, ofrece muchas caracteristicas avanzadas para los programadores profesionales. No
    tengais miedo de leer la larga lista de caracteristicas de PHP, en poco tiempo
    podreis empezar a escribir vuestros primeros scripts.
   </para>
   <para>
    Aunque el desarrollo de PHP est&aacute; concentrado en la programaci&oacute;n de scripts en la
    parte del servidor, se puede utilizar para muchas otras cosas. Sigue leyendo y 
    descubre m&aacute;s sobre PHP en la secci&oacute;n <link linkend="intro-whatcando">Qu&eacute; se puede hacer con PHP?</link>.
   </para>
  </sect1>

  <sect1 id="intro-whatcando">
   <title>Qu&eacute; se puede hacer con PHP?</title>
   <para>
    PHP puede hacer cualquier cosa que se pueda hacer
    con un script CGI, como procesar la informaci&oacute;n de formularios, 
    generar p&aacute;ginas con contenidos din&aacute;micos, o mandar y recibir cookies. 
    Y esto no es todo, se puede hacer mucho m&aacute;s.
   </para>
   <para>
    Existen tres campos en los que scripts escritos en PHP son usados.
    <itemizedlist>
     <listitem>
      <simpara>
       Scripts en la parte del servidor. Este es el campo m&aacute;s tradicional
       y el principal campo de trabajo. Se necesitan tres cosas para que esto
       funcione. El parseador PHP (CGI &oacute; m&oacute;dulo), un servidor web y un navegador.
       Se necesita correr el servidor web con PHP instalado. El resultado del 
       programa PHP se puede obtener a trav&eacute;s del navegador, conectando con el 
       servidor web. Consultar la secci&oacute;n <link linkend="installation">
       Instrucciones de instalaci&oacute;n</link> para m&aacute;s informaci&oacute;n.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Scripts en linea de comandos. Podeis crear un script PHP
       y correrlo sin ning&uacute;n servidor web &oacute; navegador. Solamente
       necesitais el parseador PHP para usarlo de esta manera.
       Este tipo de uso es ideal para scripts ejecutados regularmente
       desde cron (en *nix &oacute; Linux) &oacute; el Planificador de tareas (en Windows).
       Estos scripts tambien pueden ser usados para tareas simples de procesado de texto.
       Consultar la secci&oacute;n <link linkend="features.commandline">
       Usos de PHP en la linea de comandos</link> para m&aacute;s informaci&oacute;n.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Escribir aplicaciones gr&aacute;ficas clientes. PHP no es probablemente
       el mejor lenguaje para escribir aplicaciones gr&aacute;ficas, pero si
       sabeis bien PHP, y os gustaria utilizar algunas caracter&iacute;sticas
       avanzadas en programas clientes, podeis utilizar PHP-GTK para escribir
       dichos programas. Es tambien posible escribir aplicaciones independientes
       de una plataforma. PHP-GTK es una extensi&oacute;n de PHP, no disponible en la 
       distribuci&oacute;n principal. Si te interesa PHP-GTK, puedes visitar las 
       <ulink url="&url.php.gtk;">p&aacute;ginas web del projecto</ulink>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP puede ser utilizado en cualquiera de los principales 
    sistemas operativos del mercado, incluyendo Linux, muchas
    variantes Unix (incluido HP-UX, Solaris y OpenBSD), 
    Microsoft Windows, Mac OS X, RISC OS y probablemente alguno m&aacute;s.
    PHP soporta la mayor&iacute;a de servidores web de hoy en d&iacute;a, incluyendo 
    Apache, Microsoft Internet Information Server,
    Personal Web Server, Netscape y iPlanet, Oreilly
    Website Pro server, Caudium, Xitami, OmniHTTPd y muchos otros.
    PHP tiene m&oacute;dulos disponibles para la mayor&iacute;a de los servidores, 
    para aquellos otros que soporten el est&aacute;ndar CGI, PHP puede usarse
    como procesador CGI.
   </para>
   <para>
    Asi que, con PHP teneis la libertad de escoger el sistema operativo
    y el servidor de vuestro gusto. Tambien teneis la posibilidad de usar
    programaci&oacute;n de procediminetos &oacute; programaci&oacute;n orientada a objetos. 
    Aunque no todas la caracter&iacute;sticas est&aacute;ndares de la programaci&oacute;n orientada 
    a objetos est&aacute;n implementadas en la versi&oacute;n actual de PHP, muchas librer&iacute;as
    y aplicaciones grandes (incluyendo la libreria PEAR) est&aacute;n escritas
    &iacute;ntegramente usando  programaci&oacute;n orientada a objetos. 
   </para>
   <para>
    Con PHP no estais limitados a resultados en HTML. Entre las
    habilidades de PHP se incluyen, creaci&oacute;n de im&aacute;genes, ficheros PDF
    y pel&iacute;culas Flash (usando libswf y Ming) sobre la marcha. Tambien
    podeis presentar otros resultados, como XHTM y ficheros XML.
    PHP puede autogenerar estos ficheros y grabarlos en el sistema de
    ficheros en vez de presentarlos en la pantalla. 
   </para>
   <para>
    Quizas la caracter&iacute;stica m&aacute;s potente y destacable de PHP es su soporte 
    para una gran cantidad de bases de datos. Escribir un interfaz via web 
    para una base de datos es una tarea simple con PHP. Las siguientes
    bases de datos est&aacute;n soportadas actualmente:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (read-only)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 and OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
     Tambien tenemos una extensi&oacute;n DBX de abstracci&oacute;n de base de datos
     que permite usar de forma transparente cualquier base de datos
     soportada por la extension. Adicionalmente, PHP soporta ODBC (The Open
     Database Connection standard), asi que podeis conectar a cualquier
     base de datos que soporte este estandar. 
   </para>
   <para>
    PHP tambien tiene soporte para comunicarse con otros servicios usando
    protocolos tales como  LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (en Windows)
    y muchos otros. Tambien se pueden crear raw sockets. PHP soporta WDDX para intercambio
    de datos entre lenguajes de programaci&oacute;n en web. Y hablando de
    interconexi&oacute;n, PHP puede utilizar objetos Java de forma transparente como objetos PHP
    Y la extensi&oacute;n de CORBA puede ser utilizada para acceder a objetos remotos. 
   </para>
   <para>
    PHP tiene unas caracter&iacute;sticas muy &uacute;tiles para el proceso de texto, 
    desde expresiones regulares POSIX Extended &oacute; Perl hasta parseador
    de documentos XML. Para parsear y acceder documentos XML, soportamos
    los estandares SAX y DOM. Podeis utilizar la extensi&oacute;n XSLT para transformar
    documentos XML.
   </para>
   <para>
    Si usais PHP en el campo del comercio electr&oacute;nico, encontrareis
    muy &uacute;tiles las funciones Cybercash, CyberMUT, VeriSign Payflow
    Pro y CCVS para vuestros programas de pago.
   </para>
   <para>
    Para terminar, tenemos muchas otras extensiones muy interesantes, 
    las funciones del motor de b&uacute;squedas mnoGoSearch, funciones para 
    pasarelas de IRC, utilidades de compresi&oacute;n (gzip, bz2),, conversi&oacute;n
    de calendarios, traducci&oacute;n ..... 
   </para>
   <para>
    Como podeis ver esta p&aacute;gina no es suficiente para enumerar todas
    las caracter&iacute;sticas y beneficios que PHP ofrece. Consultar las secciones
    <link linkend="installation">Instalando PHP</link> y 
    <link linkend="funcref">Referencia de las funciones</link> para una
    explicaci&oacute;n de las extensiones mencionadas aqui.
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->



