<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: lboshell Status: ready -->
<!-- Author: Wez Furlong <wez@thebrainroom.com>
  Please contact me before making any major amendments to the
  content of this section.  Splitting/Merging are fine if they are
  required for php-doc restructuring purposes - just drop me a line
  if you make a change (so I can update my local copy).
-->

 <sect1 id="streams.socket-api">
  <title>Referencia de API de Sockets de Secuencia</title>

  <refentry id="streams.php-stream-sock-open-from-socket">
   <refnamediv>
    <refname>php_stream_sock_open_from_socket</refname>
    <refpurpose>Convertir un descriptor de socket en una
    secuencia</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>php_stream *</type><methodname>php_stream_sock_open_from_socket</methodname>
      <methodparam><type>int</type><parameter>socket</parameter></methodparam>
      <methodparam><type>int</type><parameter>persistente</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>php_stream_sock_open_from_socket</function> devuelve
     una secuencia basada en el
     <parameter>socket</parameter>. <parameter>persistente</parameter>
     es una bandera que controla si la secuencia es abierta como una
     secuencia persistente. Por lo general, este par&aacute;metro
     ser&aacute; 0 en un gran n&uacute;mero de casos.
     </para>
   </refsect1>
  </refentry>

  <refentry id="streams.php-stream-sock-open-host">
   <refnamediv>
    <refname>php_stream_sock_open_host</refname>
    <refpurpose>Abrir una conexi&oacute;n con un servidor
    hu&eacute;sped y devolver una secuencia</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>php_stream *</type><methodname>php_stream_sock_open_host</methodname>
      <methodparam><type>const char *</type><parameter>host</parameter></methodparam>
      <methodparam><type>unsigned short</type><parameter>puerto</parameter></methodparam>
      <methodparam><type>int</type><parameter>tipo_sock</parameter></methodparam>
      <methodparam><type>struct timeval *</type><parameter>tiempo_espera</parameter></methodparam>
      <methodparam><type>int</type><parameter>persistente</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>php_stream_sock_open_host</function> establece una
     conexi&oacute;n con el <parameter>host</parameter> y
     <parameter>puerto</parameter>
     especificados. <parameter>tipo_sock</parameter> especifica la
     sem&aacute;ntica de conexi&oacute;n que debe aplicarse a la
     misma. Los valores de <parameter>tipo_sock</parameter> dependen
     del sistema, pero usualmente incluyen (como m&iacute;nimo)
     <constant>SOCK_STREAM</constant> para secuencias basadas en
     conexiones secuenciales, confiables y de doble v&iacute;a (TCP),
     o <constant>SOCK_DGRAM</constant> para mensajes sin
     conexi&oacute;n, no confiables y una longitud m&aacute;xima
     (UDP).
    </para>
    <para>
      <parameter>persistente</parameter> es una bandera que controla
      si la secuencia es abierta como una secuencia persistente. Por
      lo general, este par&aacute;metro ser&aacute; 0.
    </para>
    <para>
     Si es diferente a NULL, <parameter>tiempo_espera</parameter>
     especifica un tiempo m&aacute;ximo para permitir que se
     establezca la conexi&oacute;n. Si el intento de conexi&oacute;n
     toma m&aacute;s tiempo que el valor de tiempo de espera, el
     intento de conexi&oacute;n es abortado y se devuelve NULL para
     indicar que la secuencia no pudo ser abierta.
    </para>
    <note>
     <simpara>
      El valor de tiempo de espera no incluye el tiempo que toma
      realizar una consulta de DNS. La raz&oacute;n de esto es que no
      hay una forma portable de implementar una consulta DNS que no
      bloquee.
     </simpara>
     <simpara>
      El tiempo de espera s&oacute;lo se aplica a la fase de
      conexi&oacute;n; si necesita establecer los tiempos de espera
      para operaciones posteriores de lectura o escritura,
      deber&iacute;a usar
      <function>php_stream_sock_set_timeout</function> para configurar
      la duraci&oacute;n de tiempo de espera para su secuencia una vez
      &eacute;sta ha sido abierta.
     </simpara>
    </note>
    <para>
     La API de secuencias no coloca restricciones sobre los valores
     que puede usar para <parameter>tipo_socket</parameter>, pero es
     recomendable que considere la portabilidad de los valores que
     elige antes de que libere su extensi&oacute;n.
    </para>
   </refsect1>
  </refentry>

  <refentry id="streams.php-stream-sock-open-unix">
   <refnamediv>
    <refname>php_stream_sock_open_unix</refname>
    <refpurpose>Abrir un socket de dominio Unix y convertirlo en una
    secuencia</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>php_stream *</type><methodname>php_stream_sock_open_unix</methodname>
      <methodparam><type>const char *</type><parameter>ruta</parameter></methodparam>
      <methodparam><type>int</type><parameter>long_ruta</parameter></methodparam>
      <methodparam><type>int</type><parameter>persistente</parameter></methodparam>
      <methodparam><type>struct timeval *</type><parameter>tiempo_espera</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>php_stream_sock_open_unix</function> intenta abrir el
     socket de dominio Unix especificado por
     <parameter>ruta</parameter>. <parameter>long_ruta</parameter>
     especifica la longitud de <parameter>ruta</parameter>. Si
     <parameter>tiempo_espera</parameter> es diferente a NULL,
     &eacute;ste valor indica un periodo de tiempo m&aacute;ximo de
     espera para el intento de
     conexi&oacute;n. <parameter>persistente</parameter> indica si la
     secuencia deber&iacute;a ser abierta como una secuencia
     persistente. Por lo general, &eacute;ste par&aacute;metro
     ser&aacute; 0 en la mayor&iacute;a de casos.
     </para>
     <note>
      <simpara>
       Esta funci&oacute;n no funcionar&aacute; bajo Windows, en donde
       no se implementan sockets de dominio Unix. Una posible
       excepci&oacute;n a esta regla ocurre si su binario de PHP fue
       compilado usando cygwin. Es recomendable que considere este
       aspecto de la portabilidad de su extensi&oacute;n antes de su
       lanzamiento.
      </simpara>
    </note>
    <note>
      <simpara>
       Esta funci&oacute;n trata <parameter>ruta</parameter> en una
       manera segura con material binario, que es apropiada en
       sistemas con un espacio de nombres abstracto (como Linux), en
       donde el primer caracter de una ruta es un caracter NUL.
      </simpara>
    </note>
   </refsect1>
  </refentry>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
