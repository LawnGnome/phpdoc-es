<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: lboshell Status: ready -->
<!-- Author: Wez Furlong <wez@thebrainroom.com>
  Please contact me before making any major amendments to the
  content of this section.  Splitting/Merging are fine if they are
  required for php-doc restructuring purposes - just drop me a line
  if you make a change (so I can update my local copy).
-->

  <sect1 id="streams.structs">
  <title>Estructuras de Secuencia</title>

  <refentry id="streams.struct-php-stream-statbuf">
   <refnamediv>
    <refname>struct php_stream_statbuf</refname>
    <refpurpose>Contiene informaci&oacute;n sobre un archivo o
    URL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <synopsis>
     <structname>php_stream_statbuf</structname>
     <type>struct stat</type><structfield>sb</structfield>
     </synopsis>
    <para>
    <structfield>sb</structfield> es una estructura stat, normal,
    definida por el sistema.
    </para>
   </refsect1>
  </refentry>

  <refentry id="streams.struct-php-stream-dirent">
   <refnamediv>
    <refname>struct php_stream_dirent</refname>
    <refpurpose>Contiene informaci&oacute;n sobre un archivo
    &uacute;nico durante el estudio de un directorio</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <synopsis>
     <structname>php_stream_dirent</structname>
     <type>char</type> <structfield>d_name[MAXPATHLEN]</structfield>
     </synopsis>
    <para>
    <structfield>d_name</structfield> contiene el nombre del archivo,
    relativo al directorio que est&aacute; siendo estudiado.
     </para>
   </refsect1>
  </refentry>
 
  <refentry id="streams.struct-php-stream-ops">
    <refnamediv>
        <refname>struct php_stream_ops</refname>
        <refpurpose>Contiene funciones miembro para una
        implementaci&oacute;n de secuencia</refpurpose>
    </refnamediv>
    <refsect1>
     <title>Descripci&oacute;n</title>
     <programlisting role="c">
<![CDATA[
        typedef struct _php_stream_ops {
             /* todas las secuencias DEBEN implementar estas operaciones */
             size_t (*write)(php_stream *stream, const char *buf, size_t count TSRMLS_DC);
             size_t (*read)(php_stream *stream, char *buf, size_t count TSRMLS_DC);
             int (*close)(php_stream *stream, int close_handle TSRMLS_DC);
             int (*flush)(php_stream *stream TSRMLS_DC);
             
             const char *label; /* nombre que describe esta clase de secuencia */
             
             /* estas operaciones son opcionales, y pueden definirse a NULL si la secuencia no
              * soporta una operacion en particular */
            int (*seek)(php_stream *stream, off_t offset, int whence TSRMLS_DC);
            char *(*gets)(php_stream *stream, char *buf, size_t size TSRMLS_DC);
            int (*cast)(php_stream *stream, int castas, void **ret TSRMLS_DC);
            int (*stat)(php_stream *stream, php_stream_statbuf *ssb TSRMLS_DC);
        } php_stream_ops;
]]>
     </programlisting>
    </refsect1>
  </refentry>
  <refentry id="streams.struct-php-stream-wrapper">
    <refnamediv>
        <refname>struct php_stream_wrapper</refname>
        <refpurpose>Contiene propiedades de envolturas y apuntadores a
        operaciones</refpurpose>
    </refnamediv>
    <refsect1>
     <title>Descripci&oacute;n</title>
     <programlisting role="c">
<![CDATA[
        struct _php_stream_wrapper  {
            php_stream_wrapper_ops *wops;   /* operaciones que puede realizar la envoltura */
            void *abstract;                 /* contexto para la envoltura */
            int is_url;                     /* de modo que PG(allow_url_fopen) pueda respetarse */

            /* soporte para que las envolturas devuelvas (multiples) mensajes de error a quien abre la secuencia */
            int err_count;
            char **err_stack;
        } php_stream_wrapper;
]]>
     </programlisting>
    </refsect1>
  </refentry>
  <refentry id="streams.struct-php-stream-wrapper-ops">
    <refnamediv>
        <refname>struct php_stream_wrapper_ops</refname>
        <refpurpose>Contiene funciones miembro para una
        implementaci&oacute;n de envoltura de secuencia</refpurpose>
    </refnamediv>
    <refsect1>
     <title>Descripci&oacute;n</title>
     <programlisting role="c">
<![CDATA[
        typedef struct _php_stream_wrapper_ops {
            /* abrir/crear una secuencia envuelta */
            php_stream *(*stream_opener)(php_stream_wrapper *wrapper, char *filename, char *mode,
                    int options, char **opened_path, php_stream_context *context STREAMS_DC TSRMLS_DC);
            /* cerrar/destruir una secuencia envuelta */
            int (*stream_closer)(php_stream_wrapper *wrapper, php_stream *stream TSRMLS_DC);
            /* operacion stat sobre una secuencia envuelta */
            int (*stream_stat)(php_stream_wrapper *wrapper, php_stream *stream, php_stream_statbuf *ssb TSR$
            /* operacion stat sobre una URL */
            int (*url_stat)(php_stream_wrapper *wrapper, char *url, php_stream_statbuf *ssb TSRMLS_DC);
            /* abrir una secuencia de "directorio" */
            php_stream *(*dir_opener)(php_stream_wrapper *wrapper, char *filename, char *mode,
                    int options, char **opened_path, php_stream_context *context STREAMS_DC TSRMLS_DC);

            const char *label;

            /* Eliminar/Retirar Enlace de un archivo */
            int (*unlink)(php_stream_wrapper *wrapper, char *url, int options, php_stream_context *context TSRMLS_DC);
        } php_stream_wrapper_ops;
]]>
     </programlisting>
    </refsect1>
  </refentry>
  <refentry id="streams.struct-php-stream-filter">
    <refnamediv>
        <refname>struct php_stream_filter</refname>
        <refpurpose>Contiene propiedades de filtro y apuntadores a
        operaciones</refpurpose>
    </refnamediv>
    <refsect1>
     <title>Descripci&oacute;n</title>
     <programlisting role="c">
<![CDATA[
        struct _php_stream_filter {
            php_stream_filter_ops *fops;
            void *abstract; /* para su uso por la implementacion de filtro */
            php_stream_filter *next;
            php_stream_filter *prev;
            int is_persistent;

            /* enlace a la secuencia y la cadena */
            php_stream_filter_chain *chain;

            /* paquetes en bufer */
            php_stream_bucket_brigade buffer;
        } php_stream_filter;
]]>
     </programlisting>
    </refsect1>
  </refentry>
  <refentry id="streams.struct-php-stream-filter-ops">
    <refnamediv>
        <refname>struct php_stream_filter_ops</refname>
        <refpurpose>Contiene funciones miembro para una
        implementaci&oacute;n de filtro de secuencia</refpurpose>
    </refnamediv>
    <refsect1>
     <title>Descripci&oacute;n</title>
     <programlisting role="c">
<![CDATA[
        typedef struct _php_stream_filter_ops {
            php_stream_filter_status_t (*filter)(
                    php_stream *stream,
                    php_stream_filter *thisfilter,
                    php_stream_bucket_brigade *buckets_in,
                    php_stream_bucket_brigade *buckets_out,
                    size_t *bytes_consumed,
                    int flags
                    TSRMLS_DC);

            void (*dtor)(php_stream_filter *thisfilter TSRMLS_DC);

            const char *label;
} php_stream_filter_ops;
]]>
     </programlisting>
    </refsect1>
  </refentry>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

