<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.17 Maintainer: rafael Status: ready -->

 <chapter id="features.remote-files">
  <title>Usando archivos remotos</title>

  <para>
   Siempre que el soporte para la &quot;envoltura URL fopen&quot; est&eacute;
   habilitado cuando se configura PHP (lo cual ocurre a menos que se
   pasa expl&iacute;citamente la opci&oacute;n
   <option>--disable-url-fopen-wrapper</option> a configure (para versiones
   hasta la 4.0.3), &oacute; configurar como &quot;off&quot; el par&aacute;metro 
   <parameter>allow_url_fopen</parameter> en &php.ini; (para las nuevas versiones))
   se pueden usar URLs HTTP y FTP con la mayor&iacute;a de las funciones
   que toman un archivo como par&aacute;metro, incluyendo las sentencias
   <function>require</function> e <function>include</function>.
  </para>
  <para>
   <note>
    <para>
     La versi&oacute;n actual de <literal>PHP</literal> para Windows no soporta
     el acceso remoto a ficheros en las siguientes funciones: 
     <function>include</function>, <function>include_once</function>,
     <function>require</function> y <function>require_once</function>.
    </para>
   </note>
  </para>
  <para>
   Por ejemplo, se puede usar este para abrir un archivo en un servidor
   web remoto, analizar en la salida la informaci&oacute;n que se quiera, 
   y entonces, usar la informaci&oacute;n en una consulta a base de
   datos, o simplemente para sacarlas en un estilo que coincida con el
   resto de su sitio web.
  </para>

  <para>
   <example>
    <title>Obtener el t&iacute;tulo de una p&aacute;gina remota</title>
  <programlisting role="php">
<![CDATA[
<?php
$file = fopen ("http://www.example.com/", "r");
if (!$file) {
    echo "<p>Unable to open remote file.\n";
    exit;
}
while (!feof ($file)) {
    $line = fgets ($file, 1024);
    /* This only works if the title and its tags are on one line */
    if (eregi ("<title>(.*)</title>", $line, $out)) {
        $title = $out[1];
        break;
    }
}
fclose($file);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Tambi&eacute;n se puede escribir a archivos en un FTP siempre que
   se conecte como un usuario con los correctos derechos de acceso,
   y el archivo no exista ya.Para conectar como un usuario distinto
   de 'anonymous', se necesita especificar el nombre de usuario
   (y posiblemente contrase&ntilde;a) dentro de la URL, tales como
   'ftp://usuario:clave@ftp.ejemplo.com/camino/a/archivo'. (Se puede
   usar la misma clase de sintaxis para acceder a archivos via HTTP 
   cuando se requer&iacute;a una autenticaci&oacute; de
   same sort of syntax to access files via HTTP when they require Basic
   authentication.)
  </para>
 <para>
   <example>
    <title>Almacenando datos en un servidor remoto</title>
    <programlisting role="php">
<![CDATA[
<?php
$file = fopen ("ftp://ftp.example.com/incoming/outputfile", "w");
if (!$file) {
    echo "<p>Unable to open remote file for writing.\n";
    exit;
}
/* Write the data here. */
fputs ($file, $HTTP_SERVER_VARS['HTTP_USER_AGENT'] . "\n");
fclose ($file);
?>
]]>  
    </programlisting>
   </example>
  </para>
  <para>
   <note>
    <para>
     Podeis captar la idea en el ejemplo anterior de como escribir en
     un registro remoto, pero como ya hemos comentado antes, solamente se 
     puede escribir a un fichero nuevo usando la &quot;envoltura URL fopen&quot;  
     Para registros distribuidos, consultar la funci&oacute;n <function>syslog</function>.
    </para> 
   </note>
  </para>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
