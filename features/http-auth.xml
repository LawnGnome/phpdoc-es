<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.36 Maintainer: rafael Status: ready -->

 <chapter xml:id="features.http-auth" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Autentificaci&oacute;n HTTP con PHP</title>
 
 <simpara>
  Las caracter&iacute;ticas de autentificaci&oacute;n HTTP en PHP solo
  est&aacute;n disponibles cuando se est&aacute; ejecutando como un
  m&oacute;dulo en Apache y hasta ahora no lo estan en la
  versi&oacute;n CGI. En un script PHP como m&oacute;dulo de Apache,
  se puede usar la funci&oacute;n <function>header</function> para
  enviar un mensaje de "Autentificaci&oacute;n requerida" al navegador
  cliente haciendo que muestre una ventana de entrada emergente con
  nombre de usuario y contrase&ntilde;a. Una vez que el usuario ha
  rellenado el nombre y la contrase&ntilde;a, la URL que contiene el
  script PHP ser&aacute; llamada de nuevo con las <link
   linkend="reserved.variables">variables predefinidas</link>
  <varname>PHP_AUTH_USER</varname>, <varname>PHP_AUTH_PW</varname>, y
  <varname>AUTH_TYPE</varname> asignadas con el nombre de usuario, la
  contrase&ntilde;a y el tipo de autentificaci&oacute;n
  respectivamente. Estas variables predefinidas se pueden encontrar en
  las matrices <link
   linkend="reserved.variables.server">$_SERVER</link> y
  <varname>$HTTP_SERVER_VARS</varname>. S&oacute;lo
  autentificaci&oacute;n "B&aacute;sica" est&aacute; soportada en este
  momento. Consulte la funci&oacute;n <function>header</function> para
  m&aacute;s informaci&oacute;n.  </simpara>
 
 <note>
  <title>Nota sobre la versi&oacute;n PHP</title>
  <para>
   Las <link
    linkend="language.variables.superglobals">Autoglobales</link>,
   tales como <link
    linkend="reserved.variables.server">$_SERVER</link>, han estado
   disponibles desde la versi&oacute;n de PHP <link
    xlink:href="&url.php.release4.1.0;">4.1.0</link>.
   <varname>$HTTP_SERVER_VARS</varname> ha estado disponible desde
   PHP 3.
  </para>
 </note>
 
 <para>
  Un script de ejemplo que fuerce la autentificaci&oacute;n del
  cliente en una p&aacute;gina ser&iacute;a como el siguiente:
 </para>
 <para>
  <example>
   <title>Ejemplo de autentificaci&oacute;n HTTP</title>
   <programlisting role="php">
<![CDATA[
<?php
  if (!isset($_SERVER['PHP_AUTH_USER'])) {
    header('WWW-Authenticate: Basic realm="My Realm"');
    header('HTTP/1.0 401 Unauthorized');
    echo 'Text to send if user hits Cancel button';
    exit;
  } else {
    echo "<p>Hello {$_SERVER['PHP_AUTH_USER']}.</p>";
    echo "<p>You entered {$_SERVER['PHP_AUTH_PW']} as your password.</p>";
  }
?>
]]>
   </programlisting>
  </example>
 </para>
 
 <note>
  <title>Nota de compatibilidad</title>
  <para>
   Por favor tener cuidado cuando esteis programando las lineas de
   cabecera HTTP.  Para garantizar la m&aacute;xima compatibilidad con todos
   los clientes, la palabra clave &quot;Basic&quot; debe de ser
   escrita con &quot;B&quot; may&uacute;scula, la cadena de texto debe
   estar incluida entre comillas dobles (no simples) y exactamente un
   espacio debe preceder el c&oacute;digo <emphasis>401</emphasis> en
   la linea de cabecera <emphasis>HTTP/1.0 401</emphasis>
  </para>
  </note>
 
 <para>
  En vez de, sencillamente, mostrar <varname>PHP_AUTH_USER</varname> y
  <varname>PHP_AUTH_PW</varname>, seguramente querais comprobar la
  validez del nombre de usuario y la contrase&ntilde;a. Tal vez
  enviando una consulta a una base de datos o buscando el usuario en
  un fichero dbm.
 </para>
 
  <para>
  Vigilar aqu&iacute; los navegadores Interner Explorer con
  bugs. Parecen muy quisquillosos con el orden de las
  cabeceras. Enviar la cabecera
  <emphasis>WWW-Autentificaci&oacute;n</emphasis> antes que la
  cabecera <errorcode>HTTP/1.0 401</errorcode> parece ser el truco por
  ahora.
 </para>

 <simpara>
  En fecha de la versi&oacute;n PHP 4.3.0, para prevenir que alguien escriba
  un script que revele la contrase&ntilde;a de una p&aacute;gina que
  ha sido autentificada a trav&eacute;s de alg&uacute;n mecanismo
  externo tradicional, las variables PHP_AUTH no ser&aacute;n
  asignadas si alg&uacute;n tipo de autentificaci&oacute;n externa ha
  sido activada para la p&aacute;gina en particular. En este caso, la
  variable <varname>REMOTE_USER</varname> puede ser usada para
  identificar al usuario autentificado externamente. Asi que se puedes
  utilizar <varname>$_SERVER['REMOTE_USER']</varname>.
 </simpara>

 <note>
  <title>Configuration Note</title>
  <para>
   PHP usa la directiva <literal>AuthType</literal> para determinar si
   una autentificaci&oacute;n externa esta en uso.
  </para>
 </note>
 
 <simpara>
  Nota, a pesar de todo, lo ya dicho no proteje de que alguien que
  controle una URL no autentificada robe contrase&ntilde;as de URLs
  autentificadas en el mismo servidor.
 </simpara>
 
 <simpara>
   Tanto Netscape como Internet Explorer borrar&aacute;n la
   cach&eacute; de la ventana de autentificaci&oacute;n en el
   navegador local despu&eacute;s de recibir una respuesta 401 del
   servidor. Esto puede usarse, de forma efectiva, para "desconectar"
   a un usuario, forzandole a reintroducir su nombre y
   contrase&ntilde;a. Algunas personas usan esto para &quot;hacer
   caducar&quot; entradas, o para proveer un bot&oacute;n de
   "desconectar".
 </simpara>

 <para>
  <example>
   <title>Ejemplo de autentificaci&oacute;n HTTP forzando una
    reentrada</title>   
   <programlisting role="php">
<![CDATA[
<?php
  function authenticate() {
    header('WWW-Authenticate: Basic realm="Test Authentication System"');
    header('HTTP/1.0 401 Unauthorized');
    echo "You must enter a valid login ID and password to access this resource\n";
    exit;
  }
 
  if (!isset($_SERVER['PHP_AUTH_USER']) ||
      ($_POST['SeenBefore'] == 1 && $_POST['OldAuth'] == $_SERVER['PHP_AUTH_USER'])) {
   authenticate();
  } 
  else {
   echo "<p>Welcome: {$_SERVER['PHP_AUTH_USER']}<br>";
   echo "Old: {$_REQUEST['OldAuth']}";
   echo "<form action='{$_SERVER['PHP_SELF']}' METHOD='POST'>\n";
   echo "<input type='hidden' name='SeenBefore' value='1'>\n";
   echo "<input type='hidden' name='OldAuth' value='{$_SERVER['PHP_AUTH_USER']}'>\n";
   echo "<input type='submit' value='Re Authenticate'>\n";
   echo "</form></p>\n";
  }
?>
]]>
   </programlisting>
  </example>
 </para>
 
 <simpara>
  Este comportamiento no es requerido por el est&aacute;ndar de
  autentificaci&oacute;n b&aacute;sica de HTTP, por lo que nunca debe
  depender de esto. Pruebas con Lynx han demostrado que Lynx no borra
  las credenciales de autentificaci&oacute;n con una respuesta 401 del
  servidor, por lo que pulsando atr&aacute;s y despu&eacute;s adelante
  abrir&iacute;a el recurso de nuevo (siempre que los requerimientos
  de contrase&ntilde;a no hayan cambiado).
 </simpara>
 <simpara>
  Adem&aacute;s tener en cuenta que hasta la version de PHP 4.3.3, la
  autentificaci&oacute;n HTTP no funcionaba con el servidor IIS de
  Microsoft y la versi&oacute;n CGI de PHP, debido a una
  limitaci&oacute;n de IIS. Para que funcione a partir de PHP 4.3.3,
  debeis de editar vuestra configuraci&oacute;n sobre "Seguridad en
  directorios" en IIS. Pulsar en 'Editar" y elegir solamente "acceso
  anonimo", todos los demas campos no se deben de elegir.
 </simpara>
 <simpara>
  Otra limitaci&oacute;n es, si estais usando el m&oacute;dulo de IIS
  (ISAPI), que no podeis usar las variables
  <literal>PHP_AUTH_*</literal>, en su lugar debeis utilizar la
  variable <literal>HTTP_AUTHORIZATION</literal>. Por ejemplo:
  <literal>list($user, $pw) = explode(':',
  base64_decode(substr($_SERVER['HTTP_AUTHORIZATION'], 6)));
   </literal>
</simpara>
  <note>
   <title>Nota para IIS:</title>
   <simpara>
    Para que la autentificaci&oacute;n HTTP funcione con IIS, la
    directiva de PHP <link
    linkend="ini.cgi.rfc2616-headers">cgi.rfc2616_headers</link> debe
    de tener el valor <literal>0</literal> (valor por defecto).
   </simpara>
  </note>
  
  <note>
   <para>
    Si <link linkend="ini.safe-mode">safe mode</link> est&aacute;
    activado, el uid de el script es agregado a la cabecera
    <literal>WWW-Authenticate</literal>
   </para>
  </note>
 
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->


