<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 321826 Maintainer: lboshell Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<sect1 xml:id="language.types.boolean">
 <title>Booleanos</title>

 <simpara>
  Este es el tipo más simple. Un <type>boolean</type> expresa un valor de
  verdad. Puede ser &true; o &false;.
 </simpara>

 <sect2 xml:id="language.types.boolean.syntax">
  <title>Sintaxis</title>
  <para>
   Para especificar un literal <type>boolean</type>, use alguna de las
   palabras clave &true; o &false;. Ambas son insensibles a mayúsculas y
   minúsculas.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$foo = True; // asigna el valor TRUE a $foo
?>
]]>
   </programlisting>
  </informalexample>

  <para>
   Usualmente, el resultado de un <link linkend="language.operators">operador</link> que devuelve un valor
   <type>boolean</type> es pasado a una 
   <link linkend="language.control-structures">estructura de control</link>.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
// == es un operador que prueba por
// igualdad y devuelve un booleano
if ($accion == "mostrar_version") {
    echo "La versión es 1.23";
}

// esto no es necesario...
if ($mostrar_separadores == TRUE) {
    echo "<hr>\n";
}

// ...porque se puede escribir simplemente:
if ($mostrar_separadores) {
    echo "<hr>\n";
}
?>
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="language.types.boolean.casting">
  <title>Conversión a booleano</title>

  <simpara>
   Para convertir explícitamente un valor a <type>boolean</type>, use el
   moldeamiento <literal>(bool)</literal> o <literal>(boolean)</literal>.
   Sin embargo, en la mayoría de casos no es necesario usar el moldeamiento,
   ya que un valor será convertido automáticamente si un operador, función o
   estructura de control requiere un argumento tipo <type>boolean</type>.
  </simpara>

  <simpara>
   Vea también <link linkend="language.types.type-juggling">Manipulación de
   Tipos</link>.
  </simpara>

  <para>
   Cuando se realizan conversiones a <type>boolean</type>, los siguientes
   valores son considerados &false;:
  </para>

  <itemizedlist>
   <listitem>
    <simpara>el <link
     linkend="language.types.boolean">boolean</link> &false;
     mismo</simpara>
   </listitem>
   <listitem>
    <simpara>el <link
    linkend="language.types.integer">integer</link> 0 (cero)
    </simpara>
   </listitem>
   <listitem>
    <simpara>el <link linkend="language.types.float">float</link>
    0.0 (cero) </simpara>
   </listitem>
   <listitem>
    <simpara>el valor <link
    linkend="language.types.string">string</link> vacío, y
    el <link linkend="language.types.string">string</link>
    "0"</simpara>
   </listitem>
   <listitem>
    <simpara>un <link linkend="language.types.array">array</link>
     con cero elementos</simpara>
   </listitem>
   <listitem>
    <simpara>un <link linkend="language.types.object">object</link>
     con cero variables miembro (sólo en PHP 4)</simpara>
   </listitem>
   <listitem>
    <simpara>el tipo especial <link
    linkend="language.types.null">NULL</link> (incluyendo variables
    no definidas)
    </simpara>
   </listitem>
   <listitem>
    <simpara>objetos <link linkend="ref.simplexml">SimpleXML</link>
    creados desde etiquetas vacías</simpara>
   </listitem>
  </itemizedlist>

  <para>
   Cualquier otro valor es considerado &true; (incluyendo cualquier <link
   linkend="language.types.resource">resource</link>).
  </para>

  <warning>
   <simpara>
    <literal>-1</literal> es considerado &true;, como cualquier otro número
    diferente a cero (¡ya sea negativo o positivo!)
   </simpara>
  </warning>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
var_dump((bool) "");        // bool(false)
var_dump((bool) 1);         // bool(true)
var_dump((bool) -2);        // bool(true)
var_dump((bool) "foo");     // bool(true)
var_dump((bool) 2.3e5);     // bool(true)
var_dump((bool) array(12)); // bool(true)
var_dump((bool) array());   // bool(false)
var_dump((bool) "false");   // bool(true)
?>
]]>
   </programlisting>
  </informalexample>

 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
