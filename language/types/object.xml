<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: lboshell Status: ready -->
<sect1 xml:id="language.types.object">
 <title>Objetos</title>

 <sect2 xml:id="language.types.object.init">
  <title>Inicialización de Objetos</title>

  <para>
   Para crear un nuevo valor de tipo <type>object</type>, use la sentencia
   <literal>new</literal> para instanciar una clase:
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
class foo
{
    function hacer_foo()
    {
        echo "Haciendo foo.";
    }
}

$bar = new foo;
$bar->hacer_foo();
?>
]]>
   </programlisting>
  </informalexample>

  <simpara>
   Para una discusión completa, refiérase al capítulo <link
   linkend="language.oop">Clases y Objetos</link>.
  </simpara>

 </sect2>

 <sect2 xml:id="language.types.object.casting">
  <title>Conversión a objeto</title>

  <para>
   Si un objeto es convertido a un objeto, éste no es modificado. Si un
   valor de cualquier otro tipo es convertido a objeto, una nueva instancia
   de la clase interna <literal>stdClass</literal> es creada. Si el valor
   era &null;, la nueva instancia estará vacía. Los valores
   <type>array</type> son convertidos a <type>object</type> usando las
   claves de la matriz como nombres de propiedades y con sus valores
   correspondientes. Para cualquier otro valor, una variable miembro llamada
   <literal>scalar</literal> contendrá el valor.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$obj = (object) 'ciao';
echo $obj->scalar;  // imprime 'ciao'
?>
]]>
   </programlisting>
  </informalexample>

 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
