<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 293846 Maintainer: jpberdejo Status: ready -->

<sect1 xml:id="control-structures.continue" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><literal>continue</literal></title>
 <simpara>
  <literal>continue</literal> se utiliza dentro de las estructuras de bucle para
  saltarse el resto de la actual iteración del bucle y continuar la ejecución
  en la evaluación de la condición y entonces el comienzo de la siguiente iteración.
 </simpara>
 <note>
  <simpara>
   Tenga en cuenta que en PHP la sentencia 
   <link linkend="control-structures.switch">switch</link> se
   considera una estructura de bucle para los efectos del
   <literal>continue</literal>.
  </simpara>
 </note>
 <simpara>
  <literal>continue</literal> acepta un argumento numérico opcional
  el cual indica hasta el final de cuantos niveles de bucles cerrados 
  se debe saltar.
 </simpara>
 <note>
  <para>
   <literal>continue 0;</literal> y <literal>continue 1;</literal> son lo mismo
   que ejecutar <literal>continue;</literal>.
  </para>
 </note>
 <para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
while (list($key, $value) = each($arr)) {
    if (!($key % 2)) { // saltar miembros impares
        continue;
    }
    do_something_odd($value);
}

$i = 0;
while ($i++ < 5) {
    echo "Externo<br />\n";
    while (1) {
        echo "Medio<br />\n";
        while (1) {
            echo "Interno<br />\n";
            continue 3;
        }
        echo "Esto nunca da salida.<br />\n";
    }
    echo "Tampoco ésta la da.<br />\n";
}
?>
]]>
   </programlisting>
   </informalexample>
  </para>
  <para>
   Omitir el punto y coma después del <literal>continue</literal> puede llevar a 
   confusión. He aquí un ejemplo de lo que no se debe hacer.
  </para>
  <para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
for ($i = 0; $i < 5; ++$i) {
    if ($i == 2)
        continue
    print "$i\n";
}
?>
]]>
    </programlisting>
    <para>
     Se esperaría que el resultado sea:
    </para>
    <screen>
<![CDATA[
0
1
3
4
]]>
    </screen>
    <para>
     Pero la salida de este script será:
    </para>
    <screen>
<![CDATA[
2
]]>
    </screen>
    <para>
     debido a que valor de retorno de la llamada a <function>print</function>
     es <literal>int(1)</literal> y se verá como el
     argumento numérico opcional antes mencionado.
    </para>
   </informalexample>
  </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

