<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 310044 Maintainer: jpberdejo Status: ready -->

<refentry xml:id="wrappers.php" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" role="noversion">
 <refnamediv>
  <refname>entrada/salida de PHP</refname>
  <refpurpose>Acceso a distintos flujos de E/S</refpurpose>
 </refnamediv>

 <refsect1 role="description"><!-- {{{ -->
  &reftitle.description;
  <para>
   <filename>php://stdin</filename>, <filename>php://stdout</filename>
   y <filename>php://stderr</filename> permiten acceder directamente al
   flujo correspondiente de entrada o salida del proceso PHP. El flujo
   hace referencia a un descriptor de fichero duplicado, de modo que si se abre
   <filename>php://stdin</filename> y más tarde se cierra, sólo se cerraría
   la copia del descriptor--el flujo real al que referencia
   <constant>STDIN</constant> no se vería afectado. Tenga en cuenta que en
   versiones de PHP anteriores a la 5.2.1, se presenta un comportamiento irregular.
   Se recomienda utilizar las constantes <constant>STDIN</constant>,
   <constant>STDOUT</constant> y <constant>STDERR</constant> en lugar de
   abrir flujos manualmente usando estas envolturas.
  </para>
  <simpara>
   <filename>php://output</filename> permite escribir en el buffer de salida
   de la misma manera que lo harían <function>print</function> y <function>echo</function>.
  </simpara>
  <simpara>
   <filename>php://input</filename> permite leer datos a partir del cuerpo
   solicitado. En el caso de peticiones POST, es preferible a
   <varname>$HTTP_RAW_POST_DATA</varname> ya que no depende de diretivas
   &php.ini; especiales. Sin embargo, cuando no se genera
   automáticamente <varname>$HTTP_RAW_POST_DATA</varname>,
   se trata de una alternativa que hace un uso menos intensivo de memoria
   que activando <link linkend="ini.always-populate-raw-post-data">always_populate_raw_post_data</link>.
   <filename>php://input</filename> no está disponible con
   <literal>enctype="multipart/form-data"</literal>.
  </simpara>
  <note>
   <simpara>
    Los flujos que se abren con <filename>php://input</filename> sólo pueden leerse
    una vez; no hay soporte para operaciones de búsqueda. Pero, dependiendo
    de la SAPI, podría ser posible abrir otro flujo
    <filename>php://input</filename> para reiniciar la lectura. Esto
    sólo es posible si los datos de la petición se han guardado. Este caso es típico
    en peticiones POST, pero no en otros métodos de petición, como por ejemplo
    PUT o PROPFIND.
   </simpara>
  </note>
  <simpara>
   <filename>php://stdin</filename> y
   <filename>php://input</filename> son de solo lectura, mientras que
   <filename>php://stdout</filename>,
   <filename>php://stderr</filename> y
   <filename>php://output</filename> son de sólo escritura.
  </simpara>

  <simpara>
   <filename>php://fd</filename> permite el acceso directo al descriptor de archivo
   dado. Por ejemplo, <filename>php://fd/3</filename> refiere al descriptor
   de archivo 3.
  </simpara>

  <simpara>
   <filename>php://filter</filename> es una especie de meta-envoltura diseñada
   para permitir el filtrado de flujos en las aperturas.
   Esto es muy útil en las funciones todo en uno, como
   <function>readfile</function>, <function>file</function>, y
   <function>file_get_contents</function> donde, por otra parte,
   no se pueden aplicar filtros a los flujos antes de que se lea
   su contenido.
  </simpara>
  <simpara>
   <filename>php://filter</filename> tiene los siguientes 'parámetros'
   incorporados en su 'ruta'.
  </simpara>
 </refsect1><!-- }}} -->

 <refsect1 role="usage"> <!-- {{{ -->
  &reftitle.options;
  <itemizedlist>
   <listitem><simpara><filename>php://stdin</filename></simpara></listitem>
   <listitem><simpara><filename>php://stdout</filename></simpara></listitem>
   <listitem><simpara><filename>php://stderr</filename></simpara></listitem>
   <listitem><simpara><filename>php://output</filename></simpara></listitem>
   <listitem><simpara><filename>php://input</filename></simpara></listitem>
   <listitem><simpara><filename>php://filter</filename> (disponible desde PHP 5.0.0)</simpara></listitem>
   <listitem><simpara><filename>php://memory</filename> (disponible desde PHP 5.1.0)</simpara></listitem>
   <listitem><simpara><filename>php://temp</filename> (disponible desde PHP 5.1.0)</simpara></listitem>
   <listitem><simpara><filename>php://fd</filename> (available since PHP 5.3.6)</simpara></listitem>
  </itemizedlist>
 </refsect1> <!-- }}} -->

 <refsect1 role="options"><!-- {{{ -->
  &reftitle.options;
  <para>
   <table>
    <title>
     Resumen de la Envoltura (Para <literal>php://filter</literal>,
     consúltese el resumen de la envoltura que se filtra.)
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Atributo</entry>
       <entry>Permitido</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Restringido por <link linkend="ini.allow-url-fopen">allow_url_fopen</link></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Restringido por <link linkend="ini.allow-url-include">allow_url_include</link></entry>
       <entry>
        <literal>php://input</literal>,
        <literal>php://stdin</literal>,
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
      <row>
       <entry>Permite Lecturas</entry>
       <entry>
        <literal>php://stdin</literal>,
        <literal>php://input</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
      <row>
       <entry>Permite Escrituras</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://output</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
      <row>
       <entry>Permite Añadir contenidos</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://output</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente. (Equivalente a escrituras)
       </entry>
      </row>
      <row>
       <entry>Permite Lecturas y Escrituras Simultáneas</entry>
       <entry>
        <literal>php://fd</literal>,
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
      <row>
       <entry>Permite usar la función <function>stat</function></entry>
       <entry>
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
      <row>
       <entry>Permite usar la función <function>unlink</function></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Permite usar la función <function>rename</function></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Permite usar la función <function>mkdir</function></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Permite usar la función <function>rmdir</function></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Permite usar la función <function>stream_select</function></entry>
       <entry>
        <literal>php://stdin</literal>,
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://fd</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1> <!-- }}} -->

 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <example><!-- {{{ -->
   <title>/resource=&lt;flujo a filtrar&gt; (<emphasis>obligatorio</emphasis>)</title>
   <para>
     Este parámetro tiene que ubicarse
     al final de la especificación de <filename>php://filter</filename> y
     tiene que apuntar al flujo que se desea filtrar.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Esto es equivalente a:
   readfile("http://www.example.com");
   dado que no se especifica ningún filtro */

readfile("php://filter/resource=http://www.example.com");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>/read=&lt;lista de filtros de lectura para aplicar en cadena&gt; (<emphasis>opcional</emphasis>)</title>
   <para>
     Este parámetro contiene uno o más
     nombres de filtros separados por el caracter <literal>|</literal>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Devolverá el contenido de
   www.example.com en mayúsculas */
readfile("php://filter/read=string.toupper/resource=http://www.example.com");

/* Hará lo mismo que el ejemplo de arriba
   pero además lo codificará en ROT13 */
readfile("php://filter/read=string.toupper|string.rot13/resource=http://www.example.com");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>/write=&lt;lista de filtros de escritura para aplicar en cadena&gt; (<emphasis>opcional</emphasis>)</title>
   <para>
     Este parámetro contiene uno o más
     nombres de filtros separados por el caracter <literal>|</literal>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Filtrará el string "Hello World" con
   el filtro rot13, y después lo escribirá en
   example.txt dentro del directorio actual */
file_put_contents("php://filter/write=string.rot13/resource=example.txt","Hello World");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <!-- {{{ -->
  <simpara>
   <literal>/&lt;lista de filtros para aplicar en ambas direcciones&gt;</literal> (<emphasis>opcional</emphasis>)
   Todos los filtros que no estén precedidos
   ni por <literal>read=</literal> ni por <literal>write=</literal>
   se aplicarán tanto en las lecturas como en las escrituras.
  </simpara>
  <simpara>
   La envoltura <filename>php://memory</filename> almacena los datos
   en memoria. <filename>php://temp</filename> se comporta de una forma parecida, pero en
   su lugar, utiliza un fichero temporal para almacenar los datos una vez que
   se supera un determinado umbral de memoria (por omisión es 2 MB).
  </simpara>
  <simpara>
   La envoltura <filename>php://temp</filename> acepta los siguientes
   'parámetros' como parte de su 'ruta':
  </simpara>
  <!-- }}} -->
  <example><!-- {{{ -->
   <title>/maxmemory:&lt;número de bytes&gt; (<emphasis>opcional</emphasis>)</title>
   <para>
     Permite cambiar el valor por omisión
     del límite de memoria (cuándo se mueven los datos a un fichero
     temporal).
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$fiveMBs = 5 * 1024 * 1024;
$fp = fopen("php://temp/maxmemory:$fiveMBs", 'r+');

fputs($fp, "hello\n");

// leemos lo que hemos escrito
rewind($fp);
echo stream_get_contents($fp);
?>
]]>
   </programlisting>
  </example><!-- }}} -->
 </refsect1><!-- }}} -->

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

