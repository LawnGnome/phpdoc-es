<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.5 Maintainer: baoengb Status: ready -->
 <sect1 id="language.oop5.static">
  <title>La palabra reservada 'Static'</title>

  <para>
   Declarar miembros de clases o m&eacute;todos como est&aacute;ticos, los
   hace accesibles desde afuera del contexto del objeto. Un miembro o
   m&eacute;todo declarado como est&aacute;tico no puede ser accesado con
   una variable que es una instancia del objeto y no puede ser redefinido
   en una extensi&oacute;n de la clase.
  </para>

  <para>
   La declaraci&oacute;n static debe estar despu&eacute;s de la declaraci&oacute;n
   de visibilidad. Por compatibilidad con PHP 4, si no se usa la 
   declaraci&oacute;n de <link 
   linkend="language.oop5.visibility">visibilidad</link>, entonces el 
   miembro o m&eacute;todo ser&aacute; tratado tal si como se hubiera 
   declarado como <literal>public static</literal>.
  </para>

  <para>
   A causa de que los m&eacute;todos est&aacute;ticos son accesibles sin que
   se haya creado una instancia del objeto, la pseudo variable 
   <varname>$this</varname> no est&aacute; disponible dentro de los 
   m&eacute;todos declarados como est&aacute;ticos.
  </para>
  
  <para>
   De hecho las llamadas a m&eacute;todos <literal>static</literal> son 
   resueltas en tiempo de ejecuci&oacute;n. Cuando se una expl&iacute;citamente
   un nombre de clase, el m&eacute;todo ya ha sido identificado completamente
   y no es necesario aplicar las reglas de herencia. Si la llamada es hecha
   por <literal>self</literal> entonces <literal>self</literal> es 
   traducido a la clase actual, esto es, la clase a la que pertenece el 
   c&oacute;digo. Aqu&iacute; tampoco aplican las reglas de herencia.
  </para>
  
  <para>
   Las propiedades est&aacute;ticas no pueden ser accesadas a trav&eacute;s del
   objeto usando el operador de flecha -&gt;.
  </para>

  <example>
   <title>Ejemplo de miembro Static</title>
   <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    public static $my_static = 'foo';

    public function staticValue() {
        return self::$my_static;
    }
}

class Bar extends Foo
{
    public function fooStatic() {
        return parent::$my_static;
    }
}


print Foo::$my_static . "\n";

$foo = new Foo();
print $foo->staticValue() . "\n";
print $foo->my_static . "\n";      // Undefined "Property" my_static 

// $foo::my_static is not possible

print Bar::$my_static . "\n";
$bar = new Bar();
print $bar->fooStatic() . "\n";
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Ejmeplo de m&eacute;todo Static</title>
    <programlisting role="php">
<![CDATA[
<?php
class Foo {
    public static function aStaticMethod() {
        // ...
    }
}

Foo::aStaticMethod();
?> 
]]>
    </programlisting>
  </example>

 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
