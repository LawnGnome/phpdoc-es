<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.7 Maintainer: baoengb Status: ready -->
 <sect1 id="language.oop5.visibility">
  <title>Visibilidad</title>
  <para>
   La visibilidad de una propiedad o m&eacute;todo puede ser definida al 
   anteponerle a la declaraci&oacute;n con las palabras reservadas:
   public, protected o private. Los elementos declarados con Public pueden 
   ser accesados en todos lados. Los Protected limitan el acceso a las 
   clases heredadas (y a la clase que define el elemento). Los Private 
   limitan la visibilidad solo a la clase que lo defini&oacute;.
  </para>
  <sect2 id="language.oop5.visiblity-members">
   <title>Visibilidad de los miembros</title>
   <para>
    Los miembros de la clase debe estar definidos con public, private o
    protected.
   </para>
   <para>
    <example>
     <title>Declaraci&oacute;n de miembros</title>
     <programlisting role="php">
<![CDATA[
<?php
/**
 * Define MyClass
 */
class MyClass
{
    public $public = 'Public';
    protected $protected = 'Protected';
    private $private = 'Private';

    function printHello()
    {
        echo $this->public;
        echo $this->protected;
        echo $this->private;
    }
}

$obj = new MyClass();
echo $obj->public; // Works
echo $obj->protected; // Fatal Error
echo $obj->private; // Fatal Error
$obj->printHello(); // Shows Public, Protected and Private


/**
 * Define MyClass2
 */
class MyClass2 extends MyClass
{
    // We can redeclare the public and protected method, but not private
    protected $protected = 'Protected2';

    function printHello()
    {
        echo $this->public;
        echo $this->protected;
        echo $this->private;
    }
}

$obj2 = new MyClass2();
echo $obj->public; // Works
echo $obj2->private; // Undefined
echo $obj2->protected; // Fatal Error
$obj2->printHello(); // Shows Public, Protected2, not Private

?> 
]]>
     </programlisting>
    </example>
   </para>
   <note>
    <simpara>
     La forma de declarar una variable en PHP 4 con la palabra reservada
     <emphasis>var</emphasis> ya no es v&aacute;lida para los objetos de
     PHP 5. Por compatibilidad una variable declarada en php se asumir&aacute;
     con visibilidad p&uacute;blica, y se emitir&aacute; una advertencia
     <constant>E_STRICT</constant>.
    </simpara>
   </note>
  </sect2>
  <sect2 id="language.oop5.visiblity-methods">
   <title>Visibilidad de los m&eacute;todos</title>
   <para>
    Los m&eacute;todos de clase deben ser definidos con public, private o 
    protected. Los m&eacute;todos sin ninguna declaraci&oacute;n son 
    tomados como public.
   </para>
   <para>
    <example>
     <title>Declaraci&oacute;n de m&eacute;todos</title>
     <programlisting role="php">
<![CDATA[
<?php
/**
 * Define MyClass
 */
class MyClass
{
    // Contructors must be public
    public function __construct() { }

    // Declare a public method
    public function MyPublic() { }

    // Declare a protected method
    protected function MyProtected() { }

    // Declare a private method
    private function MyPrivate() { }

    // This is public
    function Foo()
    {
        $this->MyPublic();
        $this->MyProtected();
        $this->MyPrivate();
    }
}

$myclass = new MyClass;
$myclass->MyPublic(); // Works
$myclass->MyProtected(); // Fatal Error
$myclass->MyPrivate(); // Fatal Error
$myclass->Foo(); // Public, Protected and Private work


/**
 * Define MyClass2
 */
class MyClass2 extends MyClass
{
    // This is public
    function Foo2()
    {
        $this->MyPublic();
        $this->MyProtected();
        $this->MyPrivate(); // Fatal Error
    }
}

$myclass2 = new MyClass2;
$myclass2->MyPublic(); // Works
$myclass2->Foo2(); // Public and Protected work, not Private
?>
]]>
     </programlisting>
    </example>
   </para>
  </sect2>
 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
