<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.18 Maintainer: baoengb Status: ready -->
 <sect1 xml:id="language.oop5.magic" xmlns="http://docbook.org/ns/docbook">
  <title>M&eacute;todos m&aacute;gicos</title>
  <para>
   Los nombres de funci&oacute;n:
   <literal>__construct</literal>,
   <literal>__destruct</literal>
   (see <link linkend="language.oop5.decon">Constructores y Destructores</link>),
   <literal>__call</literal>,
   <literal>__get</literal>,
   <literal>__set</literal>,
   <literal>__isset</literal>,
   <literal>__unset</literal>
   (see <link linkend="language.oop5.overloading">Sobrecarga</link>),
   <literal>__sleep</literal>,
   <literal>__wakeup</literal>,
   <literal>__toString</literal>,
   <literal>__set_state</literal>,
   <link linkend="language.oop5.cloning">__clone</link> y
   <link linkend="language.oop5.autoload">__autoload</link>
   son m&aacute;gicos en las clases de PHP. No puede tener funciones con esos
   nombres en cualquiera de sus clases a menos que se desee la funcionalidad
   m&aacute;gica asociada con ellos.
  </para>

  <caution>
   <simpara>
    PHP reserva todos los nombres de funciones que empiecen con __ como 
    m&aacute;gicas. Es recomendado que no use nombres de funciones con 
    __ en PHP a menos que dese alguna m&aacute;gica funcionalidad 
    documentada.
   </simpara>
  </caution>
 
  <sect2 xml:id="language.oop5.magic.sleep">
   <title><literal>__sleep</literal> y <literal>__wakeup</literal></title>
   <para>
    <function>serialize</function> checa si su clase tiene una funci&oacute;n 
    con el nombre m&aacute;gico <literal>__sleep</literal>. Si es as&iacute;, 
    esa funci&oacute;n es ejecutada antes de cualquier serializaci&oacute;n.
    Esta puede limpiar el objeto y se espera que regrese una matriz con los 
    nombres de todas las variables de ese objeto que puede ser serializadas.
    Si el m&eacute;todo no regresa nada, entonces &null;, es serializada y
    se inicia E_NOTICE.
   </para>
   <para>
    La intenci&oacute;n de usar <literal>__sleep</literal> es confirmar
    datos pendientes, terminar de 
    enviar cualquier dato o ejecutar tareas similares de limpieza. 
    Tambi&eacute;n, la funci&oacute;n es &uacute;til si tiene objetos muy 
    grandes los cuales no necesitan mantenerse completos.
   </para>
   <para>
    Inversamente, <function>unserialize</function> checa por la 
    presencia de una funci&oacute;n con el nombre m&aacute;gico 
    <literal>__wakeup</literal>. Si est&aacute; presente, est&aacute;
    funci&oacute;n puede reconstruir cualquier recurso que el objeto pueda
    tener.
   </para>
   <para>
    La intenci&oacute;n de <literal>__wakeup</literal> es reestablecer 
    cualquier conexi&oacute;n a base de datos que se pueda haber perdido
    durante la serializaci&oacute;n y ejecutar otras tareas de 
    reinicializaci&oacute;n.
   </para>
   <example>
    <title>Sleep and wakeup</title>
    <programlisting role="php">
<![CDATA[
<?php
class Connection {
    protected $link;
    private $server, $username, $password, $db;

    public function __construct($server, $username, $password, $db)
    {
        $this->server = $server;
        $this->username = $username;
        $this->password = $password;
        $this->db = $db;
        $this->connect();
    }

    private function connect()
    {
        $this->link = mysql_connect($this->server, $this->username, $this->password);
        mysql_select_db($this->db, $this->link);
    }

    public function __sleep()
    {
        return array('server', 'username', 'password', 'db');
    }

    public function __wakeup()
    {
        $this->connect();
    }
}
?>
]]>
    </programlisting>
   </example>
  </sect2>

  <sect2 xml:id="language.oop5.magic.tostring">
   <title><literal>__toString</literal></title>
   <para>
    El m&eacute;todo <literal>__toString</literal> permite a una clase 
    decidir como actuar cuando es convertida en cadena.
   </para>
   <example>
    <title>Ejemplo simple</title>
    <programlisting role="php">
<![CDATA[
<?php
// Declare a simple class
class TestClass
{
    public $foo;

    public function __construct($foo) {
        $this->foo = $foo;
    }

    public function __toString() {
        return $this->foo;
    }
}

$class = new TestClass('Hello');
echo $class;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Hello
]]>
    </screen>
   </example>
   <para>
    No tiene otro valor que cuando el m&eacute;todo 
    <literal>__toString</literal> es llamado solo cuando es directamente
    combinado con <function>echo</function> o <function>print</function>.
    Desde PHP 5.2.0 es llamado en cualquier contexto de cadena, (ej. en 
    <function>printf</function> con el modificador <literal>%s</literal>)
    pero no en otro tipo de contexto (ej. con el modificador 
    <literal>%d</literal>). Desde PHP 5.2.0, convertir objetos sin
    el m&eacute;todo <literal>__toString</literal>  puede causar
    <constant>E_RECOVERABLE_ERROR</constant>.
   </para>
  </sect2>
   
  <sect2 xml:id="language.oop5.magic.set-state">
   <title><literal>__set_state</literal></title>
   <para>
    Este m&eacute;todo <link linkend="language.oop5.static">static</link> 
    es llamado para clases exportadas por <function>var_export</function> 
    desde PHP 5.1.0.
   </para>
   <para>
    El unico parametro de este m&eacute;todo es un arreglo conteniendo
    las propiedades exportadas en la forma
    <literal>array('property' => value, ...)</literal>.
   </para>
  </sect2>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
