<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.2 Maintainer: lboshell Status: ready -->
<!-- splitted from ./index.xml, last change in rev 1.66 -->
  <sect1 id="security.variables">
   <title>Datos Enviados por el Usuario</title>
   <para>
    Las mayores debilidades de muchos programas PHP no son inherentes
    al lenguaje mismo, sino simplemente un problema generado cuando se
    escribe c&oacute;digo sin pensar en la seguridad. Por esta
    raz&oacute;n, usted deber&iacute;a tomarse siempre el tiempo para
    considerar las implicaciones de cada pedazo de c&oacute;digo, para
    averiguar el posible peligro involucrado cuando una variable
    inesperada es enviada.
    <example>
     <title>Uso Peligroso de Variables</title>
     <programlisting role="php">
<![CDATA[
<?php
// eliminar un archivo del directorio personal del usuario .. o
// quizas de alguien mas?

unlink ($variable_malvada);

// Imprimir el registro del acceso... o quizas una entrada de /etc/passwd?
fwrite ($desc_archivo, $variable_malvada);

// Ejecutar algo trivial.. o rm -rf *?
system ($variable_malvada);
exec ($variable_malvada);

?>
]]>
     </programlisting>
    </example>
    Usted deber&iacute;a examinar siempre, y cuidadosamente su
    c&oacute;digo para asegurarse de que cualquier variable siendo
    enviada desde un navegador web sea chequeada apropiadamente, y
    preguntarse a s&iacute; mismo:
    <itemizedlist>
     <listitem>
      <simpara>
       &iquest;Este script afectar&aacute; &uacute;nicamente los
       archivos que se pretende?
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       &iquest;Puede tomarse acci&oacute;n sobre datos inusuales o
       indeseados?
      </simpara>
     </listitem>
     <listitem>
     <simpara>
      &iquest;Puede ser usado este script en formas malintencionadas?
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       &iquest;Puede ser usado en conjunto con otros scripts en forma
       negativa?
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       &iquest;Ser&aacute;n adecuadamente registradas las
       transacciones?
      </simpara>
     </listitem>
    </itemizedlist>
    Al preguntarse adecuadamente estas preguntas mientras escribe su
    script, en lugar de hacerlo posteriormente, usted previene una
    desafortunada re-implementaci&oacute;n del programa cuando desee
    incrementar el nivel de seguridad. Al comenzar con esta
    mentalidad, no garantizar&aacute; la seguridad de su sistema, pero
    puede ayudar a mejorarla.
   </para>
   <para>
    Puede que tambi&eacute;n desee considerar la
    deshabilitaci&oacute;n de register_globals, magic_quotes, u otros
    par&aacute;metros convenientes que pueden causar confusi&oacute;n
    sobre la validez, fuente o valor de una determinada
    variable. Trabajar con PHP en modo error_reporting(E_ALL)
    tambi&eacute;n puede ayudarle a advertir variables que
    est&aacute;n siendo usadas antes de ser chequeadas o inicializadas
    (de modo que puede prevenir que datos inusuales produzcan
    operaciones inadvertidas).
   </para>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
