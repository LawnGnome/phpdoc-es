<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.3 Maintainer: lboshell Status: ready -->
<!-- splitted from ./index.xml, last change in rev 1.66 -->

  <chapter id="security.apache">
   <title>Instalaci&oacute;n como m&oacute;dulo de Apache</title>
   <simpara>
    Cuando PHP es usado como un m&oacute;dulo de Apache, hereda los
    permisos del usuario de Apache (generalmente los del usuario
    "nobody"). Este hecho representa varios impactos sobre la
    seguridad y las autorizaciones. Por ejemplo, si est&aacute; usando
    PHP para acceder a una base de datos, a menos que tal base de
    datos disponga de un control de acceso propio, usted tendr&aacute;
    que hacer que la base de datos sea asequible por el usuario
    "nobody".  Esto quiere decir que un script malicioso podr&iacute;a
    tener acceso y modificar la base de datos, incluso sin un nombre
    de usuario y contrase&ntilde;a. Es completamente posible que un
    archivador automatizado de documentos web pudiera toparse con la
    p&aacute;gina web de administraci&oacute;n de una base de datos, y
    eliminar todas sus bases de datos. Usted puede protegerse de este
    tipo de situaciones mediante mecanismos de autorizaci&oacute;n de
    Apache, o puede dise&ntilde;ar su propio modelo de acceso usando
    LDAP, archivos &htaccess;, etc. e incluir ese c&oacute;digo como
    parte de sus scripts PHP.
   </simpara>
   <simpara>
    Con frecuencia, una vez la seguridad se ha establecido en un punto
    en donde el usuario de PHP (en este caso, el usuario de apache)
    tiene asociada una muy leve capacidad de riesgo, se descubre que
    PHP se encuentra ahora imposibilitado de escribir archivos en los
    directorios de los usuarios. O quiz&aacute;s se le haya
    desprovisto de la capacidad de acceder o modificar bases de
    datos. Se ha prevenido exitosamente que pudiera escribir tanto
    archivos buenos como malos, o que pudiera realizar transacciones
    buenas o malas en la base de datos.
   </simpara>
   <simpara>
    Un error de seguridad cometido con frecuencia en este punto es
    darle permisos de administrador (root) a apache, o incrementar las
    habilidades del usuario de apache de alguna otra forma.
   </simpara>
   <simpara>
    Escalar los permisos del usuario de Apache hasta el nivel de
    administrador es extremadamente peligroso y puede comprometer al
    sistema entero, as&iacute; que el uso de entornos sudo, chroot, o
    cualquier otro mecanismo que sea ejecutado como root no
    deber&iacute;a ser una opci&oacute;n viable para aquellos que no
    son profesionales en seguridad.
   </simpara>
   <simpara>
    Existen otras soluciones m&aacute;s simples. Mediante el uso
    de <link linkend="ini.open-basedir">open_basedir</link> usted
    puede controlar y restringir aquellos directorios que
    podr&iacute;an ser usados por PHP. Tambi&eacute;n puede definir
    &aacute;reas solo-Apache, para restringir todas las actividades
    basadas en web a archivos que no son de usuarios, o del sistema.
   </simpara>
  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
