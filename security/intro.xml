<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.2 Maintainer: lboshell Status: ready -->
<!-- splitted from ./index.xml, last change in rev 1.66 -->
  <simpara>
   PHP es un poderoso lenguaje e int&eacute;rprete, ya sea incluido
   como parte de un servidor web en forma de m&oacute;dulo o ejecutado
   como un binario <acronym>CGI</acronym> separado, es capaz de
   acceder a archivos, ejecutar comandos y abrir conexiones de red en
   el servidor. Estas propiedades hacen que cualquier cosa que sea
   ejecutada en un servidor web sea insegura por naturaleza. PHP
   est&aacute; dise&ntilde;ado espec&iacute;ficamente para ser un
   lenguaje m&aacute;s seguro para escribir programas CGI que Perl o
   C, y con la selecci&oacute;n correcta de opciones de
   configuraci&oacute;n en tiempos de compilaci&oacute;n y
   ejecuci&oacute;n, y siguiendo algunas pr&aacute;cticas correctas de
   programaci&oacute;n, PHP le puede dar la combinaci&oacute;n precisa
   de libertad y seguridad que usted necesita.
  </simpara>
  <simpara>
   Ya que hay muchas maneras de utilizar PHP, existen varias opciones
   de configuraci&oacute;n dise&ntilde;adas para controlar su
   comportamiento. Un amplio rango de opciones le garantizan que pueda
   usar PHP para muchos prop&oacute;sitos distintos, pero
   tambi&eacute;n quiere decir que hay combinaciones de &eacute;stas
   opciones y configuraciones de servidor que pueden resultar en un
   entorno inseguro.
  </simpara>
  <simpara>
   El nivel de flexibilidad en la configuraci&oacute;n de PHP se
   compara quiz&aacute;s solo con su flexibilidad de desarrollo. PHP
   puede ser usado para escribir aplicaciones completas de servidor,
   con todo el poder de un usuario de un int&eacute;rprete de
   comandos, o puede ser usado para inclusiones simples del lado del
   servidor con muy poco riesgo en un entorno minuciosamente
   controlado. C&oacute;mo construir ese entorno, y qu&eacute; tan
   seguro es, b&aacute;sicamente depende del desarrollador PHP.
  </simpara>
  <simpara>
   Este cap&iacute;tulo comienza con algunas recomendaciones generales
   de seguridad, explica las diferentes combinaciones de opciones de
   configuraci&oacute;n y las situaciones en las que pueden ser usadas
   con seguridad, y describe diferentes consideraciones a la hora de
   programar para diferentes niveles de seguridad.
  </simpara>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
