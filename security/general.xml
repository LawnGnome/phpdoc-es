<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283799 Maintainer: lboshell Status: ready -->
<!-- splitted from ./index.xml, last change in rev 1.66 -->
  <chapter xml:id="security.general" xmlns="http://docbook.org/ns/docbook">
   <title>Consideraciones generales</title>
   <simpara>
    Un sistema completamente seguro es pr&aacute;cticamente un
    imposible, de modo que el enfoque usado con mayor frecuencia en la
    profesi&oacute;n de seguridad es uno que busque el balance
    adecuado entre riesgo y funcionalidad. Si cada variable enviada
    por un usuario requiriera de dos formas de validaci&oacute;n
    biom&eacute;trica (como rastreo de retinas y an&aacute;lisis
    dactilar), usted contar&iacute;a con un nivel extremadamente alto
    de confiabilidad. Tambi&eacute;n implicar&iacute;a que llenar los
    datos de un formulario razonablemente complejo podr&iacute;a tomar
    media hora, cosa que podr&iacute;a incentivar a los usuarios a
    buscar m&eacute;todos para esquivar los mecanismos de seguridad.
   </simpara>
   <simpara>
    La mejor seguridad con frecuencia es lo suficientemente razonable
    como para suplir los requerimientos dados sin prevenir que el
    usuario realice su labor de forma natural, y sin sobrecargar al
    autor del c&oacute;digo con una complejidad excesiva. De hecho,
    algunos ataques de seguridad son simples recursos que aprovechan
    las vulnerabilidades de este tipo de seguridad sobrecargada, que
    tiende a erosionarse con el tiempo.
   </simpara>
   <simpara>
    Una frase que vale la pena recordar: Un sistema es apenas tan
    bueno como el eslab&oacute;n m&aacute;s d&eacute;bil de una
    cadena. Si todas las transacciones son registradas copiosamente
    bas&aacute;ndose en la fecha/hora, ubicaci&oacute;n, tipo de
    transacci&oacute;n, etc. pero la verificaci&oacute;n del usuario
    se realiza &uacute;nicamente mediante una cookie sencilla, la
    validez de atar a los usuarios al registro de transacciones es
    mermada severamente.
   </simpara>
   <simpara>
    Cuando realice pruebas, tenga en mente que no ser&aacute; capaz de
    probar todas las diferentes posibilidades, incluso para las
    p&aacute;ginas m&aacute;s simples. Los datos de entrada que usted
    puede esperar en sus aplicaciones no necesariamente tendr&aacute;n
    relaci&oacute;n alguna con el tipo de informaci&oacute;n que
    podr&iacute;a ingresar un empleado disgustado, un cracker con
    meses de tiempo entre sus manos, o un gato dom&eacute;stico
    caminando sobre el teclado. Es por esto que es mejor observar el
    c&oacute;digo desde una perspectiva l&oacute;gica, para determinar
    en d&oacute;nde podr&iacute;an introducirse datos inesperados, y
    luego hacer un seguimiento de c&oacute;mo esta informaci&oacute;n
    es modificada, reducida o amplificada.
   </simpara>
   <simpara>
    Internet est&aacute; repleto de personas que tratan de crearse
    fama al romper la seguridad de su c&oacute;digo, bloquear su
    sitio, publicar contenido inapropiado, y por lo dem&aacute;s
    haciendo que sus d&iacute;as sean m&aacute;s interesantes. No
    importa si usted administra un sitio peque&ntilde;o o grande,
    usted es un objetivo por el simple hecho de estar en l&iacute;nea,
    por tener un servidor al cual es posible conectarse. Muchas
    aplicaciones de cracking no hacen distinciones por tama&ntilde;os,
    simplemente recorren bloques masivos de direcciones IP en busca de
    v&iacute;ctimas. Trate de no convertirse en una.
   </simpara>
  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
