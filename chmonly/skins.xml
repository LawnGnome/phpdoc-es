<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.5 Maintainer: lboshell Status: ready -->
 <chapter id="chm.skins">
  <title>Desarrollo de skins</title>

  <para>
   Esta edici&oacute;n del Manual de PHP le permite a los usuarios
   elegir entre varios skins para desplegar los contenidos, as&iacute;
   como desarrollar skins personalizados para suplir ciertas
   necesidades especiales. Hemos decidido ofrecer soporte de skins por
   que sentimos que un solo skin no puede satisfacer las necesidades
   de todos en una edici&oacute;n tan usada.
  </para>
  
  <para>
   Incluimos dos skins por defecto al interior del CHM. &Eacute;stos
   no pueden ser modificados o eliminados, de modo que si tiene el
   CHM, ya tiene estos dos skins en su interior. El skin Low es
   optimizado para su uso en una ventana peque&ntilde;a, el skin High
   es una variaci&oacute;n de Low, con la adici&oacute;n de algunas
   gr&aacute;ficas para darle vida.
  </para>
  
  <para>
   Un skin debe tener por lo menos dos archivos, un archivo JavaScript
   de carga del skin y un archivo CSS. Ambos skins incorporados tienen
   &eacute;stos archivos al interior del CHM. El archivo JS de carga
   del skin debe, por lo menos, cargar el archivo CSS y desplegar los
   contenidos de la p&aacute;gina en el visor. Te&oacute;ricamente,
   hay dos tipos de skins: skins CSS y skins Full. Los skins CSS
   modifican s&oacute;lo el CSS y no alteran la presentaci&oacute;n de
   la p&aacute;gina. Los skins Full modifican tambi&eacute;n la
   presentaci&oacute;n de la p&aacute;gina. Hemos incluido skins de
   ejemplo para ambos tipos de skins, el skin CSS y el skin Full
   (<literal>"greenlinks"</literal>
   y <literal>"headernostalgia"</literal> respectivamente).
  </para>
  
  <para>
   <warning>
    <para>
     Note que, aunque los m&eacute;todos de desarrollo de skins
     actuales son definitivos, puede haber cambios profundos en las
     clases CSS usadas o en elementos de p&aacute;gina mientras
     refinamos las ideas de desarrollo de skins. Dado que esta
     edici&oacute;n se encuentra en la actualidad en fase de
     desarrollo, la informaci&oacute;n descrita aqu&iacute; no debe
     ser considerada completamente estable.
    </para>
   </warning>
  </para>
  
  <sect1 id="chm.skins.display">
   <title>Proceso de Visualizaci&oacute;n de P&aacute;gina</title>

   <para>
    Si va a desarrollar su propio skin, debe saber c&oacute;mo es
    cargada y desplegada al usuario una p&aacute;gina, y c&oacute;mo
    encaja un skin en este proceso. Para estos par&aacute;grafos, se
    asume que ha colocado su archivo CHM
    en <filename>c:\phpmanual</filename>, de modo que sea asequible
    como <filename>c:\phpmanual\php_manual_LANG.chm</filename> (en
    donde LANG es el c&oacute;digo del lenguaje), y que desea ver la
    p&aacute;gina de funci&oacute;n de "echo", la cual
    es <filename>function.echo.html</filename> al interior del archivo
    CHM. Vea las <link linkend="chm.integration">secciones sobre
    integraci&oacute;n</link> para m&aacute;s informaci&oacute;n sobre
    los contenidos CHM.
    <itemizedlist>
     <listitem>
      <simpara>
       Antes que nada, el contenido HTML es cargado
       desde <filename>function.echo.html</filename> en el interior
       del archivo CHM.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Al comienzo de &eacute;ste archivo existe una etiqueta
       HTML <literal>&lt;script&gt;</literal>, la cual carga el
       archivo <filename>_script.js</filename> desde el archivo
       CHM. El archivo contiene todo el c&oacute;digo JS requerido
       para continuar con el proceso. De especial importancia es que
       &eacute;ste c&oacute;digo JS define varias variables (como la
       ubicaci&oacute;n del archivo CHM, o cu&aacute;l es la
       p&aacute;gina actual) y varias funciones para imprimir el
       men&uacute; de contexto o gestionar funciones en l&iacute;nea.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Finalmente, <filename>_script.js</filename> carga el archivo de
       preferencias desde el exterior, del archivo CHM
       (<filename>c:\phpmanual\php_manual_prefs.js</filename> en
       nuestro ejemplo). Este archivo JS define las variables de
       preferencia, y llama de vuelta a la
       funci&oacute;n <literal>prefHandler()</literal>, que se
       encuentra definida tambi&eacute;n
       en <filename>_script.js</filename>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Aquella funci&oacute;n carga el archivo JS de skin del modo que
       dictan las preferencias. El archivo de skin JS debe cargar el
       archivo CSS requerido, y definir una
       funci&oacute;n <literal>displayPage()</literal>, la cual
       despliega la p&aacute;gina al ser llamada.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       El archivo HTML (<filename>function.echo.html</filename> en
       este ejemplo) contiene tambi&eacute;n una llamada de
       funci&oacute;n para cargar las notas de usuario, que
       simplemente coloca las notas en este archivo HTML usando DHTML
       para desplegarlas como si hubiesen estado aqu&iacute; antes...
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       El archivo HTML contiene tambi&eacute;n un atributo onload en
       la etiqueta body, el cual llama a la
       funci&oacute;n <literal>displayPage()</literal> definida por el
       skin para mostrarle la p&aacute;gina al usuario. &Eacute;sta es
       la &uacute;ltima funci&oacute;n en ser llamada, debe presentar
       la p&aacute;gina en su forma completa al usuario.
      </simpara>
     </listitem>
    </itemizedlist>
    Cada acci&oacute;n es sincronizada al llamar de vuelta una
    funci&oacute;n en el archivo previamente cargado, cuando el
    archivo JS est&aacute; en memoria. La carga de notas y la carga de
    JS se sincroniza s&oacute;lo con el evento onload de la
    p&aacute;gina (el cual, como dice la p&aacute;gina de
    documentaci&oacute;n de Microsoft, solo se ejecuta cuando la
    p&aacute;gina ha sido cargada completamente).
   </para>
   <para>
    Esta cadena de cargas y llamadas de retorno puede parecer muy
    complicada, pero hasta el momento ha sido la mejor manera de
    lograr tantas cosas en paralelo, al mismo tiempo que se
    sincronizan ciertas llamadas.
   </para>
   <para>
    Como puede ver, su archivo JavaScript de skin es cargado por
    <filename>_script.js</filename> y su
    funci&oacute;n <literal>displayPage()</literal> es llamada por el
    evento onload de body.
   </para>
  </sect1>
   
  <sect1 id="chm.skins.elements">
   <title>Elementos de P&aacute;gina</title>

   <para>
    Las p&aacute;ginas del Manual de PHP son todas archivos HTML con
    varias etiquetas HTML en ellos, tanto para prop&oacute;sitos de
    presentaci&oacute;n como de divisi&oacute;n. Las p&aacute;ginas
    HTML contienen divisiones a ser usadas para prop&oacute;sitos de
    uso de skins y divisiones varias agregadas por las tablas XSL de
    DocBook.
   </para>
   
   <para>
    Una p&aacute;gina HTML puede ser o una p&aacute;gina de referencia
    de funci&oacute;n o de otro tipo (como una descripci&oacute;n de
    una caracter&iacute;stica). Los skins deben prepararse para
    trabajar con estos dos tipos de p&aacute;ginas por separado la
    mayor parte del tiempo (dependiendo del dise&ntilde;o usado en la
    pr&aacute;ctica).
   </para>
   
   <para>
    Las p&aacute;ginas son estructuradas usando
    etiquetas <literal>&lt;div&gt;</literal> con IDs apropiados para
    facilitar el trabajo de los escritores de skins. Una p&aacute;gina
    consiste de estas partes:
    <itemizedlist>
     <listitem>
      <simpara>
       <literal>&lt;div id="pageContent"&gt;&lt;/div&gt;</literal>
       contiene todo el interior de la p&aacute;gina. La etiqueta
       comienza justo despu&eacute;s
       de <literal>&lt;body&gt;</literal> y termina justo antes
       de <literal>&lt;/body&gt;</literal>. Esta divisi&oacute;n es
       oculta por defecto, necesita mostrarla despu&eacute;s de estar
       listo con el proceso de re-escritura de la p&aacute;gina.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>&lt;div id="pageHeaders"&gt;&lt;/div&gt;</literal>
       contiene las partes de la cabecera de p&aacute;gina. Esto
       incluye el t&iacute;tulo principal de s&oacute;lo-texto (en una
       etiqueta <literal>&lt;span
       id="pageTitle"&gt;&lt;/span&gt;</literal>) y las propiedades de
       funci&oacute;n, en caso de que se trate de una p&aacute;gina de
       funci&oacute;n (contenida en <literal>&lt;span
       id="funcPurpose"&gt;&lt;/span&gt;</literal>, <literal>&lt;span
       id="funcAvail"&gt;&lt;/span&gt;</literal> y <literal>&lt;span
       id="funcUsage"&gt;&lt;/span&gt;</literal>). En caso de que una
       de &eacute;stas tres etiquetas no se encuentre disponible, la
       p&aacute;gina actual no es una p&aacute;gina de funci&oacute;n.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>&lt;div id="pageText"&gt;&lt;/div&gt;</literal>
       contiene la mayor&iacute;a de contenidos de la p&aacute;gina,
       incluyendo ejemplos, notas del manual, advertencias,
       etc. Tambi&eacute;n incluye los segmentos "Vea tambi&eacute;n"
       por ahora, dado que aun no podemos diferenciar entre
       &eacute;stas partes y el texto normal (puede que sea algo que
       cambie en el futuro).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>&lt;div id="pageNotes"&gt;&lt;/div&gt;</literal>
       contiene las notas de usuario (cargadas &eacute;stas desde otro
       archivo HTML por JS). Contiene una cabecera, y luego una
       etiqueta <literal>&lt;div&gt;</literal> sin ID para cada nota
       de usuario y y spans para cada elemento de una nota de usuario
       (con los IDs "email", "date" y "text" respectivamente).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>&lt;div id="pageNav"&gt;&lt;/div&gt;</literal>
       contiene la tabla de navegaci&oacute;n, que a su vez es
       dividida en spans (<literal>&lt;span
       id="navPrev"&gt;&lt;/span&gt;</literal>, <literal>&lt;span
       id="navPath"&gt;&lt;/span&gt;</literal>, <literal>&lt;span
       id="navNext"&gt;&lt;/span&gt;</literal>, <literal>&lt;span
       id="navOnline"&gt;&lt;/span&gt;</literal>, <literal>&lt;span
       id="navThisOnline"&gt;&lt;/span&gt;</literal>
       y <literal>&lt;span
       id="navReportBug"&gt;&lt;/span&gt;</literal>), en donde
       navThisOnline y navReportBug se encuentran al interior de
       navOnline.
      </simpara>
     </listitem>
    </itemizedlist>
    Si desea re-escribir la p&aacute;gina, debe primero leer las
    partes que necesita desde la p&aacute;gina en variables JS, luego
    limpiar los contenidos de pageContent (o s&oacute;lo la parte que
    desea re-escribir), escribir el contenido nuevo y mostrar el div
    pageContent para el usuario. Si no desea hacer cambios
    estructurales, puede simplemente desplegar el div pageContent y
    tan s&oacute;lo especificar una tabla de estilos especial en su
    archivo JS de skin (vea el skin <literal>"greenlinks"</literal>
    como ejemplo).
   </para>
   <para>
    Puede encontrar un "skin Full" desarrollado para mostrarle
    c&oacute;mo crear skins sobre esta estructura. El nombre del skin
    es <literal>"headernostalgia"</literal>. &Eacute;ste re-escribe la
    parte de la cabecera y remueve la tabla de navegaci&oacute;n del
    pie de p&aacute;gina.
   </para>
  </sect1>

  <sect1 id="chm.skins.css">
   <title>Clases CSS</title>
   <para>
    En el momento, no podemos proveer documentaci&oacute;n precisa
    sobre clases CSS utilizables, dado que algunas de las clases de
    estilos XSL de DocBook no son usadas y algunas clases son
    adicionadas. Por favor refi&eacute;rase al archivo CSS de muestra
    incluido para la referencia inicial.
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
