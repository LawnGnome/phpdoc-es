<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.24 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.preg-match" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_match</refname>
  <refpurpose>Realizar una comparación de expresión regular</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>preg_match</methodname>
   <methodparam><type>string</type><parameter>patron</parameter></methodparam>
   <methodparam><type>string</type><parameter>asunto</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">coincidencias</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>banderas</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>desplazamiento</parameter></methodparam>
  </methodsynopsis>
  <para>
   Busca en <parameter>asunto</parameter> por una coincidencia con la
   expresión regular dada en <parameter>patron</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>patron</parameter></term>
     <listitem>
      <para>
       El patrón a buscar, como una cadena.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>asunto</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>coincidencias</parameter></term>
     <listitem>
      <para>
       Si se entrega el parámetro <parameter>coincidencias</parameter>,
       entonces éste es llenado con los resultados de la búsqueda.
       <varname>$coincidencias[0]</varname> contendrá el texto que coincidió
       con el patrón completo, <varname>$coincidencias[1]</varname> tendrá
       el texto que coincidió con el primer sub-patrón en paréntesis
       capturado, y así sucesivamente.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>banderas</parameter></term>
     <listitem>
      <para>
       <parameter>banderas</parameter> puede ser la siguiente bandera:
       <variablelist>
        <varlistentry>
         <term><constant>PREG_OFFSET_CAPTURE</constant></term>
         <listitem>
          <simpara>
           Si es pasada esta bandera, entonces para cada coincidencia
           encontrada también será devuelto el desplazamiento de la cadena
           anexa. Note que esto modifica el valor de retorno a una matriz en
           donde cada elemento es una matriz que consiste de la cadena
           coincidente en la posición <literal>0</literal> y su
           desplazamiento de cadena al interior de
           <parameter>asunto</parameter> en la posición
           <literal>1</literal>.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>desplazamiento</parameter></term>
     <listitem>
      <para>
       Normalmente, la búsqueda comienza desde el principio de la cadena de
       asunto. El parámetro opcional <parameter>desplazamiento</parameter>
       puede ser usado para especificar el lugar alterno desde donde empezar
       la búsqueda.
      </para>
      <note>
       <para>
        El uso de <parameter>desplazamiento</parameter> no es equivalente a
        pasar <literal>substr($asunto, $desplazamiento)</literal> a
        <function>preg_match</function> en lugar de la cadena de asunto, ya
        que <parameter>patron</parameter> puede contener aserciones tales
        como <emphasis>^</emphasis>, <emphasis>$</emphasis> o
        <emphasis>(?&lt;=x)</emphasis>. Compare:
        <informalexample>
         <programlisting role="php">
<![CDATA[
<?php
$asunto = "abcdef";
$patron = '/^def/';
preg_match($patron, $asunto, $coincidencias, PREG_OFFSET_CAPTURE, 3);
print_r($coincidencias);
?>
]]>
         </programlisting>
         &example.outputs;
         <screen>
<![CDATA[
Array
(
)
]]>
         </screen>
         <para>
          mientras que el siguiente ejemplo
         </para>
         <programlisting role="php">
<![CDATA[
<?php
$asunto = "abcdef";
$patron = '/^def/';
preg_match($patron, substr($asunto,3), $coincidencias, PREG_OFFSET_CAPTURE);
print_r($coincidencias);
?>
]]>
         </programlisting>
         <para>
          producirá
         </para>
         <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => def
            [1] => 0
        )

)
]]>
         </screen>
        </informalexample>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>preg_match</function> devuelve el número de veces que
   <parameter>patron</parameter> coincide. Este número será 0 (no existe
   coincidencia) o 1, ya que <function>preg_match</function> detendrá la
   búsqueda después de la primera coincidencia. Por el contrario,
   <function>preg_match_all</function> continuará hasta llegar al final de
   <parameter>asunto</parameter>.  <function>preg_match</function> devuelve
   &false; si ocurre un error.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.3</entry>
       <entry>
        El parámetro <parameter>desplazamiento</parameter> fue agregado
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Se agregó la bandera <constant>PREG_OFFSET_CAPTURE</constant>
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        El parámetro <parameter>banderas</parameter> fue agregado
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Buscar la cadena de texto "php"</title>
    <programlisting role="php">
<![CDATA[
<?php
// El caracter "i" después del delimitador del patrón indica una
// busqueda insensible a mayúsculas/minúsculas
if (preg_match("/php/i", "PHP es el lenguaje de scripting web de moda.")) {
    echo "Se ha encontrado una coincidencia.";
} else {
    echo "No se ha encontrado una coincidencia.";
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Buscar la palabra "web"</title>
    <programlisting role="php">
<![CDATA[
<?php
/* La secuencia \b en el patrón indica un límite de palabra, así que solo la
 * palabra única "web" coincide, y no una palabra parcial como "webbing" o
 * "cobweb" */
if (preg_match("/\bweb\b/i", "PHP es el lenguaje de scripting web de moda.")) {
    echo "Se ha encontrado una coincidencia.";
} else {
    echo "No se ha encontrado una coincidencia.";
}

if (preg_match("/\bweb\b/i", "PHP es el website del lenguaje de scripting de moda.")) {
    echo "Se ha encontrado una coincidencia.";
} else {
    echo "No se ha encontrado una coincidencia.";
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Obtener el nombre de dominio de una URL</title>
    <programlisting role="php">
<![CDATA[
<?php
// obtener el nombre de host de una URL
preg_match('@^(?:http://)?([^/]+)@i',
    "http://www.php.net/index.html", $coincidencias);
$host = $coincidencias[1];

// obtener los últimos dos segmentos del nombre de host
preg_match('/[^.]+\.[^.]+$/', $host, $coincidencias);
echo "el nombre de dominio es: {$coincidencias[0]}\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
el nombre de dominio es: php.net
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <para>
    No use <function>preg_match</function> si sólo desea verificiar si una
    cadena está contenida en otra. Use <function>strpos</function> o
    <function>strstr</function> en su lugar, ya que éstas son alternativas
    más rápidas.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_match_all</function></member>
    <member><function>preg_replace</function></member>
    <member><function>preg_split</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
