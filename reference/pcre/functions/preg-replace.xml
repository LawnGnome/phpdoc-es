<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/pcre.xml, last change in rev 1.1 -->
<!-- last change to 'preg-replace' in en/ tree in rev 1.2 -->
  <refentry id="function.preg-replace">
   <refnamediv>
    <refname>preg_replace</refname>
    <refpurpose>Lleva a cabo la b&uacute;squeda de una expresi&oacute;n y su sustituci&oacute;n</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>mixed</type><methodname>preg_replace</methodname>
     <methodparam><type>mixed</type><parameter>pattern</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>replacement</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>subject</parameter></methodparam>
     </methodsynopsis>
    <para>
     Busca en <parameter>subject</parameter> los emparejamientos con
     <parameter>pattern</parameter> y los sustituye por
     <parameter>replacement</parameter>.</para>
    <para>
     <parameter>replacement</parameter> puede contener referencias de la forma
     <literal>\\<replaceable>n</replaceable></literal>. &Eacute;stas ser&aacute;n
     sustituidas por el texto obtenido por el patr&oacute;n del par&eacute;ntesis
     <replaceable>n</replaceable>&eacute;simo. <replaceable>n</replaceable> puede tener
     un valor de cero a noventa y nueve, y <literal>\\0</literal> se refiere al
     texto casado por el patr&oacute;n completo. Para obtener el n&uacute;mero del subpatr&oacute;n
     de b&uacute;squeda, los par&eacute;ntesis abiertos son contados de izquierda derecha
     tomando el primero como uno.</para>
    <para>
     Si el patr&oacute;n no es encontrado en <parameter>subject</parameter>, entonces
     no se realizar&aacute;n cambios.</para>
    <para>
     Todos los par&aacute;metros de la funci&oacute;n <function>preg_replace</function> pueden
     ser un array.</para>
    <para>
     Si <parameter>subject</parameter> es un array, entonces la b&uacute;squeda y sustituci&oacute;n
     es realizada para todos los elementos de <parameter>subject</parameter>,
     y el valor devuelto es tambi&eacute;n un array.</para>
    <para>
     Si <parameter>pattern</parameter> y <parameter>replacement</parameter>
     son arrays, entonces <function>preg_replace</function> toma un valor desde
     cada array y los usas para buscar y sustituir sobre
     <parameter>subject</parameter>.  Si <parameter>replacement</parameter>
     tiene menos valores que <parameter>pattern</parameter>, entonces la cadena
     vac&iacute;a es usada como valor para el resto de sustituciones. Si <parameter>pattern</parameter>
     es una array y <parameter>replacement</parameter> es una cadena,
     entonces esta cadena de sustituci&oacute;n es usada para todos los valores de
     <parameter>pattern</parameter>. Sin embargo, lo contrario no tiene sentido.
     </para>
    <para>
     El modificador <literal>/e</literal> hace que la funci&oacute;n <function>preg_replace</function>
     trate el par&aacute;metro <parameter>replacement</parameter> como c&oacute;digo PHP despu&eacute;s
     de que la apropiada sustituci&oacute;n sea hecha. Atenci&oacute;n, aseg&uacute;rate que <parameter>replacement</parameter>
     es un c&oacute;digo PHP correcto, de otro modo PHP dar&aacute; un error de parse en la
     l&iacute;nea que contenga <function>preg_replace</function>.
     <note>
      <para>
       Este modificador fue a&ntilde;adido en PHP 4.0.</para>
     </note></para>

    <para>
     <example>
      <title>Sustituir varios valores</title>
      <programlisting>
<![CDATA[
<?php
$patterns = array("/(19|20\d{2})-(\d{1,2})-(\d{1,2})/", "/^\s*{(\w+)}\s*=/");
$replace = array("\\3/\\4/\\1", "$\\1 =");
print preg_replace($patterns, $replace, "{startDate} = 1999-5-27");
?>
]]>
      </programlisting>
     </example>

     Esta ejemplo dar&aacute; como resultado:

     <programlisting>
      $startDate = 5/27/1999
     </programlisting>

     <example>
      <title>Usar el modificador /e</title>
      <programlisting role="php">
<![CDATA[
<?php
preg_replace("/(<\/?)(\w+)([^>]*>)/e", "'\\1'.strtoupper('\\2').'\\3'", $html_body);
?>
]]>
      </programlisting>

      <para>
       Pondr&aacute; en may&uacute;scula todos los tags HTML del texto de entrada.</para>
     </example></para>

    <para>
     Examina tambi&eacute;n <function>preg_match</function>,
     <function>preg_match_all</function>, y
     <function>preg_split</function>.</para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
