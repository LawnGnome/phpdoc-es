<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.16 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/pcre.xml, last change in rev 1.2 -->
<refentry id="function.preg-replace">
 <refnamediv>
  <refname>preg_replace</refname>
  <refpurpose>Realizar una operaci&oacute;n de b&uacute;squeda y
  reemplazo con expresiones regulares</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>preg_replace</methodname>
   <methodparam><type>mixed</type><parameter>patron</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>reemplazo</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>asunto</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limite</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">conteo</parameter></methodparam>
  </methodsynopsis>
  <para>
   Busca en <parameter>asunto</parameter> por coincidencias con
   <parameter>patron</parameter> y las reemplaza con
   <parameter>reemplazo</parameter>.
  </para>
  <para>
   <parameter>reemplazo</parameter> puede contener referencias de la
   forma <literal>\\<replaceable>n</replaceable></literal> o (desde
   PHP 4.0.4) <literal><replaceable>$n</replaceable></literal>, siendo
   &eacute;ste &uacute;ltimo estilo el m&aacute;s recomendable. Cada
   referencia de este tipo ser&aacute; reemplazada con el texto
   capturado por el <replaceable>n</replaceable>&eacute;simo
   patr&oacute;n entre par&eacute;ntesis. <replaceable>n</replaceable>
   puede ser un valor de 0 a 99, y <literal>\\0</literal> o
   <literal>$0</literal> hacen referencia al texto coincidente con el
   patr&oacute;n completo. Los par&eacute;ntesis de apertura son
   contados de izquierda a derecha (comenzando en 1) para obtener el
   n&uacute;mero del sub-patr&oacute;n de captura.
  </para>
  <para>
   Cuando se trabaja con un patr&oacute;n de reemplazo en donde una
   referencia hacia atr&aacute;s est&aacute; inmediatamente seguida
   por otro n&uacute;mero (es decir, se coloca un n&uacute;mero
   literal inmediatamente despu&eacute;s de un patr&oacute;n
   coincidente), no es posible usar la familiar notaci&oacute;n
   <literal>\\1</literal> para la referencia hacia
   atr&aacute;s. <literal>\\11</literal>, por ejemplo,
   confundir&iacute;a a <function>preg_replace</function> ya que no es
   claro si se desea la referencia hacia atr&aacute;s
   <literal>\\1</literal> seguida de un <literal>1</literal> literal,
   o la referencia hacia atr&aacute;s <literal>\\11</literal> seguida
   por nada. En este caso la soluci&oacute;n es usar
   <literal>\${1}1</literal>. Esto crea una referencia hacia
   atr&aacute;s separada <literal>$1</literal>, dejando el
   <literal>1</literal> como una secuencia literal.
  </para>
  <para>
   Si <parameter>asunto</parameter> es una matriz, entonces la
   operaci&oacute;n de b&uacute;squeda y reemplazo se realiza sobre
   cada entrada de <parameter>asunto</parameter>, y el valor de
   retorno es una matriz tambi&eacute;n.
  </para>
  <para>
   El modificador <literal>e</literal> hace que
   <function>preg_replace</function> trate el par&aacute;metro
   <parameter>reemplazo</parameter> como c&oacute;digo PHP
   despu&eacute;s de que las sustituciones de referencias
   correspondientes son realizadas. Consejo: aseg&uacute;rese de que
   <parameter>reemplazo</parameter> constituya una cadena de
   c&oacute;digo PHP v&aacute;lido, de otra forma PHP se
   quejar&aacute; sobre un error de an&aacute;lisis sint&aacute;ctico
   en la l&iacute;nea que contiene la llamada a
   <function>preg_replace</function>.
  </para>
</refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>patron</parameter></term>
     <listitem>
      <para>
       El patr&oacute;n a buscar. Puede ser una cadena o una matriz
       con cadenas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>reemplazo</parameter></term>
     <listitem>
      <para>
       La cadena o una matriz con las cadenas de reemplazo. Si este
       par&aacute;metro es una cadena y el par&aacute;metro
       <parameter>patron</parameter> es una matriz, todos los patrones
       ser&aacute;n reemplazados por esa cadena. Si tanto
       <parameter>patron</parameter> como
       <parameter>reemplazo</parameter> son matrices, cada
       <parameter>patron</parameter> ser&aacute; reemplazado por su
       contraparte en <parameter>reemplazo</parameter>. Si hay menos
       claves en la matriz <parameter>reemplazo</parameter> que en la
       matriz <parameter>patron</parameter>, los patrones excedentes
       ser&aacute;n reemplazados con una cadena vac&iacute;a.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>asunto</parameter></term>
     <listitem>
      <para>
       La cadena o una matriz con cadenas para buscar y reemplazar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limite</parameter></term>
     <listitem>
      <para>
       La cantidad m&aacute;xima posible de reemplazos para cada
       patr&oacute;n en cada cadena <parameter>asunto</parameter>. Su
       valor predeterminado es <literal>-1</literal> (sin
       l&iacute;mite).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>conteo</parameter></term>
     <listitem>
      <para>
       Si se especifica, esta variables ser&aacute; llenada con el
       n&uacute;mero de reemplazos realizados.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>preg_replace</function> devuelve una matriz si el
   par&aacute;metro <parameter>asunto</parameter> es una matriz, o una
   cadena de lo contrario.
  </para>
  <para>
   Si se encuentran coincidencias, el nuevo
   <parameter>asunto</parameter> ser&aacute; devuelto, de otra forma
   <parameter>asunto</parameter> ser&aacute; devuelto intacto.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.1pl2</entry>
       <entry>
        Se agreg&oacute; el par&aacute;metro
        <parameter>limite</parameter>
       </entry>
      </row>
      <row>
       <entry>4.0.4</entry>
       <entry>
        Se agreg&oacute; la forma '$n' para el par&aacute;metro
        <parameter>reemplazo</parameter>
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Se agreg&oacute; el par&aacute;metro
        <parameter>conteo</parameter>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Convertir HTML a texto</title>
    <programlisting role="php">
<![CDATA[
<?php
// $documento debe contener un documento HTML.
// Esto remueve las etiquetas HTML, secciones javacript
// y espacios en blanco. Tambien convierte algunas
// entidades HTML comunes a sus equivalentes en texto.
$busqueda = array ('@<script[^>]*?>.*?</script>@si', // Remover javascript
                 '@<[\/\!]*?[^<>]*?>@si',          // Remover etiquetas HTML
                 '@([\r\n])[\s]+@',                // Remover espacios en blanco
                 '@&(quot|#34);@i',                // Reemplazar entidades HTML
                 '@&(amp|#38);@i',
                 '@&(lt|#60);@i',
                 '@&(gt|#62);@i',
                 '@&(nbsp|#160);@i',
                 '@&(iexcl|#161);@i',
                 '@&(cent|#162);@i',
                 '@&(pound|#163);@i',
                 '@&(copy|#169);@i',
                 '@&#(\d+);@e');                    // evaluar como php

$reemplazar = array ('',
                  '',
                  '\1',
                  '"',
                  '&',
                  '<',
                  '>',
                  ' ',
                  chr(161),
                  chr(162),
                  chr(163),
                  chr(169),
                  'chr(\1)');

$texto = preg_replace($busqueda, $reemplazar, $documento);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Uso de referencias hacia atr&aacute;s seguidas de literales
    num&eacute;ricos</title>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = 'April 15, 2003';
$patron = '/(\w+) (\d+), (\d+)/i';
$reemplazo = '${1}1,$3';
echo preg_replace($patron, $reemplazo, $cadena);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
April1,2003
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Uso de matrices indexadas con
    <function>preg_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = 'The quick brown fox jumped over the lazy dog.';
$patrones[0] = '/quick/';
$patrones[1] = '/brown/';
$patrones[2] = '/fox/';
$reemplazos[2] = 'bear';
$reemplazos[1] = 'black';
$reemplazos[0] = 'slow';
echo preg_replace($patrones, $reemplazos, $cadena);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
The bear black slow jumped over the lazy dog.
]]>
    </screen>
    <para>
     Ordenando por clave los patrones y reemplazos, podemos obtener lo
     que quer&iacute;amos.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
ksort($patrones);
ksort($reemplazos);
echo preg_replace($patrones, $reemplazos, $cadena);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
The slow black bear jumped over the lazy dog.
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Reemplazo de varios valores</title>
    <programlisting role="php">
<![CDATA[
<?php
$patrones = array ('/(19|20)(\d{2})-(\d{1,2})-(\d{1,2})/',
                   '/^\s*{(\w+)}\s*=/');
$reemplazar = array ('\3/\4/\1\2', '$\1 =');
echo preg_replace($patrones, $reemplazar, '{fechaInicio} = 1999-5-27');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
$fechaInicio = 5/27/1999
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Uso del modificador 'e'</title>
    <programlisting role="php">
<![CDATA[
<?php
preg_replace("/(<\/?)(\w+)([^>]*>)/e",
             "'\\1'.strtoupper('\\2').'\\3'",
             $cuerpo_html);
?>
]]>
    </programlisting>
    <para>
     Esto pasar&iacute;a a may&uacute;sculas todas las etiquetas HTML
     en el texto de entrada.
    </para>
   </example>
  </para>
  <para>
   <example>
    <title>Eliminar espacios en blanco</title>
    <para>
     Este ejemplo remueve espacios de m&aacute;s de una cadena.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = 'foo   o';
$cadena = preg_replace('/\s\s+/', ' ', $cadena);
// Ahora sera 'foo o'
echo $cadena;
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Uso del par&aacute;metro
    <parameter>conteo</parameter></title>
    <programlisting role="php">
<![CDATA[
<?php
$conteo = 0;

echo preg_replace(array('/\d/', '/\s/'), '*', 'xp 4 to', -1 , $conteo);
echo $conteo; //3
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
xp***to
3
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Cuando se usan matrices con <parameter>patron</parameter> y
    <parameter>reemplazo</parameter>, las claves son procesadas en el
    orden en que aparecen en la matriz. Esto <emphasis>no es
    necesariamente</emphasis> lo mismo que el orden de &iacute;ndices
    num&eacute;ricos. Si usan &iacute;ndices para identificar
    cu&aacute;l <parameter>patron</parameter> deber&iacute;a ser
    reemplazado por cu&aacute;l <parameter>reemplazo</parameter>,
    deber&iacute;a usar <function>ksort</function> sobre cada matriz
    antes de llamar <function>preg_replace</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_match</function></member>
    <member><function>preg_replace_callback</function></member>
    <member><function>preg_split</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
