<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 288721 $ -->
<!-- EN-Revision: 288721 Maintainer: seros Status: ready -->
<refentry xml:id="function.preg-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_replace</refname>
  <refpurpose>Realiza una búsqueda y sustitución de una expresión regular</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>preg_replace</methodname>
   <methodparam><type>mixed</type><parameter>patrón</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>sustitución</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>sujeto</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>límite</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">cuenta</parameter></methodparam>
  </methodsynopsis>
  <para>
   Busca en <parameter>sujeto</parameter> coincidencias de
   <parameter>patrón</parameter> y las reemplaza con
   <parameter>sustitución</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>patrón</parameter></term>
     <listitem>
      <para>
       El patrón de búsqueda. Puede ser tanto una cadena como una matriz con
       cadenas.
      </para>
      <para>
       El modificador <literal>e</literal> hace que <function>preg_replace</function>
       trate el parámetro <parameter>sustitución</parameter> como código PHP después
       de que esté hecha la sustitución de referencias apropiada. Consejo: asegúrese de que
       <parameter>sustitución</parameter> constituye una cadena de código PHP válida,
       de otra manera PHP responderá con un error de interpretación en la línea que contenga
       <function>preg_replace</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sustitución</parameter></term>
     <listitem>
      <para>
       La cadena o matriz con cadenas a reemplazar. Si este parámetro es una
       cadena y el parámetro <parameter>patrón</parameter> es una matriz,
       todos los patrones serán sustituidos por esa cadena. Si ambos parámetros,
       <parameter>patrón</parameter> y <parameter>sustitución</parameter>,
       son matrices, cada <parameter>patrón</parameter> será reemplazado
       por la <parameter>sustitución</parameter> equivalente. Si
       hay menos elementos en la matriz <parameter>sustitución</parameter>
       que en la matriz <parameter>patrón</parameter>, cualquier
       <parameter>patrón</parameter> extra será reemplazado por una cadena vacía.
      </para>
      <para>
       <parameter>sustitución</parameter> puede contener referencias de la forma
       <literal>\\<replaceable>n</replaceable></literal> o (desde PHP 4.0.4)
       <literal>$<replaceable>n</replaceable></literal>, siendo preferida la
       última forma. Cada referencia de este tipo será sustituida por el texto
       capturado por el <replaceable>n</replaceable>-simo patrón entre paréntesis.
       <replaceable>n</replaceable> puede ser desde 0 a 99, y
       <literal>\\0</literal> o <literal>$0</literal> se refiere al texto coincidido
       por el patrón completo. Los paréntesis de apertura se cuentan de izquierda a derecha
       (comenzando por 1) para obtener el número de sub-patrones de captura.
       Se debe doblar la barra invertida para poder usarla en la sustitución
       (cadena PHP <literal>"\\\\"</literal>).
      </para>
      <para>
       Cuando se trabaja con un patrón de sustitución donde una retro-referencia es
       immediatamente seguida de otro número (p.ej.: colocar un número literal
       immediatamente después de un patrón coincidido), no puede usar la notación familiar
       <literal>\\1</literal> para sus retro-referencias.  
       <literal>\\11</literal>, por ejemplo, confundiría a
       <function>preg_replace</function> ya que no sabe si quiere que
       la retro-referencia <literal>\\1</literal> esté seguida por un literal
       <literal>1</literal>, o que la retro-referencia <literal>\\11</literal>
       esté seguida de nada. En este caso la solución es usar
       <literal>\${1}1</literal>. Esto crea una retro-referencia
       <literal>$1</literal> aislada, dejando el <literal>1</literal>
       como un literal.
      </para>
      <para>
       Cuando se usa el modificador <literal>e</literal>, esta función escapa
       algunos caracteres (a saber, <literal>'</literal>, <literal>"</literal>,
       <literal>\</literal> y NULL) en la cadena que sustituye a las
       retro-referencias. Esto está hecho para asegurarse de que no surjan errores de sintaxis
       en el uso de retro-referencias con comillas simples o dobles (p.ej.
       <literal>'strlen(\'$1\')+strlen("$2")'</literal>). Asegúrese de que
       conoce la <link linkend="language.types.string">sintaxis de
       cadena</link> para saber cómo se asemejarán las cadenas interpretadas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sujeto</parameter></term>
     <listitem>
      <para>
       La cadena o matriz con cadenas a buscar y sustituir.
      </para>
      <para>
       Si <parameter>sujeto</parameter> es una matriz, entonces la búsqueda y
       sustitución se llevan a cabo para cada entrada de <parameter>sujeto</parameter>,
       y el valor devuleto también es una matriz.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>límite</parameter></term>
     <listitem>
      <para>
       Las sustituciones máximas posibles por cada patrón en cada
       cadena <parameter>sujeto</parameter>. Por defecto es
       <literal>-1</literal> (sin límite).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cuenta</parameter></term>
     <listitem>
      <para>
       Si se especifica, esta variable será rellenada con el número de
       sustituciones hechas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>preg_replace</function> devuelve una matriz si el
   parámetro <parameter>sujeto</parameter> es una matriz, o, por el contrario,
   una cadena.
  </para>
  <para>
   Si se encuentran coincidencias, el nuevo <parameter>sujeto</parameter> será
   devuelto, de otro modo <parameter>sujeto</parameter> será
   devuelto sin cambios o &null; si se produjo un error.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Añadido el parámetro <parameter>cuenta</parameter>
       </entry>
      </row>
      <row>
       <entry>4.0.4</entry>
       <entry>
        Añadida la forma '$n' para el parámetro <parameter>sustitución</parameter>
       </entry>
      </row>
      <row>
       <entry>4.0.2</entry>
       <entry>
        Añadido el parámetro <parameter>límite</parameter>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Usar retro-referencias seguidas de literales numéricos</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = 'April 15, 2003';
$pattern = '/(\w+) (\d+), (\d+)/i';
$replacement = '${1}1,$3';
echo preg_replace($pattern, $replacement, $string);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
April1,2003
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Usar matrices indexadas con <function>preg_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$string = 'The quick brown fox jumped over the lazy dog.';
$patterns[0] = '/quick/';
$patterns[1] = '/brown/';
$patterns[2] = '/fox/';
$replacements[2] = 'bear';
$replacements[1] = 'black';
$replacements[0] = 'slow';
echo preg_replace($patterns, $replacements, $string);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
The bear black slow jumped over the lazy dog.
]]>
    </screen>
    <para>
     Al usar ksort en patrones y sustituciones, podríamos obtener lo que buscábamos.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
ksort($patterns);
ksort($replacements);
echo preg_replace($patterns, $replacements, $string);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
The slow black bear jumped over the lazy dog.
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Sustituir varios valores</title>
    <programlisting role="php">
<![CDATA[
<?php
$patterns = array ('/(19|20)(\d{2})-(\d{1,2})-(\d{1,2})/',
                   '/^\s*{(\w+)}\s*=/');
$replace = array ('\3/\4/\1\2', '$\1 =');
echo preg_replace($patterns, $replace, '{startDate} = 1999-5-27');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
$startDate = 5/27/1999
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Usar el modificador 'e'</title>
    <programlisting role="php">
<![CDATA[
<?php
preg_replace("/(<\/?)(\w+)([^>]*>)/e", 
             "'\\1'.strtoupper('\\2').'\\3'", 
             $html_body);
?>
]]>
    </programlisting>
    <para>
     Esto pondría en mayúsculas todas las etiquetas HTML en el texto de entrada.
    </para>
   </example>
  </para>
  <para>
   <example>
    <title>Quitar los espacios en blanco</title>
    <para>
     Este ejemplo quita los espacios en blanco en exceso de una cadena.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'foo   o';
$str = preg_replace('/\s\s+/', ' ', $str);
// Ahora esto será 'foo o'
echo $str;
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Usar el parámetro <parameter>cuenta</parameter></title>
    <programlisting role="php">
<![CDATA[
<?php
$count = 0;

echo preg_replace(array('/\d/', '/\s/'), '*', 'xp 4 to', -1 , $count);
echo $count; //3
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
xp***to
3
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Cuando se usan matrices con <parameter>patrón</parameter> y
    <parameter>sustitución</parameter>, las claves se procesan en el orden
    en que aparecen en la matriz. Éste <emphasis>no es necesariamente</emphasis> el
    mismo que el orden de índice numérico. Si usa índices para identificar qué
    <parameter>patrón</parameter> debería ser sustituido por cuál
    <parameter>sustitución</parameter>, debería usar
    <function>ksort</function> en cada matriz antes de llamar a
    <function>preg_replace</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_filter</function></member>
    <member><function>preg_match</function></member>
    <member><function>preg_replace_callback</function></member>
    <member><function>preg_split</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
