<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 288721 $ -->
<!-- EN-Revision: 288721 Maintainer: seros Status: ready -->
<refentry xml:id="function.preg-split" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_split</refname>
  <refpurpose>Didive una cadena mediante una expresión regular</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>preg_split</methodname>
   <methodparam><type>string</type><parameter>patrón</parameter></methodparam>
   <methodparam><type>string</type><parameter>sujeto</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>límite</parameter><initializer>-1</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>banderas</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Divide la cadena dada mediante una expresión regular.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>patrón</parameter></term>
     <listitem>
      <para>
       El patrón de búsqueda, como cadena.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sujeto</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>límite</parameter></term>
     <listitem>
      <para>
       Si se especifica, entonces sólo las sub-cadenas hasta el <parameter>límite</parameter>
       son devueltas, con el resto de la cadena siendo colocada en la última
       sub-cadena. Un <parameter>límite</parameter> de -1, 0 o null significa "sin límite"
       y, como es un estándar en PHP, puede usar null para saltar hacia el
       parámetro <parameter>banderas</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>banderas</parameter></term>
     <listitem>
      <para>
       <parameter>banderas</parameter> puede ser una combinación de las siguientes
       banderas (combinadas con el operador | a nivel de bits):
       <variablelist>
        <varlistentry>
         <term><constant>PREG_SPLIT_NO_EMPTY</constant></term>
         <listitem>
          <simpara>
          Si se aplica esta bandera, sólo los elementos no vacíos serán devueltos por
          <function>preg_split</function>.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_SPLIT_DELIM_CAPTURE</constant></term>
         <listitem>
          <simpara>
          Si se aplica esta bandera, las expresiones entre paréntesis en el patrón delimitador
          serán capturadas y devueltas.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_SPLIT_OFFSET_CAPTURE</constant></term>
         <listitem>
          <para>
           Si se aplica esta bandera, por cada coincidencia producida, el índice de la cadena añadida
           también será devuelto. Observe que esto cambia el valor devuelto
           dentro de una matriz donde cada elemento es una matriz consistente en
           la cadena coincidente en el índice <literal>0</literal> y su índice de cadena
           dentro de <parameter>sujeto</parameter> en el índice <literal>1</literal>.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una matriz que contiene sub-cadenas de <parameter>sujeto</parameter>
   dividido por los límites coincidentes de <parameter>patrón</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Se añadió <constant>PREG_SPLIT_OFFSET_CAPTURE</constant>
       </entry>
      </row>
      <row>
       <entry>4.0.5</entry>
       <entry>
        Se añadió <constant>PREG_SPLIT_DELIM_CAPTURE</constant>
       </entry>
      </row>
      <row>
       <entry>4.0.0</entry>
       <entry>
        Se añadió el parámetro <parameter>banderas</parameter>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>preg_split</function> : Obtiene las partes de una cadena de búsqueda</title>
    <programlisting role="php">
<![CDATA[
<?php
// divide la frase mediante cualquier número de comas o caracteres espacio,
// lo que incluye " ", \r, \t, \n y \f
$claves = preg_split("/[\s,]+/", "lenguaje de programación, hipertexto");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Dividir una cadena en sus caracteres constituyentes</title>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = 'cadena';
$caracteres = preg_split('//', $cadena, -1, PREG_SPLIT_NO_EMPTY);
print_r($caracteres);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Dividir una cadena mediante coincidencias y sus índices</title>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = 'lenguaje de programación hipertexto';
$caracteres = preg_split('/ /', $cadena, -1, PREG_SPLIT_OFFSET_CAPTURE);
print_r($caracteres);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => lenguaje
            [1] => 0
        )

    [1] => Array
        (
            [0] => de
            [1] => 9
        )

    [2] => Array
        (
            [0] => programación
            [1] => 12
        )

    [3] => Array
        (
            [0] => hipertexto
            [1] => 25
        )

)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <para>
    Si no necesita la potencia de expresiones regulares, puede optar por
    alternativas más rápidas (no obstante más sencillas) como <function>explode</function>
    o <function>str_split</function>.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>spliti</function></member>
    <member><function>split</function></member>
    <member><function>implode</function></member>
    <member><function>preg_match</function></member>
    <member><function>preg_match_all</function></member>
    <member><function>preg_replace</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
