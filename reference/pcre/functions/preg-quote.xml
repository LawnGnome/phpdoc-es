<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.11 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.preg-quote" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_quote</refname>
  <refpurpose>Escapar caracteres de expresiones regulares</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>preg_quote</methodname>
   <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
  <methodparam choice="opt"><type>string</type><parameter>delimitador</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>preg_quote</function> toma <parameter>cadena</parameter> y
   coloca una barra invertida al frente de cada caracter que es parte de la
   sintaxis de expresiones regulares. Esto resulta útil si usted tiene una
   cadena en tiempo de ejecución que necesita comparar con algún texto y la
   cadena puede contener caracteres especiales de expresiones regulares.
  </para>
  <para>
   Los caracteres especiales de expresiones regulares son:
   <literal>. \ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | :</literal>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>cadena</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>delimitador</parameter></term>
     <listitem>
      <para>
       Si el valor opcional <parameter>delimitador</parameter> es
       especificado, éste también será escapado. Esto es útil para escapar
       el delimitador que es requerido por las funciones PCRE. El caracter /
       es el delimitador usado con más frecuencia.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la cadena escapada.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>preg_quote</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$palabras_clave = '$40 para un g3/400';
$palabras_clave = preg_quote($palabras_clave, '/');
echo $palabras_clave; // devuelve \$40 para un g3\/400
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Marcar una palabra en estilo cursivo al interior de un
    texto</title>
    <programlisting role="php">
<![CDATA[
<?php
// En este ejemplo, preg_quote($palabra) es usado para evitar que
// los asteriscos tengan un significado especial en la expresión
// regular.

$cuerpo_texto = "Este libro es *muy* difícil de encontrar.";
$palabra = "*muy*";
$cuerpo_texto = preg_replace ("/" . preg_quote($palabra) . "/",
                              "<i>" . $palabra . "</i>",
                              $cuerpo_texto);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
