<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 288721 $ -->
<!-- EN-Revision: 288721 Maintainer: seros Status: ready -->

<refentry xml:id="function.preg-quote" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_quote</refname>
  <refpurpose>Escapar caracteres en una expresión regular</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>preg_quote</methodname>
   <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
  <methodparam choice="opt"><type>string</type><parameter>delimitador</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>preg_quote</function> toma <parameter>cadena</parameter>
   y pone una barra invertida delante de cada carácter que es parte de
   la sintaxis de la expresión regular. Esto es útil si tiene una
   cadena en tiempo de ejecución que necesite comparar con algún texto y la
   cadena pueda contener caracteres de expresiones regulares especiales.
  </para>
  <para>
   Los caracteres de expresiones regulares especiales son:
   <literal>. \ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | : -</literal>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>cadena</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>delimitador</parameter></term>
     <listitem>
      <para>
       Si se especifica el <parameter>delimitador</parameter> opcional, éste
       también será escapado. Esto es útil para escapar el delimitador
       que es necesario para las funciones PCRE. El delimitador / es el que se usa
       comúnmente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la cadena escapada.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        El carácter <literal>-</literal> ahora es escapado
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>preg_quote</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$keywords = '$40 for a g3/400';
$keywords = preg_quote($keywords, '/');
echo $keywords; // devuelve \$40 for a g3\/400
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Poner en cursiva una palabra dentro de un texto</title>
    <programlisting role="php">
<![CDATA[
<?php
// En este ejemplo, preg_quote($word) se usa para que los
// asteriscos sigan teniendo un significado especial en la
// expresión regular.

$textbody = "This book is *very* difficult to find.";
$word = "*very*";
$textbody = preg_replace ("/" . preg_quote($word) . "/",
                          "<i>" . $word . "</i>",
                          $textbody);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
