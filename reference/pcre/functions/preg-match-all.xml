<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 290051 $ -->
<!-- EN-Revision: 290051 Maintainer: seros Status: ready -->

<refentry xml:id="function.preg-match-all" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_match_all</refname>
  <refpurpose>Realiza una comparación global de una expresión regular</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>preg_match_all</methodname>
   <methodparam><type>string</type><parameter>patrón</parameter></methodparam>
   <methodparam><type>string</type><parameter>sujeto</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">coincidencias</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>banderas</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>índice</parameter></methodparam>
  </methodsynopsis>
  <para>
   Busca en <parameter>sujeto</parameter> todas las coincidencias de la expresión
   regular dada en <parameter>patrón</parameter> y las introduce en
   <parameter>coincidencias</parameter> en el orden especificado por
   <parameter>banderas</parameter>.
  </para>
  <para>
   Después haber encontrado la primera coincidencia, las búsquedas subsiguientes continúan
   desde el final de la última coincidencia.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>patrón</parameter></term>
     <listitem>
      <para>
       El patrón de búsqueda, como cadena.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sujeto</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>coincidencias</parameter></term>
     <listitem>
      <para>
       Matriz de todas las coincidencias en una matriz multi-dimensional ordenadas según
       <parameter>banderas</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>banderas</parameter></term>
     <listitem>
      <para>
       Puede ser una combinación de las siguientes banderas (observe que no tiene
       sentido usar <constant>PREG_PATTERN_ORDER</constant> junto con
       <constant>PREG_SET_ORDER</constant>):
       <variablelist>
        <varlistentry>
         <term><constant>PREG_PATTERN_ORDER</constant></term>
         <listitem>
          <para>
           Ordena los resultados de forma que <varname>$coincidencias[0]</varname> es una matriz de
           coincidencias del patrón completo, <varname>$coincidencias[1]</varname> es una matriz
           de cadenas coincidentes por el primer subpatrón enter paréntesis,
           y así sucesivamente.
          </para>
          <para>
           <informalexample>
            <programlisting role="php">
<![CDATA[
<?php
preg_match_all("|<[^>]+>(.*)</[^>]+>|U",
    "<b>example: </b><div align=left>this is a test</div>",
    $out, PREG_PATTERN_ORDER);
echo $out[0][0] . ", " . $out[0][1] . "\n";
echo $out[1][0] . ", " . $out[1][1] . "\n";
?>
]]>
            </programlisting>
            &example.outputs;
            <screen role="html">
<![CDATA[
<b>example: </b>, <div align=left>this is a test</div>
example: , this is a test
]]>
            </screen>
            <para>
             Así, <varname>$out[0]</varname> contiene una matriz de cadenas que coinciden
             con el patrón completo,
             y <varname>$out[1]</varname> contiene una matriz de cadenas encerradas entre etiquetas.
            </para>
           </informalexample>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_SET_ORDER</constant></term>
         <listitem>
          <para>
           Ordena los resultados de forma que <varname>$coincidencias[0]</varname> es una matriz
           del primer conjunto de coincidencias, <varname>$coincidencias[1]</varname> es una
           matriz del segundo conjunto de coincidencias,
           y así sucesivamente.
           <informalexample>
            <programlisting role="php">
<![CDATA[
<?php
preg_match_all("|<[^>]+>(.*)</[^>]+>|U",
    "<b>example: </b><div align=\"left\">this is a test</div>",
    $out, PREG_SET_ORDER);
echo $out[0][0] . ", " . $out[0][1] . "\n";
echo $out[1][0] . ", " . $out[1][1] . "\n";
?>
]]>
            </programlisting>
            &example.outputs;
            <screen role="html">
<![CDATA[
<b>example: </b>, example:
<div align="left">this is a test</div>, this is a test
]]>
            </screen>
           </informalexample>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_OFFSET_CAPTURE</constant></term>
         <listitem>
          <para>
           Si se pasa esta bandera, por cada coincidencia producida, el índice de la cadena añadida
           también será devulto. Observe que esto cambia el valor de
           <parameter>coincidencias</parameter> dentro de una matriz donde cada elemento
           es una matriz consistente en la cadena coincidente en el índice <literal>0</literal>
           y su índice de cadena dentro de <parameter>sujeto</parameter> en el índice
           <literal>1</literal>.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       Si no se da un orden de bandera, se asume <constant>PREG_PATTERN_ORDER</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>índice</parameter></term>
     <listitem>
      <para>
       Normalmente, la búsqueda comienza por el principio de la cadena objetivo.
       El parámetro opcional <parameter>índice</parameter> se puede usar para
       especificar el lugar alternativo desde el cual comenzar la búsqueda (en bytes).
      </para>
      <note>
       <para>
        Usar <parameter>índice</parameter> no es equivalente a pasar
        <literal>substr($sujeto, $índice)</literal> a
        <function>preg_match</function> en lugar de la cadena objetivo,
        ya que <parameter>patrón</parameter> puede contener declaraciones como
        <emphasis>^</emphasis>, <emphasis>$</emphasis> o
        <emphasis>(?&lt;=x)</emphasis>. Véase <function>preg_match</function>
        para los ejemplos.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el número de coincidendias del patrón completo (el cual puede ser cero),
   o &false; si se produjo un error.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.3</entry>
       <entry>
        Se añadió el parámetro <parameter>índice</parameter>
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Se añadió las bandera <constant>PREG_OFFSET_CAPTURE</constant>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Obtener todos los números de teléfono de algún texto.</title>
    <programlisting role="php">
<![CDATA[
<?php
preg_match_all("/\(?  (\d{3})?  \)?  (?(1)  [\-\s] ) \d{3}-\d{4}/x",
                "Call 555-1212 or 1-800-555-1212", $phones);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Buscar coincidencias de etiquetas HTML (codicioso)</title>
    <programlisting role="php">
<![CDATA[
<?php
// El \\2 es un ejemplo de retro-referencia. Esto le dice a pcre que
// debe coincidir el segundo conjunto de paréntesis en la expresión regular
// misma, el cual sería el ([\w]+) en este caso. La barra invertida extra es
// necesaria ya que la cadena está entre comilla dobles.
$html = "<b>bold text</b><a href=howdy.html>click me</a>";

preg_match_all("/(<([\w]+)[^>]*>)(.*?)(<\/\\2>)/", $html, $matches, PREG_SET_ORDER);

foreach ($matches as $val) {
    echo "matched: " . $val[0] . "\n";
    echo "part 1: " . $val[1] . "\n";
    echo "part 2: " . $val[2] . "\n";
    echo "part 3: " . $val[3] . "\n";
    echo "part 4: " . $val[4] . "\n\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
matched: <b>bold text</b>
part 1: <b>
part 2: b
part 3: bold text
part 4: </b>

matched: <a href=howdy.html>click me</a>
part 1: <a href=howdy.html>
part 2: a
part 3: click me
part 4: </a>
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Usar sub-patrones nominados</title>
    <programlisting role="php">
<![CDATA[
<?php

$str = <<<FOO
a: 1
b: 2
c: 3
FOO;

preg_match_all('/(?<name>\w+): (?<digit>\d+)/', $str, $matches);

print_r($matches);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => a: 1
            [1] => b: 2
            [2] => c: 3
        )

    [name] => Array
        (
            [0] => a
            [1] => b
            [2] => c
        )

    [1] => Array
        (
            [0] => a
            [1] => b
            [2] => c
        )

    [digit] => Array
        (
            [0] => 1
            [1] => 2
            [2] => 3
        )

    [2] => Array
        (
            [0] => 1
            [1] => 2
            [2] => 3
        )

)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_match</function></member>
    <member><function>preg_replace</function></member>
    <member><function>preg_split</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
