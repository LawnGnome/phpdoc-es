<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.17 Maintainer: lboshell Status: ready -->
<!-- Purpose: basic.php -->
<!-- Membership: core -->

 <reference xml:id="ref.outcontrol" xmlns="http://docbook.org/ns/docbook">
  <title>Funciones de Control de Salida</title>
  <titleabbrev>Control de Salida</titleabbrev>

  <partintro>
   <section xml:id="outcontrol.intro">
    &reftitle.intro;
    <para>
     Las funciones de Control de Salida le permiten controlar cuándo es
     enviada la salida desde el script. Esto puede resultar útil en muchas
     situaciones diferentes, especialmente si necesita enviar cabeceras al
     navegador después de que su script ha comenzado a enviar datos. Las
     funciones de Control de Salida no afectan las cabeceras enviadas usando
     <function>header</function> o <function>setcookie</function>, sólo
     funciones como <function>echo</function> y los datos entre bloques de
     código PHP.
    </para>
    <note>
     <para>
      Cuando se actualice desde PHP 4.1.x (y 4.2.x) a 4.3.x, debido a un
      error en versiones anteriores, debe asegurarse de que
      <literal>implict_flush</literal> tenga el valor <literal>OFF</literal>
      en su archivo &php.ini;, de otra forma cualquier salida resultado de
      <function>ob_start</function> no será escondida.
     </para>
    </note>
   </section>

   <section xml:id="outcontrol.requirements">
    &reftitle.required;
    &no.requirement;
   </section>

   <section xml:id="outcontrol.installation">
    &reftitle.install;
    &no.install;
   </section>

   &reference.outcontrol.ini;

   <section xml:id="outcontrol.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section xml:id="outcontrol.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section xml:id="outcontrol.examples">
   &reftitle.examples;
    <para>
     <example>
      <title>Ejemplo de Control de Salida</title>
      <programlisting role="php">
<![CDATA[
<?php

ob_start();
echo "Hola\n";

setcookie("nombre_cookie", "datos_cookie");

ob_end_flush();

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     En el anterior ejemplo, la salida de <function>echo</function> sería
     almacenada en el búfer de salida hasta que
     <function>ob_end_flush</function> sea llamada. Entre tanto, la llamada
     a <function>setcookie</function> almacena satisfactoriamente una cookie
     sin causar un error. (Normalmente, usted no puede enviar cabeceras al
     navegador después de que se han enviado datos.)
    </para>
   </section>

   <section xml:id="outcontrol.seealso">
    &reftitle.seealso;
    <para>
     Vea también <function>header</function> y
     <function>setcookie</function>.
    </para>
   </section>
  </partintro>

&reference.outcontrol.entities.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

