<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 294406 $ -->
<!-- EN-Revision: 294406 Maintainer: seros Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.openssl-random-pseudo-bytes">
 <refnamediv>
  <refname>openssl_random_pseudo_bytes</refname>
  <refpurpose>Genera una cadena pseudo-aleatoria</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>openssl_random_pseudo_bytes</methodname>
   <methodparam><type>string</type><parameter>length</parameter></methodparam>
   <methodparam><type>string</type><parameter>strong</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_random_pseudo_bytes</function> devuelve un &string; de longitud
   <parameter>length</parameter> caracteres. También indica si se ha usado
   un algoritmo fuerte para producir estos bytes pseudo-aleatorios en el segundo argumento.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       La longitud de la cadena desada. Debe ser un entero positivo. PHP intentará
       asignar este parámetro a un entero no nulo para usarlo. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>strong</parameter></term>
     <listitem>
      <para>
       Si se usó un algoritmo fuerte o no, como un tipo boolean.
       Este parámetro será &null; si se produjo un error.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el &string; generado en caso de éxito, &return.falseforfailure;.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>openssl_random_pseudo_bytes</function></title>
    <programlisting role="php">
<![CDATA[
<?php
for ($i = -1; $i < 5; $i++) {
    var_dump(bin2hex(openssl_random_pseudo_bytes($i, $strong)));
	var_dump($strong);
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
string(0) ""
NULL
string(0) ""
NULL
string(2) "f6"
bool(true)
string(4) "8999"
bool(true)
string(6) "c202c9"
bool(true)
string(8) "45261b8f"
bool(true)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
