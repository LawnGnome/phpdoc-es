<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 313269 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<!-- Membership: pecl -->
 
<book xml:id="book.sdo" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Objetos de Datos de Servicio</title>
 <titleabbrev>SDO</titleabbrev>
 
 <!-- {{{ preface -->
 <preface xml:id="intro.sdo">
  &reftitle.intro;
  <para>
   Los Objetos de Datos de Servicio (en inglés Service Data Objects - SDOs) habilitan a las aplicaciones de PHP para trabajar con
   datos de diferentes orígenes (como una consulta de base de datos, un fichero XML,
   y una hoja de cálculo) usando una única interfaz.
  </para>
  <para>
   Cada tipo diferente de origen de datos necesita un Servicio de Acceso a Datos (en inglés
   Data Access Service - DAS) para proporcionar acceso a los datos en el origen de datos.
   En la aplicación PHP se usa un DAS para crear una instancia de SDO 
   que representa alguna información del origen de datos. Se puede entonces
   establecer y obtener valores en la instancia de SDO usando la interfaz estándar de
   SDO. Finalmente se usa un DAS para volver a escribir los datos modificados
   en un origen de datos, normalmente el mismo.
  </para>
  <para>
   Vea la
   <link linkend="sdo.das.table">lista de Servicios de Acceso a Datos</link>
   para los detalles de los que están
   actualmente disponibles. Además del DAS proporcionado, SDO también
   proporciona interfaces para que otros sean implementados
   (véase la sección sobre la <link linkend="sdo.class.sdo-das-spis">Interfaz
   de Servicios de Acceso a Datos de SDO</link> para más detalles).
  </para>
   <para>
    Esta extensión deriva de conceptos tomados de la
    <link xlink:href="&url.ibm.sdo;">especificación de Objetos de Datos de Servicio</link>.
    Incluye una versión del SDO de
    <link xlink:href="&url.apache.tuscany;">Apache Tuscany</link> para proyectos C++.
  </para>
  <section xml:id="sdo.intro.structure">
   <title>La escrutctura de un Objeto de Datos de Servicio</title>
   <para>
    Una instancia de un Objeto de Datos de Servicio se compone de un árbol de objetos de datos.
    El árbol está definido por relaciones de contención entre los objetos de
    datos. Por ejemplo, un objeto de datos Compañía podría consistir en varios
    objetos de datos Departamento y por lo tanto la Compañía tendría
    una relación de contención con los Departamentos.
   </para>
   <para> Un SDO también puede tener referencias de no contención entre objetos de datos del
    árbol. Por ejemplo, un objeto de datos Empleado podría referenciar a otro empleado para
    identificar un mentor de profesión.
   </para>
   <para>
    Así como los objetos de datos se referencian unos a otros también pueden tener
    propiedades primitivas. Por ejemplo, el objeto de datos Compañía podría
    tener una propiedad llamada "nombre" de tipo string, para contener el nombre
    de la compañía (por ejemplo, "Acme").
   </para>
   <para> Cada una de estas propiedades de un objeto de datos - relaciones de contención,
    referencias de no contención, o propiedades primitivas - pueden ser polievaluadas o
    o monoevaluadas. En los ejemplos de arriba, Departamentos es polievaluada y
    el nombre de la Compañía es monoevaluada.
   </para>
   <para> En PHP, cada objeto de datos SDO es representado como un objeto de PHP. Se pueden acceder a
    las propiedades del objeto de datos usando la sintaxis de objetos o la sintaxis de array asociativo.
    Se verán algunos ejemplos de esto más tarde.
   </para>
  </section>
 </preface>
 <!-- }}} -->
 
 &reference.sdo.setup;
 &reference.sdo.constants;
 &reference.sdo.limitations;
 &reference.sdo.examples;
 &reference.sdo.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

