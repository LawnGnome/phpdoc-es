<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/oracle.xml, last change in rev 1.1 -->
<!-- last change to 'ora-bind' in en/ tree in rev 1.2 -->
  <refentry id="function.ora-bind">
   <refnamediv>
    <refname>Ora_Bind</refname>
    <refpurpose>Vincula una variable PHP a un par&aacute;metro Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>int</type><methodname>ora_bind</methodname>
     <methodparam><type>int</type><parameter>cursor</parameter></methodparam>
     <methodparam><type>string</type><parameter>nombre de variable PHP</parameter></methodparam>
     <methodparam><type>string</type><parameter>nombre de par&aacute;metro SQL</parameter></methodparam>
     <methodparam><type>int</type><parameter>longitud</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>tipo</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve verdadero si el v&iacute;nculo se realiza con &eacute;xito, y sino devuelve falso.  Los detalles
     de los errores pueden examinarse usando la funciones <function>ora_error</function> y
     <function>ora_errorcode</function>.</para>

    <para>
     Esta funci&oacute;n liga la variable PHP nombrada con el par&aacute;metro SQL.
     El par&aacute;mtro SQL debe estar en la forma ":name".  Con el par&aacute;metro
     optativo tipo, se define si el par&aacute;metro SQL se trata de un par&aacute;metro
     de entrada/salida (0 y por defecto), entrada (1) o salida (2).  Como en PHP
     3.0.1, se puede usar las constantes ORA_BIND_INOUT, ORA_BIND_IN y
     ORA_BIND_OUT en lugar de los n&uacute;meros.</para>
 
    <para>
     ora_bind debe ser llamada despu&eacute;s de <function>ora_parse</function> y
     antes de <function>ora_exec</function>. Los valores de entrada pueden pasarse por
     asignaci&oacute;n a las variables PHP vinculadas, despues de la llamada a
     <function>ora_exec</function> dichas variables contendr&aacute;n los valores de salida, si
     &eacute;stos estuvieran disponibles.

<informalexample>
      <programlisting role="php">
&lt;?php
ora_parse($curs, "declare tmp INTEGER; begin tmp := :in; :out := tmp; :x := 7.77; end;");
ora_bind($curs, "result", ":x", $len, 2);
ora_bind($curs, "input", ":in", 5, 1);
ora_bind($curs, "output", ":out", 5, 2);
$input = 765;
ora_exec($curs);
echo "Result: $result&lt;BR>Out: $output&lt;BR>In: $input";
?>
</programlisting>
     </informalexample></para>

   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
