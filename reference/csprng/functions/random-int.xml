<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 336959 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.random-int" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>random_int</refname>
  <refpurpose>Genera enteros seudoaleatorios criptográficamente seguros</refpurpose>
 </refnamediv>
 
 <refsect1 role="description"><!-- {{{ -->
  &reftitle.description;
  <methodsynopsis role="procedural">
   <type>int</type><methodname>random_int</methodname>
   <methodparam><type>int</type><parameter>min</parameter></methodparam>
   <methodparam><type>int</type><parameter>max</parameter></methodparam>
  </methodsynopsis>
  <para>
   Generates cryptographic random integers that are suitable for use where unbiased results are critical
   (i.e. shuffling a Poker deck).
   
   Genera enteros aleatorios criptográficos aptos para cuando son críticos resultados imparciales
   (p.ej., barajar una baraja de póquer).
  </para>
  <para>
   Las fuentes de la aleatoriedad son:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     En Windows se emplea exclusivamente <function>CryptGenRandom</function>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>arc4random_buf</function> se emplea si está disponible (generalmente específico de BSD)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <filename>/dev/arandom</filename> se emplea cuando está disponible
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <filename>/dev/urandom</filename> se emplea cuando ninguna de las anteriores está disponible
    </simpara>
   </listitem>
  </itemizedlist>
 </refsect1><!-- }}} -->
 
 <refsect1 role="parameters"><!-- {{{ -->
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>min</parameter></term>
    <listitem>
     <para>
      El valor mínimo a devolver hasta <constant>PHP_INT_MIN</constant>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>max</parameter></term>
    <listitem>
     <para>
      El valor máximo a devolver hasta <constant>PHP_INT_MAX</constant>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1><!-- }}} -->
 
 <refsect1 role="returnvalues"><!-- {{{ -->
  &reftitle.returnvalues;
  <para>
   Devuelve un entero aleatorio criptográficamente seguro.
  </para>
 </refsect1><!-- }}} -->
 
 <refsect1 role="errors"><!-- {{{ -->
  &reftitle.errors;
  <para>
   Emite un <constant>E_WARNING</constant> y devuelve &false; cuando no está disponible una fuente con aleatoriedad sufieciente.
  </para>
 </refsect1><!-- }}} -->
 
 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <example xml:id="random-int.example.basic"><!-- {{{ -->
   <title>Ejmplo de <function>random-int</function></title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(random_int(100, 999));
var_dump(random_int(-1000, 0));
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
int(248)
int(-898)
]]>
   </screen>
  </example><!-- }}} -->
 </refsect1><!-- }}} -->
 
 <refsect1 role="seealso"><!-- {{{ -->
  &reftitle.seealso;
  <simplelist>
   <member><function>random_bytes</function></member>
  </simplelist>
 </refsect1><!-- }}} -->
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
