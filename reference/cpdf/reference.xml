<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.cpdf">
  <title>Funciones de ClibPDF</title>
  <titleabbrev>ClibPDF</titleabbrev>

  <partintro>

   <simpara>
    ClibPDF Le permite crear documentos PDF con PHP. Est&aacute; disponible en 
    <ulink url="http://www.fastio.com">FastIO</ulink> pero no es software libre.
    Deber&iacute;a leer la licencia antes de comenzar a utilizar ClibPDF. Si usted no 
    puede cumplir el acuerdo de la licencia considere el utilizar la pdflib de 
    Thomas Merz, que tambien es muy potente. La funcionalidad y la API de
    ClibPDF son similares a la pdflib de Thomas Merz pero, de acuerdo con
    FastIO, ClibPDF es mas r&aacute;pida y crea documentos mas peque&ntilde;os. Esto puede 
    haber cambiado con la nueva versi&oacute;n 2.0 de pdflib. Un simple banco de 
    pruebas (el ejemplo pdfclock.c de pdflib 2.0 trasformado en un script php)
    en realidad no muestra ninguna diferencia en velocidad. Por tanto, 
    pruebe las dos y vea cual hace el mejor trabajo para usted.</simpara>

   <simpara>
    Esta documentaci&oacute;n deber&iacute;a ser le&iacute;da junto con el manual de ClibPDF ya que
    este explica la librer&iacute;a con mucho mas detalle. 
    </simpara>

   <simpara>
    Muchas funciones en le ClibPDF nativa y el m&oacute;dulo PHP, as&iacute; como en pdflib,
    tienen el mismo nombre. Todas las funciones excepto
    <function>cpdf_open</function> toman el manejador del documento com el 
    primer par&aacute;metro.
    Actualmente este manejador no se usa internamente desde que ClibPDF no
    soporta la creaci&oacute;n de varios documentos PDF al mismo tiempo. Realmente, 
    ni deber&iacute;a intentarlo, los resultados son impredecibles. No puedo 
    supervisar cuales son las consecuencias en un sistema multihilo. De 
    acuerdo con el autor de ClibPDF, esto cambiar&aacute; en alguno de las pr&oacute;ximas 
    veriones (la versi&oacute;n actual, cuando eto fue escrito es 1.10). Si usted 
    necesita esta capacidad, use el m&oacute;dulo pdflib.</simpara>

   <note><simpara>
    La funci&oacute;n <function>cpdf_set_font</function> ha cambiado desde que PHP3
    soporta fuentes asi&aacute;ticas. El par&aacute;metro que codifica ya no es un entero
    sino una cadena.</simpara></note>

   <simpara>
    Una gran ventaja de ClibPDF sobre pdflib es la posibilidad de crear el
    documento PDF completamente en memoria sin usar ficheros temporales.
    Esto tambi&eacute;n proporciona la capaciad de pasar coordenadas en una unidad
    de longitud predefinida. Esta es una cualidad &uacute;til pero puede ser simulada
    con <function>pdf_translate</function>.</simpara>

   <simpara>
    La mayor&iacute;a de las funciones son f&aacute;ciles de usar. La parte mas dif&iacute;cil es,
    probablemente, crear un documento PDF muy simple. El siguiente ejemplo
    deber&iacute;a ayudarle a comenzar. En &eacute;l se crea un documento con una p&aacute;gina.
    La p&aacute;gina contiene el texto "Times-Roman" con una fuente de 30pt. El texto
    est&aacute; subrayado.</simpara>

    <example>
     <title>Ejemplo simple de ClibPDF</title>
     <programlisting>
<![CDATA[
<?php
$cpdf = cpdf_open(0);
cpdf_page_init($cpdf, 1, 0, 595, 842);
cpdf_add_outline($cpdf, 0, 0, 0, 1, "Page 1");
cpdf_set_font($cpdf, "Times-Roman", 30, "WinAnsiEncoding");
cpdf_set_text_rendering($cpdf, 1);
cpdf_text($cpdf, "Times Roman outlined", 50, 750);
cpdf_moveto($cpdf, 50, 740);
cpdf_lineto($cpdf, 330, 740);
cpdf_stroke($cpdf);
cpdf_finalize($cpdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($cpdf);
cpdf_close($cpdf);
?>
]]>
    </programlisting>
  </example>

  <simpara>
  La distribuci&oacute;n de pdflib contiene un ejemplo mas comlejo que crea una serie
  de p&aacute;ginas con un reloj anal&oacute;gico. Aqu&iacute; est&aacute; ese ejemplo convertido en PHP 
  usando la extensi&oacute;n ClibPDF:</simpara>

  <example>
   <title>Ejemplo con pdfclock de la distribuci&oacute;n pdflib 2.0</title>
   <programlisting>
<![CDATA[
<?php
$radius = 200;
$margin = 20;
$pagecount = 40;

$pdf = cpdf_open(0);
cpdf_set_creator($pdf, "pdf_clock.php3");
cpdf_set_title($pdf, "Reloj Analigico");
  
while($pagecount-- > 0) {
  cpdf_page_init($pdf, $pagecount+1, 0, 2 * ($radius + $margin), 2 * ($radius + $margin), 1.0);
  
  cpdf_set_page_animation($pdf, 4, 0.5, 0, 0, 0);  /* limpiar */
  
  cpdf_translate($pdf, $radius + $margin, $radius + $margin);
  cpdf_save($pdf);
  cpdf_setrgbcolor($pdf, 0.0, 0.0, 1.0);
  
  /*  cambio de minuto */
  cpdf_setlinewidth($pdf, 2.0);
  for ($alpha = 0; $alpha < 360; $alpha += 6)
    {
    cpdf_rotate($pdf, 6.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin/3, 0.0);
    cpdf_stroke($pdf);
    }
  
  cpdf_restore($pdf);
  cpdf_save($pdf);
 
  /* cambios de 5 minutos */
  cpdf_setlinewidth($pdf, 3.0);
  for ($alpha = 0; $alpha < 360; $alpha += 30)
  {
    cpdf_rotate($pdf, 30.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin, 0.0);
    cpdf_stroke($pdf);
  }

  $ltime = getdate();

  /* dibujar la aguja de las horas */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['minutos']/60.0) + $ltime['horas'] - 3.0) * 30.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius/2, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* dibujar el minutero */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['segundos']/60.0) + $ltime['minutos'] - 15.0) * 6.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius * 0.8, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* dibujar la seguna mano */
  cpdf_setrgbcolor($pdf, 1.0, 0.0, 0.0);
  cpdf_setlinewidth($pdf, 2);
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['segundos'] - 15.0) * 6.0));
  cpdf_moveto($pdf, -$radius/5, 0.0);
  cpdf_lineto($pdf, $radius, 0.0);
  cpdf_stroke($pdf);
  cpdf_restore($pdf);

  /* dibujar un pequeno circulo en el centro */
  cpdf_circle($pdf, 0, 0, $radius/30);
  cpdf_fill($pdf);

  cpdf_restore($pdf);

  cpdf_finalize_page($pdf, $pagecount+1);
}

cpdf_finalize($pdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($pdf);
cpdf_close($pdf);
?>
]]>
    </programlisting>
   </example>
  </partintro>

&reference.cpdf.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

