<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/pgsql.xml, last change in rev 1.1 -->
<!-- last change to 'pg-fetch-object' in en/ tree in rev 1.2 -->
  <refentry id="function.pg-fetch-object">
   <refnamediv>
    <refname>pg_Fetch_Object</refname>
    <refpurpose>obtener una fila en forma de objeto</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>object</type><methodname>pg_fetch_object</methodname>
     <methodparam><type>int</type><parameter>result</parameter></methodparam>
     <methodparam><type>int</type><parameter>row</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam>
     </methodsynopsis>
    <para> 
     Devuelve: Un objeto cuyas propiedades se corresponden con los campos de la fila obtenida, o &false;
     si no hay m&aacute;s filas.
    </para>
    <para> 
     <function>pg_fetch_object</function> es parecida a 
     <function>pg_fetch_array</function>, con una diferencia - se devuelve un objeto,
     en vez de un array. Indirectamente, eso significa que solo puedes acceder a los
     datos por medio de su nombre de campo, y no a trav&eacute;s de sus posiciones
     (los n&uacute;meros son nombres de propiedad invalidos).
    </para>
    <para>
     El tercer par&aacute;metro opcional <parameter>result_type</parameter> en
     <function>pg_fetch_object</function> es una constante y puede tomar
     cualquiera de los siguientes valores: PGSQL_ASSOC, PGSQL_NUM, y PGSQL_BOTH.
     <note>
      <para>
       <parameter>Result_type</parameter> se a&ntilde;adio en PHP 4.0.
      </para>
     </note>
    </para>
    <para>
     Referente a la velocidad, la funci&oacute;n es identica a 
     <function>pg_fetch_array</function>, y practicamente tan r&aacute;pida como
     <function>pg_fetch_row</function> (la diferencia es insignificante).
    </para>
    <para> 
     Ver tambi&eacute;n: <function>pg_fetch_array</function> y
     <function>pg_fetch_row</function>.
     <example>
      <title>Postgres fetch object</title>
      <programlisting role="php">
&lt;?php 
$database = "verlag";
$db_conn = pg_connect ("localhost", "5432", "", "", $database);
if (!$db_conn): ?>
    &lt;H1>Failed connecting to postgres database &lt;? echo $database ?>&lt;/H1> &lt;?
    exit;
endif;

$qu = pg_exec ($db_conn, "SELECT * FROM verlag ORDER BY autor");
$row = 0; // postgres needs a row counter other dbs might not 

while ($data = pg_fetch_object ($qu, $row)):
    echo $data->autor." (";
    echo $data->jahr ."): ";
    echo $data->titel."&lt;BR>";
    $row++;
endwhile; ?>

&lt;PRE>&lt;?php
$fields[] = Array ("autor", "Author");
$fields[] = Array ("jahr",  "  Year");
$fields[] = Array ("titel", " Title");

$row= 0; // postgres needs a row counter other dbs might not
while ($data = pg_fetch_object ($qu, $row)):
    echo "----------\n";
    reset ($fields);
    while (list (,$item) = each ($fields)):
        echo $item[1].": ".$data->$item[0]."\n";
    endwhile;
    $row++;
endwhile;
echo "----------\n"; ?>
&lt;/PRE> &lt;?php
pg_freeResult ($qu);
pg_close ($db_conn);
?>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
