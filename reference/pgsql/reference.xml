<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.27 Maintainer: lboshell Status: ready -->
<!-- Purpose: database.vendors -->
<!-- Membership: bundled, external -->

<reference id="ref.pgsql">
 <title>Funciones PostgreSQL</title>
 <titleabbrev>PostgreSQL</titleabbrev>

 <partintro>
  <section id="pgsql.intro">
   &reftitle.intro;
   <para>
    La base de datos PostgreSQL es un producto Open Source y
    disponible sin costo. Postgres, desarrollado originalmente en el
    Deportamento de Ciencias de Computaci&oacute;n de UC Berkeley, fue
    pionero en muchos de los conceptos de objetos y relacionales que
    ahora est&aacute;n apareciendo en algunas bases de datos
    comerciales. Provee soporte para lenguajes SQL92/SQL99,
    transacciones, integridad referencial, procedimientos almacenados
    y extensibilidad de tipos. PostgreSQL es un descendiente de
    c&oacute;digo abierto de su c&oacute;digo original de Berkeley.
   </para>
  </section>

  <section id="pgsql.requirements">
   &reftitle.required;
   <para>
    Para hacer uso del soporte PostgreSQL, necesita PostgreSQL 6.5 o
    posterior, PostgreSQL 8.0 o posterior para habilitar todas las
    caracter&iacute;sticas del m&oacute;dulo. PostgreSQL soporta
    varias codificaciones de caracteres, incluyendo
    codificaci&oacute;n de caracteres multibyte. Su versi&oacute;n
    actual, asi como m&aacute;s informaci&oacute;n sobre PostgreSQL se
    encuentra disponible en <ulink
    url="&url.pgsql;">&url.pgsql;</ulink> y la <ulink
    url="&url.pgsql.manual;">Documentaci&oacute;n de
    PostgreSQL</ulink>.
   </para>
  </section>

  &reference.pgsql.configure;

  &reference.pgsql.ini;

  <section id="pgsql.resources">
  &reftitle.resources;
   <para>
    Existen dos tipos de recurso usados en el m&oacute;dulo
    PostgreSQL. El primero es el identificador de enlace para una
    conexi&oacute;n de base de datos, el segundo es un recurso que
    contiene el resultado de una consulta.
   </para>
  </section>

  &reference.pgsql.constants;

  <section id="pgsql.notes">
  &reftitle.notes;
   <note>
    <para>
     No todas las funciones est&aacute;n soportadas por todas las
     versiones compiladas de PHP. Depende de la versi&oacute;n de
     libpq (la biblioteca cliente en C de PostgreSQL) y la forma en
     que &eacute;sta haya sido compilada. Si hacen falta extensiones
     de PostreSQL en PHP, ha de ser porque su versi&oacute;n de libpq
     no las soporta.
    </para>
   </note>
   <note>
    <para>
     La mayor&iacute;a de funciones de PostgreSQL aceptan
     <parameter>conexion</parameter> como el primer par&aacute;metro
     opcional. Si &eacute;ste no es definido, es usada la
     &uacute;ltima conexi&oacute;n abierta. Si no existe, las
     funciones devuelven &false;.
    </para>
   </note>
   <note>
    <para>
     PostgreSQL convierte autom&aacute;ticamente todos los
     identificadores (p.ej. nombres de tablas/columnas) a valores en
     min&uacute;sculas al momento de crear objetos y al momento de
     hacer consultas. Para forzar el uso de identificadores en
     may&uacute;sculas o estilo mixto, es necesario escapar el
     identificador usando comillas dobles ("").
    </para>
   </note>
   <note>
    <para>
     PostgreSQL no cuenta con comandos especiales para recuperar
     informaci&oacute;n de esquemas de bases de datos (p.ej. todas las
     tablas en la base de datos actual). En su lugar, existe un
     esquema est&aacute;ndar llamado
     <literal>information_schema</literal> en PostgreSQL 7.4 y
     versiones posteriores, que contiene vistas de sistema con toda la
     informaci&oacute;n necesaria, en un formato de f&aacute;cil
     consulta. Vea la <ulink
     url="&url.pgsql.manual;">Documentaci&oacute;n de
     PostgreSQL</ulink> para m&aacute;s detalles.
    </para>
   </note>
  </section>

  <section id="pgsql.examples">
   &reftitle.examples;
    <para>
     Este sencillo ejemplo muestra c&oacute;mo conectarse, ejecutar
     una consulta, imprimer las filas de resultado y desconectarse de
     una base de datos PostgreSQL.
     <example>
      <title>Ejemplo de vista general de la extensi&oacute;n
      PostgreSQL</title>
      <programlisting role="php">

<![CDATA[
<?php
// Conexion, seleccion de base de datos
$bd = pg_connect("host=localhost dbname=publicaciones user=www
       password=foo");
    or die('No pudo conectarse: ' . pg_last_error());

// Realizar una consulta SQL
$consulta = 'SELECT * FROM autores';
$resultado = pg_query($consulta) or die('Consulta fallida: ' . pg_last_error());

// Impresion de resultados en HTML
echo "<table>\n";
while ($linea = pg_fetch_array($resultado, null, PGSQL_ASSOC)) {
    echo "\t<tr>\n";
    foreach ($linea as $valor_col) {
        echo "\t\t<td>$valor_col</td>\n";
    }
    echo "\t</tr>\n";
}
echo "</table>\n";

// Liberar conjunto de resultados
pg_free_result($resultado);

// Cerrar conexion
pg_close($enlace);

?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
 </partintro>

&reference.pgsql.functions;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
