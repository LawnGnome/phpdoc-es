<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 323238 Maintainer: andresdzphp Status: ready -->

<refentry xml:id="amqpqueue.consume" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>AMQPQueue::consume</refname>
  <refpurpose>Consume mensajes de una cola</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>AMQPQueue::consume</methodname>
   <methodparam><type>callback</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer><constant>AMQP_NOPARAM</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   El bloqueo de la función que va a recuperar el mensaje siguiente de la cola cuando esté disponible y hacerlo pasar a la llamada de retorno.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
     <varlistentry>
      <term><parameter>callback</parameter></term>
      <listitem>
       <para>
        Una función de llamada de retorno para que el mensaje de consumo será pasada. La función debe aceptar como mínimo un parámetro, un objeto <classname>AMQPEnvelope</classname>,
        y un segundo parámetro opcional <classname>AMQPQueue</classname> de que el mensaje fue consumido.
       </para>
       <para>
         The <methodname>AMQPQueue::consume</methodname> will not return the processing thread back to the PHP script until the callback function returns &false;.
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Una máscara de bits de cualquiera de las flags: <constant>AMQP_NOACK</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una <classname>AMQPChannelException</classname> si el canal no está abierto.
  </para>
  <para>
   Lanza una <classname>AMQPConnectionException</classname> si se perdió la conexión con el corredor.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <methodname>AMQPQueue::consume</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

/* Crea una conección utilizando todas las credenciales por defecto: */
$connection = new AMQPConnection();
$connection->connect();

$channel = new AMQPChannel($connection);

/* Crea un objeto de la cola */
$queue = new AMQPQueue($channel);

// Declara la cola
$queue->declare('myqueue');

$i = 0;
function processMessage($envelope, $queue) {
   global $i;
   echo "Message $i: " . $envelope->getBody() . "\n";
   $i++;
   if ($i > 10) {
       // Bail after 10 messages
       return false;
    }
}

// Consume los mensajes en la cola
$queue->consume("processMessage");

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
