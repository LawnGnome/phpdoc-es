<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.17 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
<refentry id="function.fscanf">
 <refnamediv>
  <refname>fscanf</refname>
  <refpurpose>Procesa la entrada desde un archivo de acuerdo a un
  formato</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Descripción</title>
   <methodsynopsis>
    <type>mixed</type><methodname>fscanf</methodname>
    <methodparam><type>resource</type><parameter>gestor</parameter></methodparam>
    <methodparam><type>string</type><parameter>formato</parameter></methodparam>
    <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
   </methodsynopsis>
  <para>
   La función <function>fscanf</function> es similar a
   <function>sscanf</function>, pero toma su entrada desde un archivo
   asociado con <parameter>gestor</parameter> e interpreta la entrada de
   acuerdo al <parameter>formato</parameter> especificado, el cual es
   descrito en la documentación de <function>sprintf</function>. Si sólo se
   pasan dos parámetros a esta función, los valores procesados serán
   devueltos como una matriz. De otro modo, si se pasan parámetros
   opcionales, la función devolverá el número de valores asignados. Los
   parámetros opcionales deben ser pasados por referencia.
  </para>
  <para>
   Cualquier espacio en blanco en la cadena de formato crea una
   correspondencia con cualquier espacio en blanco en la secuencia de
   entrada. Esto quiere decir que incluso una tabulación
   <literal>\t</literal> en la cadena de formato puede coincidir con un
   caracter de espacio sencillo en la secuencia de entrada.
  </para>
  <para>
   <example>
    <title>Ejemplo de <function>fscanf</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$gestor = fopen("usuarios.txt","r");
while ($info_usuario = fscanf($gestor, "%s\t%s\t%s\n")) {
    list ($nombre, $profesion, $cod_pais) = $info_usuario;
    //... hacer algo con los valores
}
fclose($gestor);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Contenido de usuarios.txt</title>
    <programlisting role="txt">
<![CDATA[
javier  argonauta       pe
hiroshi escultor        jp
robert  desempleado     us
luigi   florista        it
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <simpara>
    Antes de PHP 4.3.0, el máximo número de caracteres leídos desde el
    archivo era 512 (o hasta el primer \n, lo que primero ocurriera). A
    partir de PHP 4.3.0 se leerán y analizarán líneas de longitudes
    arbitrariamente grandes.
   </simpara>
  </note>
  <para>
   Vea también <function>fread</function>, <function>fgets</function>,
   <function>fgetss</function>, <function>sscanf</function>,
   <function>printf</function>, y <function>sprintf</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
