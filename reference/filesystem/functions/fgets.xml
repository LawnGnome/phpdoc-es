<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.13 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
  <refentry id="function.fgets">
   <refnamediv>
    <refname>fgets</refname>
    <refpurpose>Obtiene una l&iacute;nea desde el apuntador de
    archivo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>string</type><methodname>fgets</methodname>
      <methodparam><type>resource</type><parameter>gestor</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>longitud</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve una cadena de hasta <parameter>longitud</parameter> - 1
     bytes le&iacute;dos desde el archivo apuntado por
     <parameter>gestor</parameter>. La lectura termina cuando se han
     le&iacute;do <parameter>longitud</parameter> - 1 bytes, se
     alcanza un salto de l&iacute;nea (el cual se incluye en el valor
     devuelto), o en EOF (lo que ocurra primero). Si no se especifica
     una longitud, el valor predeterminado es de 1k, o 1024 bytes.
    </para>
    <para>
     Si ocurre un error, devuelve &false;.
    </para>
    <para>
     Errores comunes:
    </para>
    <simpara>
     Aquellos acostumbrados a la sem&aacute;ntice de
     <function>fgets</function> en 'C', debe notar la diferencia en el
     modo en que <literal>EOF</literal> es devuelto.
    </simpara>
    
    &fs.validfp.all;

    <para>
     A continuaci&oacute;n se presenta un ejemplo simple:
     <example> 
      <title>Lectura de un archivo l&iacute;nea a l&iacute;nea</title>
      <programlisting role="php">
<![CDATA[
<?php
$gestor = fopen("/tmp/archivo_entrada.txt", "r");
while (!feof($gestor)) {
    $bufer = fgets($gestor, 4096);
    echo $bufer;
}
fclose($gestor);
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <simpara>
      El par&aacute;metro <parameter>longitud</parameter> se hizo
      opcional en PHP 4.2.0, si se omite, se asume 1024 como la
      longitud de l&iacute;nea. A partir de PHP 4.3, al omitir
      <parameter>longitud</parameter>, la lectura de la secuencia
      continuar&aacute; hasta que se alcance el final de la
      l&iacute;nea. Si la mayor&iacute;a de l&iacute;neas en el
      archivo superan los 8KB, es m&aacute;s eficiente en
      t&eacute;rminos de recursos espicificar la longitud
      m&aacute;xima de l&iacute;nea en su script.
     </simpara>
    </note>
    <note>
     <simpara>
      Esta funci&oacute;n es segura con material binario desde PHP
      4.3. Las versiones anteriores no contaban con &eacute;sta
      caracter&iacute;stica.
     </simpara>
    </note>
    &note.line-endings;
    <para>
     Vea tambi&eacute;n <function>fread</function>,
     <function>fgetc</function>, <function>stream_get_line</function>,
     <function>fopen</function>, <function>popen</function>,
     <function>fsockopen</function>, y
     <function>stream_set_timeout</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
