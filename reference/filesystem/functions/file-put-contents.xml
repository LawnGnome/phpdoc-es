<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.9 Maintainer: lboshell Status: ready -->
<refentry id="function.file-put-contents">
 <refnamediv>
  <refname>file_put_contents</refname>
  <refpurpose>Escribir una cadena sobre un archivo</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>file_put_contents</methodname>
   <methodparam><type>string</type><parameter>nombre_archivo</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>datos</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>banderas</parameter></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>contexto</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Idéntico a llamar <function>fopen</function>,
   <function>fwrite</function>, y <function>fclose</function>
   sucesivamente.
  </simpara>
  <para>
   También es posible especificar el parámetro
   <parameter>datos</parameter> como una matriz (matrices que no sean
   multi-dimensionales). Esto es equivalente a
   <literal>file_put_contents($nombre_archive, implode('',
   $matriz))</literal>.
  </para>
  <para>
   A partir de PHP 5.1.0, también es posible pasar un recurso de
   secuencia al parámetro <parameter>datos</parameter>. El resultado
   es que el resto del búfer de esa secuencia será copiado al archivo
   especificado. Esto es similar al uso de
   <function>stream_copy_to_stream</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>nombre_archivo</parameter></term>
     <listitem>
      <para>
       El nombre del archivo en donde escribir los datos
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>datos</parameter></term>
     <listitem>
      <para>
       Los datos a escribir. Puede ser un valor tipo
       <type>string</type>, <type>array</type> o un recurso
       <type>stream</type> (explicado anteriormente).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>banderas</parameter></term>
     <listitem>
      <para>
       <parameter>banderas</parameter> puede recibir
       <constant>FILE_USE_INCLUDE_PATH</constant>,
       <constant>FILE_APPEND</constant> y/o
       <constant>LOCK_EX</constant> (adquirir un bloqueo exclusivo),
       sin embargo la opción
       <constant>FILE_USE_INCLUDE_PATH</constant> debe ser usada con
       precaución.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>contexto</parameter></term>
     <listitem>
      <para>
       Un recurso de contexto
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   La función devuelve la cantidad de bytes escritos al archivo.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Se agregó soporte para <constant>LOCK_EX</constant> y la
        habilidad de pasar un recurso de secuencia al parámetro
        <parameter>datos</parameter>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>


 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  &note.context-support;
  &tip.fopen-wrapper;
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fopen</function></member>
    <member><function>fwrite</function></member>
    <member><function>file_get_contents</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
