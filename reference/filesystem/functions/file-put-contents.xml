<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 288721 $ -->
<!-- EN-Revision: 288721 Maintainer: seros Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.file-put-contents">
 <refnamediv>
  <refname>file_put_contents</refname> 
  <refpurpose>Escribe una cadena a un archivo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>file_put_contents</methodname>
   <methodparam><type>string</type><parameter>nombre_de_archivo</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>información</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>banderas</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>contexto</parameter></methodparam>
  </methodsynopsis>
  <para> 
   Esta función es idéntica que llamar a <function>fopen</function>, 
   <function>fwrite</function> y <function>fclose</function> sucesivamente
   para escribir información en un archivo.
  </para>
  <para>
   Si <parameter>nombre_de_archivo</parameter> no existe, se crea el archivo.
   De otro modo, es archivo existente se sobrescribe, a menos que la
   bandera <constant>FILE_APPEND</constant> esté establecida.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>nombre_de_archivo</parameter></term>
     <listitem>
      <para>
       Ruta del fichero donde se escribe la informaición.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>información</parameter></term>
     <listitem>
      <para>
       La informaicón a escribir. Puede ser tanto un recurso <type>string</type>, como
       <type>array</type> o <type>stream</type>.
      </para>
      <para>
       Si <parameter>información</parameter> es un recurso <type>stream</type>, el
       buffer restante de ese flujo será copiado al archivo especificado.
       Esto es similar a usar <function>stream_copy_to_stream</function>.
      </para>
      <para>
       También puede especificar el parámetro <parameter>información</parameter> como una
       matriz de una sóla dimensión. Esto es equivalente a
       <literal>file_put_contents($nombre_de_archivo, implode('', $matriz))</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>banderas</parameter></term>
     <listitem>
      <para>
       El valor de <parameter>banderas</parameter> puede ser cualquier combinación de
       las siguientes banderas (con algunas restricciones), unidas por el operador
       binario OR (<literal>|</literal>).
      </para>
      <para>
       <table>
        <title>Banderas disponibles</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Bandera</entry>
           <entry>Descripción</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>
            <constant>FILE_USE_INCLUDE_PATH</constant>
           </entry>
           <entry>
            Busca <parameter>nombre_de archivo</parameter> en el directorio incluido.
            Véase <link linkend="ini.include-path">include_path</link> para más
            información.
           </entry>
          </row>
          <row>
           <entry>
            <constant>FILE_APPEND</constant>
           </entry>
           <entry>
            Si el archivo <parameter>nombre_de_archivo</parameter> ya existe, añade
            la información al archivo en vez de sobrescribirlo. Se excluye
            mutuamente con LOCK_EX ya que los añadidos son atómicos por lo que no hay
            razón para bloquear el archivo.
           </entry>
          </row>
          <row>
           <entry>
            <constant>LOCK_EX</constant>
           </entry>
           <entry>
            Adquiere un bloqueo exclusivo del archivo mientras se está ejecutando la
            escritura. Se excluye mutuamente con FILE_APPEND.
           </entry>
          </row>
          <row>
           <entry>
            <constant>FILE_TEXT</constant>
           </entry>
           <entry>
            La <parameter>información</parameter> es ecrita en modo texto. Si la semántica
            unicode está habilitada, la codificación por defecto es UTF-8.
            Puede especificar una codificación diferente creando un contexto a medida
            o usando <function>stream_default_encoding</function> para cambiar
            el predeterminado. Esta bandera no puede ser
            usada con <constant>FILE_BINARY</constant>. Esta bandera está disponible sólo
            a partir de PHP 6.
           </entry>
          </row>
          <row>
           <entry>
            <constant>FILE_BINARY</constant>
           </entry>
           <entry>
            La <parameter>información</parameter> será escrita en modo binario. Este
            es el ajuste predeterminado y no se puede usar con
            <constant>FILE_TEXT</constant>. Esta bandera sólo está disponible a partir de
            PHP 6.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>contexto</parameter></term>
     <listitem>
      <para>
       Un recurso de contexto válido creado con
       <function>stream_context_create</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Esta función devuelve el número de bytes que fueron escritos en el archivo, o
   &false; si falla.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo sencillo de uso</title>
    <programlisting role="php">
<![CDATA[
<?php
$archivo = 'gente.txt';
// Abre el archivo para obtener el contenido existente
$actual = file_get_contents($archivo);
// Añade una nueva persona al archivo
$actual .= "John Smith\n";
// Escribe los contenidos al archivo
file_put_contents($archivo, $actual);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Usar banderas</title>
    <programlisting role="php">
<![CDATA[
<?php
$archivo = 'gente.txt';
// La nueva persona a añdir al archivo
$persona = "John Smith\n";
// Añade los contenidos de $persona al archivo nominado por $archivo.
file_put_contents($archivo, $persona, FILE_APPEND);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Añadido el soporte de contexto
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Añadido el soporte para <constant>LOCK_EX</constant> y la capacidad de pasar
        un recurso tipo stream al parámetro <parameter>información</parameter>
       </entry>
      </row>
      <row>
       <entry>6.0.0</entry>
       <entry>
        Añadido el soporte para la banderas <constant>FILE_TEXT</constant> y
        <constant>FILE_BINARY</constant>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
  
 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  &tip.fopen-wrapper;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fopen</function></member>
    <member><function>fwrite</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>stream_context_create</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
