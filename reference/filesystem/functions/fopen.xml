<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.30 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
<refentry xml:id="function.fopen" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fopen</refname>
  <refpurpose>Abre un archivo o URL</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Descripción</title>
  <methodsynopsis>
   <type>resource</type><methodname>fopen</methodname>
   <methodparam><type>string</type><parameter>nombre_archivo</parameter></methodparam>
   <methodparam><type>string</type><parameter>modo</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>usar_ruta_inclusion</parameter></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>contexto</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>fopen</function> asocia un recurso con nombre, especificado por
   <parameter>nombre_archivo</parameter>, a una secuencia. Si
   <parameter>nombre_archivo</parameter> es de la forma "esquema://...", se
   asume que es una URL y PHP buscará por un gestor de protocolo (también
   conocido como envoltura) para tal esquema. Si no hay envolturas
   registradas para ese protocolo, PHP emitirá una noticia para ayudarle a
   rastrear problemas potenciales en su script, y luego continúa como si
   <parameter>nombre_archivo</parameter> indicara un archivo corriente.
  </simpara>
  <simpara>
   Si PHP decide que <parameter>nombre_archivo</parameter> hace referencia a
   un archivo local, entonces intentará abrir una secuencia sobre ese
   archivo. El archivo debe ser asequible para PHP, así que debe asegurarse
   de que los permisos de acceso del archivo sean los apropiados. Si tiene
   habilitado &safemode;, o <link
   linkend="ini.open-basedir">open_basedir</link>, pueden aplicarse mayores
   restricciones.
  </simpara>
  <simpara>
   Si PHP decide que <parameter>nombre_archivo</parameter> hace referencia a
   un protocolo registrado, y ese protocolo está registrado como una URL de
   red, PHP verificará que <link
   linkend="ini.allow-url-fopen">allow_url_fopen</link> se encuentre
   habilitado. Si no es así, PHP emitirá una advertencia y la llamada a
   fopen fallará.
  </simpara>
  <note>
   <simpara>
    La lista de protocolos soportados puede encontrarse en <xref
    linkend="wrappers"/>. Algunos protocolos (también conocidos como
    <literal>envolturas</literal>) soportan un <literal>contexto</literal> u
    opciones &php.ini;. Refiérase a la página específica del protocolo en
    uso para una lista de opciones que pueden definirse. (p.ej. el valor
    &php.ini; <literal>user_agent</literal> usado por la envoltura
    <literal>http</literal>)
   </simpara>
  </note>
  &note.context-support;
  <note>
   <simpara>
    A partir de PHP 4.3.2, el modo predeterminado es definido como binario
    para todas las plataformas que distinguen entre modos binario y de
    texto. Si está experimentando problemas con sus scripts después de
    actualizarse, intente usar la bandera <literal>'t'</literal> como
    solución temporal hasta que haga su script más portable, tal y como se
    explica más adelante.
   </simpara>
  </note>
  <para>
   El parámetro <parameter>modo</parameter> especifica el tipo de acceso que
   requiere para la secuencia. Puede ser cualquiera de los siguientes
   valores:
   <table>
    <title>
     Una lista de modos posibles para <function>fopen</function> usando
     <parameter>modo</parameter>
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry><parameter>modo</parameter></entry>
       <entry>Descripción</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>'r'</literal></entry>
       <entry>
        Apertura para sólo lectura; ubica el apuntador de archivo al
        comienzo del mismo.
       </entry>
      </row>
      <row>
       <entry><literal>'r+'</literal></entry>
       <entry>
        Apertura para lectura y escritura; ubica el apuntador de archivo al
        comienzo del mismo.
       </entry>
      </row>
      <row>
       <entry><literal>'w'</literal></entry>
       <entry>
        Apertura para sólo escritura; ubica el apuntador de archivo al
        comienzo de éste y lo trunca a una longitud de cero. Si el archivo
        no existe, intenta crearlo.
       </entry>
      </row>
      <row>
       <entry><literal>'w+'</literal></entry>
       <entry>
        Apertura para lectura y escritura; ubica el apuntador de archivo al
        comienzo de éste y lo trunca a una longitud cero. Si el archivo no
        existe, intenta crearlo.
       </entry>
      </row>
      <row>
       <entry><literal>'a'</literal></entry>
       <entry>
        Apertura para sólo escritura; ubica el apuntador de archivo al final
        del mismo. Si el archivo no existe, intenta crearlo.
       </entry>
      </row>
      <row>
       <entry><literal>'a+'</literal></entry>
       <entry>
        Apertura para lectura y escritura; ubica el apuntador de archivo al
        final del mismo. Si el archivo no existe, intenta crearlo.
       </entry>
      </row>
      <row>
       <entry><literal>'x'</literal></entry>
       <entry>
        Creación y apertura para sólo escritura; ubica el apuntador de
        archivo al comienzo de éste. Si el archivo ya existe, la llamada a
        <function>fopen</function> fallará devolviendo &false; y generando
        un error de nivel <constant>E_WARNING</constant>. Si el archivo no
        existe, intenta crearlo. Esto es equivalente a especificar las
        banderas <literal>O_EXCL|O_CREAT</literal> en la llamada de sistema
        <literal>open(2)</literal> interna. Esta opción es soportada en PHP
        4.3.2 y versiones posteriores, y sólo funciona con archivos locales.
       </entry>
      </row>
      <row>
       <entry><literal>'x+'</literal></entry>
       <entry>
        Creación y apertura para lectura y escritura; ubica el apuntador de
        archivo al comienzo de éste. Si el archivo ya existe, la llamada a
        <function>fopen</function> fallará devolviendo &false; y generando
        un error de nivel <constant>E_WARNING</constant>. Si el archivo no
        existe, intenta crearlo. Esto es equivalente a especificar las
        banderas <literal>O_EXCL|O_CREAT</literal> en la llamada de sistema
        <literal>open(2)</literal> interna. Esta opción es soportada en PHP
        4.3.2 y versiones posteriores, y sólo funciona con archivos locales.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <note>
   <para>
    Diferentes familias de sistemas operativos tienen diferentes
    convenciones sobre el final-de-línea. Cuando escribe a un archivo de
    texto y desea insertar un salto de línea, necesita usar los caracteres
    correctos de final-de-línea para su sistema operativo. Los sistemas
    basados en Unix usan <literal>\n</literal> como el caracter de final de
    línea, los sistemas basados en Windows usan <literal>\r\n</literal> como
    los caracteres de final de línea, y los sistemas basados en Macintosh
    usan <literal>\r</literal> como el caracter de final de línea.
   </para>
   <para>
    Si usa los caracteres de final de línea equivocados cuando crea sus
    archivos, puede que encuentre que otras aplicaciones que abren esos
    archivos lucirán "extraño".
   </para>
   <para>
    Windows ofrece una bandera de traducción de modo-texto
    (<literal>'t'</literal>) la cual traducirá transparentemente
    <literal>\n</literal> a <literal>\r\n</literal> cuando trabaje con el
    archivo. En contraste, también puede usar <literal>'b'</literal> para
    forzar el modo binario, el cual no traduce sus datos. Para usar estas
    banderas, indique <literal>'b'</literal> o <literal>'t'</literal> como
    el último caracter del parámetro <parameter>modo</parameter>.
   </para>
   <para>
    El modo de traducción predeterminado depende de la SAPI y la versión de
    PHP que usa, así que es recomendable especificar siempre la bandera
    apropiada por razones de portabilidad. Debería usar el modo
    <literal>'t'</literal> si trabaja con archivos de texto-plano y usa
    <literal>\n</literal> para delimitar los finales de línea en su script,
    pero espera que sus archivos sean legibles en aplicaciones como el bloc
    de notas. Debería usar el modo <literal>'b'</literal> en todos los demás
    casos.
   </para>
   <para>
    Si no especifica la bandera 'b' cuando trabaja con archivos binarios,
    puede experimentar problemas con sus datos, incluyendo archivos de
    imagen corruptos y problemas extraños con los caracteres
    <literal>\r\n</literal>.
   </para>
  </note>
  <note>
   <para>
    Por razones de portabilidad, es bastante recomendable que siempre usa la
    bandera 'b' cuando abre archivos con <function>fopen</function>.
   </para>
  </note>
  <note>
   <para>
    Nuevamente, por razones de portabilidad, es bastante recomendable que
    re-escriba el código que usa o depende del modo <literal>'t'</literal>,
    de modo que use los finales de línea correctos y el modo
    <literal>'b'</literal> en su lugar.
   </para>
  </note>
  <para>
   El tercer parámetro, opcional, <parameter>usar_ruta_inclusion</parameter>
   puede definirse como '1' o &true; si desea buscar por el archivo en <link
   linkend="ini.include-path">include_path</link>, también.
  </para>
  <simpara>
   Si la apertura falla, la función devuelve &false; y se genera un error de
   nivel <constant>E_WARNING</constant>. Es posible usar <link
   linkend="language.operators.errorcontrol">@</link> para suprimir tal
   advertencia.
  </simpara>
  <para>
   <example>
    <title>Ejemplos de <function>fopen</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$gestor = fopen("/home/rasmus/archivo.txt", "r");
$gestor = fopen("/home/rasmus/archivo.gif", "wb");
$gestor = fopen("http://www.example.com/", "r");
$gestor = fopen("ftp://usuario:contrasenya@example.com/un_archivo.txt", "w");
?>
]]>
    </programlisting>
   </example>
  </para>
  <simpara>
   Si experimenta problemas con la lectura y escritura sobre archivos, y
   está usando la versión tipo módulo de servidor de PHP, recuerde
   asegurarse de que los archivos y directorios que está usando sean
   asequibles para el proceso del servidor.
  </simpara>
  <para>
   En la plataforma Windows, tenga cuidado de escapar cualquier barra
   invertida usada en la ruta al archivo, o use barras hace adelante.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$gestor = fopen("c:\\datos\\info.txt", "r");
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  &warn.ssl-non-standard;
  &note.sm.uidcheck.dir;
  <simpara>
   Vea también <xref linkend="wrappers"/>, <function>fclose</function>,
   <function>fgets</function>, <function>fread</function>,
   <function>fwrite</function>, <function>fsockopen</function>,
   <function>file</function>, <function>file_exists</function>,
   <function>is_readable</function>,
   <function>stream_set_timeout</function>, <function>popen</function>, y
   <function>stream_context_create</function>.
  </simpara>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
