<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.8 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
  <refentry id="function.tempnam">
   <refnamediv>
    <refname>tempnam</refname>
    <refpurpose>Crear un archivo con un nombre
    &uacute;nico</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>string</type><methodname>tempnam</methodname>
      <methodparam><type>string</type><parameter>dir</parameter></methodparam>
      <methodparam><type>string</type><parameter>prefijo</parameter></methodparam>
     </methodsynopsis>
    <para>
     Crea un archivo con un nombre &uacute;nico en el directorio
     especificado. Si el directorio no existe,
     <function>tempnam</function> puede generar un archivo en el
     directorio temporal del sistema, y devolver su nombre.
    </para>
    <para>
     En versiones anteriores a PHP 4.0.6, el comportamiento de la
     funci&oacute;n <function>tempnam</function> depend&iacute;a del
     sistema. En Windows, la variable de entorno TMP
     sobrescrib&iacute;a el par&aacute;metro
     <parameter>dir</parameter>, en Linux la variable TMPDIR tiene
     precedencia, mientras que SVR4 siempre usa su par&aacute;metro
     <parameter>dir</parameter> si el directorio al que apunta
     existe. Consulte la documentaci&oacute;n de su sistema sobre la
     funci&oacute;n tempnam(3) si necesita mayor claridad al respecto.
    </para>
    <note>
     <simpara>
      Si PHP no puede crear un archivo en el par&aacute;metro
      <parameter>dir</parameter> especificado, pasa a usar el valor
      predeterminado del sistema.
     </simpara>
    </note>
    <para>
     Devuelve el nuevo nombre de archivo temporal, o &false; en caso
     de fallo.
     <example>
      <title>Ejemplo de <function>tempnam</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$nombre_temp = tempnam("/tmp", "FOO");

$gestor = fopen($nombre_temp, "w");
fwrite($gestor, "escribiendo al archivo temporal");
fclose($gestor);

// haga algo aqui

unlink($nombre_temp);
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <simpara>
      El comportamiento de esta funci&oacute;n cambi&oacute; en
      4.0.3. El archivo temporal es creado tambi&eacute;n para evitar
      una condici&oacute;n de carrera en donde el archivo puede
      aparecer en el sistema de archivos entre el periodo en que se
      genera la cadena y antes de que el script se dedique a crear el
      archivo. Note que necesita eliminar el archivo en caso de que no
      lo necesite m&aacute;s, ya que &eacute;sto no se hace
      autom&aacute;ticamente.
     </simpara>
    </note>
    <para>
     Vea tambi&eacute;n <function>tmpfile</function> y
     <function>unlink</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
