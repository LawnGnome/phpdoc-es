<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.14 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
<refentry xml:id="function.tempnam" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>tempnam</refname>
  <refpurpose>Crear un archivo con un nombre único</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Descripción</title>
  <methodsynopsis>
   <type>string</type><methodname>tempnam</methodname>
   <methodparam><type>string</type><parameter>dir</parameter></methodparam>
   <methodparam><type>string</type><parameter>prefijo</parameter></methodparam>
  </methodsynopsis>
  <para>
   Crea un archivo con un nombre único, con el valor de permiso de acceso
   0600, en el directorio especificado. Si el directorio no existe,
   <function>tempnam</function> puede generar un archivo en el directorio
   temporal del sistema, y devolver su nombre.
  </para>
  <para>
   En versiones anteriores a PHP 4.0.6, el comportamiento de la función
   <function>tempnam</function> dependía del sistema. En Windows, la
   variable de entorno TMP sobrescribía el parámetro
   <parameter>dir</parameter>, en Linux la variable TMPDIR tiene
   precedencia, mientras que SVR4 siempre usa su parámetro
   <parameter>dir</parameter> si el directorio al que apunta existe.
   Consulte la documentación de su sistema sobre la función tempnam(3) si
   necesita mayor claridad al respecto.
  </para>
  <note>
   <simpara>
    Si PHP no puede crear un archivo en el parámetro
    <parameter>dir</parameter> especificado, pasa a usar el valor
    predeterminado del sistema.
   </simpara>
  </note>
  <para>
   Devuelve el nuevo nombre de archivo temporal, o &false; en caso de fallo.
   <example>
    <title>Ejemplo de <function>tempnam</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$nombre_temp = tempnam("/tmp", "FOO");

$gestor = fopen($nombre_temp, "w");
fwrite($gestor, "escribiendo al archivo temporal");
fclose($gestor);

// haga algo aquí

unlink($nombre_temp);
?>
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <simpara>
    El comportamiento de esta función cambió en 4.0.3. El archivo temporal
    es creado también para evitar una condición de carrera en donde el
    archivo puede aparecer en el sistema de archivos entre el periodo en que
    se genera la cadena y antes de que el script se dedique a crear el
    archivo. Note que necesita eliminar el archivo en caso de que no lo
    necesite más, ya que ésto no se hace automáticamente.
   </simpara>
  </note>
  <para>
   Vea también <function>tmpfile</function>,
   <function>sys_get_temp_dir</function> y <function>unlink</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
