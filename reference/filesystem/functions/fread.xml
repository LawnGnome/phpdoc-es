<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: lboshell Status: ready -->
<refentry xml:id="function.fread" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fread</refname>
  <refpurpose>Lectura de archivos segura con material binario</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>fread</methodname>
   <methodparam><type>resource</type><parameter>gestor</parameter></methodparam>
   <methodparam><type>int</type><parameter>longitud</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>fread</function> lee hasta <parameter>longitud</parameter>
   bytes desde el apuntador de archivo indicado por
   <parameter>gestor</parameter>. La lectura se detiene cuando se han leído
   hasta <parameter>longitud</parameter> bytes, se alcanza EOF (el final de
   archivo), (en el caso de secuencias de red) cuando un paquete se
   encuentra disponible, o (después de abrir una secuencia de espacio de
   usuario) cuando se han leído 8192 bytes, aquello que ocurra primero.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>gestor</parameter></term>
     <listitem>
      &fs.file.pointer;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>longitud</parameter></term>
     <listitem>
      <para>
       Se leen hasta <parameter>longitud</parameter> número de bytes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la cadena leída o &false; en caso de error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo sencillo de <function>fread</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// obtiene el contenido de un archivo en una cadena
$nombre_archivo = "/usr/local/algo.txt";
$gestor = fopen($nombre_archivo, "r");
$contenido = fread($gestor, filesize($nombre_archivo));
fclose($gestor);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo binario de <function>fread</function></title>
    <warning>
     <para>
      En sistemas que diferencian entre archivos binarios y de texto (es
      decir, Windows) el archivo debe ser abierto con el valor 'b' incluido
      en el parámetro de modo de <function>fopen</function>.
     </para>
    </warning>
    <programlisting role="php">
<![CDATA[
<?php
$nombre_archivo = "c:\\archivos\\una_imagen.gif";
$gestor = fopen($nombre_archivo, "rb");
$contenido = fread($gestor, filesize($nombre_archivo));
fclose($gestor);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplos remotos de <function>fread</function></title>
    <warning>
     <para>
      Cuando se lee desde cualquier cosa que no sea un archivo local normal,
      como es el caso de secuencias devueltas al leer <link
      linkend="features.remote-files">archivos remotos</link> o desde
      <function>popen</function> y <function>fsockopen</function>, la
      lectura se detendrá después de que un paquete esté disponible. Esto
      quiere decir que debe recolectar los datos en segmentos, como se
      muestra en los ejemplos a continuación.
     </para>
    </warning>
    <programlisting role="php">
<![CDATA[
<?php
// Para PHP 5 y superiores
$gestor = fopen("http://www.example.com/", "rb");
$contenidos = stream_get_contents($gestor);
fclose($gestor);
?>
]]>
    </programlisting>
    <programlisting role="php">
<![CDATA[
<?php
$gestor = fopen("http://www.example.com/", "rb");
$contenido = '';
while (!feof($gestor)) {
  $contenido .= fread($gestor, 8192);
}
fclose($gestor);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Si tan solo desea obtener el contenido de un archivo en una cadena, use
    <function>file_get_contents</function>, ya que tiene un rendimiento
    mucho mayor que el código anterior.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fwrite</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>fgets</function></member>
    <member><function>fgetss</function></member>
    <member><function>fscanf</function></member>
    <member><function>file</function></member>
    <member><function>fpassthru</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
