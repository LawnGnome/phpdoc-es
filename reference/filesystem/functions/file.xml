<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.25 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.file" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>file</refname>
  <refpurpose>Lee un archivo entero hacia una matriz</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>file</methodname>
   <methodparam><type>string</type><parameter>nombre_archivo</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>banderas</parameter></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>contexto</parameter></methodparam>
  </methodsynopsis>
  <para>
   Lee un archivo completo a una matriz.
  </para>
  <note>
   <para>
    Es posible usar <function>file_get_contents</function> para devolver el
    contenido de un archivo como una cadena.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>nombre_archivo</parameter></term>
     <listitem>
      <para>
       Ruta al archivo.
      </para>
      &tip.fopen-wrapper;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>banderas</parameter></term>
     <listitem>
      <para>
       El parámetro opcional <parameter>banderas</parameter> puede ser una o
       más de las siguientes constantes:
       <variablelist>
        <varlistentry>
         <term>
          <constant>FILE_USE_INCLUDE_PATH</constant>
         </term>
         <listitem>
          <simpara>
           Busca por el archivo en la ruta definida en <link
           linkend="ini.include-path">include_path</link>.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_IGNORE_NEW_LINES</constant>
         </term>
         <listitem>
          <simpara>
           No agrega una nueva línea al final de cada elemento de la matriz
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_SKIP_EMPTY_LINES</constant>
         </term>
         <listitem>
          <simpara>
           Salta líneas vacías
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_TEXT</constant>
         </term>
         <listitem>
          <simpara>
           El contenido es devuelto en la codificación UTF-8. Es posible
           especificar una codificación diferente creando un contexto
           predeterminado. Esta bandera no puede ser usada junto con
           <constant>FILE_BINARY</constant>. Esta bandera está disponible
           únicamente desde PHP 6.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_BINARY</constant>
         </term>
         <listitem>
          <simpara>
           El contenido es leído como datos binarios. Este es el
           comportamiento predeterminado y esta bandera no puede ser usada
           junto con <constant>FILE_TEXT</constant>. Esta bandera está
           disponible únicamente desde PHP 6.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>contexto</parameter></term>
     <listitem>
      <para>
       Un recurso de contexto creado con la función
       <function>stream_context_create</function>.
      </para>
      <para>
       &note.context-support;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el archivo en una matriz. Cada elemento de la matriz corresponde
   a una línea en el archivo, con el salto de línea aun incluido. Si ocurre
   un fallo, <function>file</function> devuelve &false;.
  </para>
  <note>
   <para>
    Cada línea en la matriz resultante incluye el final de línea, a menos
    que se use <constant>FILE_IGNORE_NEW_LINES</constant>, así que aun
    necesita usar <function>rtrim</function> si no quiere conservar el final
    de línea.
   </para>
  </note>
  &note.line-endings;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>6.0.0</entry>
       <entry>
        Se agregó el soporte para las banderas
        <constant>FILE_TEXT</constant> y <constant>FILE_BINARY</constant>.
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Se agregó el parámetro <parameter>contexto</parameter>
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Antes de PHP 5.0.0 el parámetro <parameter>banderas</parameter> solo
        cubría <link linkend="ini.include-path">include_path</link> y éste
        parámetro era habilitado con 1.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        <function>file</function> se hizo segura con material binario
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>file</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Obtiene un archivo en una matriz. En este ejemplo usaremos HTTP
// para obtener el código fuente HTML de una URL.

$lineas = file('http://www.example.com/');

// Recorrer nuestra matriz, mostrar el código HTML como código fuente
// HTML, y los números de línea también.
foreach ($lineas as $linea_num => $linea) {
    echo "Línea #<b>{$linea_num}</b> : " . htmlspecialchars($linea) . "<br />\n";
}

// Otro ejemplo, obtengamos una página web como una cadena. Vea
// también file_get_contents().
$html = implode('', file('http://www.example.com/'));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.ssl-non-standard;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>readfile</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>include</function></member>
    <member><function>stream_context_create</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
