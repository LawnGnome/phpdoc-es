<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: baoengb Status: ready -->
<!-- split from ./en/functions/filesystem.xml, last change in rev 1.2 -->
  <refentry xml:id="function.clearstatcache" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>clearstatcache</refname>
    <refpurpose>Limpia la cache de estado de un archivo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>void</type><methodname>clearstatcache</methodname>
     <void />
     </methodsynopsis>
    <para>
     Cuando se usa <function>stat</function>, <function>lstat</function>, o
     cualquier otra de las funciones en la lista de funciones afectadas (vea
     abajo), PHP pone en cache la informaci&oacute;n de lo que devuelven esas
     funciones, en aras de proveer mayor desempe&ntilde;o. Sin embargo, en 
     ciertos casos, tal vez desee quitar la informaci&oacute;n en el cache.
     Por ejemplo, si el mismo archivo est&aacute; siendo revisado muchas veces 
     dentro de un mismo script, y ese archivo est&aacute; en peligro de ser 
     removido o cambia durante la operaci&oacute;n del script, puede escoger 
     borrar el cache. En estos casos, puede usar la funci&oacute;n 
     <function>clearstatcache</function> para limpiar la informaci&oacute;n 
     que PHP pone en cache acerca del archivo.
    </para>
    <para>
     Debe notar tambi&eacute;n que PHP no pone informaci&oacute;n en cache de 
     archivos que no existen. De tal manera, que si ejecuta 
     <function>file_exists</function> en un archivo que no existe, regresar&aacute;
     &false; hasta que cree el archivo. SI crea el archivo, regresar&aacute;
     &true; aunque haya borrado el archivo.
    </para>
    <note>
     <para>
      Esta funci&oacute;n pone en cache informaci&oacute;n acerca de nombres 
      de archivo especificos, de tal forma que solo necesita ejecutar 
      <function>clearstatcache</function> si est&aacute; elaborando operaciones
      m&uacute;ltiples sobre el mismo archivo y necesita que la informaci&oacute;n
      sobre un archivo en particular no se ponga en cache.
     </para>
    </note>
    <para>
     Entre las funciones afectadas se incluyen <function>stat</function>,
     <function>lstat</function>,
     <function>file_exists</function>,
     <function>is_writeable</function>,
     <function>is_readable</function>,
     <function>is_executable</function>,
     <function>is_file</function>,
     <function>is_dir</function>,
     <function>is_link</function>,
     <function>filectime</function>,
     <function>fileatime</function>,
     <function>filemtime</function>,
     <function>fileinode</function>,
     <function>filegroup</function>,
     <function>fileowner</function>,
     <function>filesize</function>,
     <function>filetype</function>, y
     <function>fileperms</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
