<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.6 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.39 -->
  <refentry id="function.is-uploaded-file">
   <refnamediv>
    <refname>is_uploaded_file</refname>
    <refpurpose>Indica si un archivo fue cargado a trav&eacute;s de
    HTTP POST</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <methodsynopsis>
     <type>bool</type><methodname>is_uploaded_file</methodname>
     <methodparam><type>string</type><parameter>nombre_archivo</parameter></methodparam>
    </methodsynopsis>
    <para>
     Devuelve &true; si el archivo dado por
     <parameter>nombre_archivo</parameter> fue cargado a trav&eacute;s
     de HTTP POST. Esto es &uacute;til para ayudar a verificar que un
     usuario malicioso no ha intentado enga&ntilde;ar al script
     haci&eacute;ndole trabajar sobre archivos con los que no
     deber&iacute;a trabajar--por ejemplo,
     <filename>/etc/passwd</filename>.
    </para>
    <para>
     Este tipo de chequeo es especialmente importante si existe alguna
     posibilidad de que cualquier cosa realizada con archivos cargados
     pueda revelar sus contenidos al usuario, o incluso a otros
     usuarios en el mismo sistema.
    </para>
    <para>
     Para que trabaje adecuadamente, la funci&oacute;n
     <function>is_uploaded_file</function> necesita un argumento como
     $_FILES['archivo_usuario']['tmp_name'], - el nombre del archivo
     cargado en la m&aacute;quina del cliente
     $_FILES['archivo_usuario']['name'] no funciona.
    </para>
    <example>
     <title>Ejemplo de <function>is_uploaded_file</function></title>
     <programlisting role="php">
<![CDATA[
<?php

if (is_uploaded_file($_FILES['archivo_usuario']['tmp_name'])) {
   echo "El archivo ". $_FILES['archivo_usuario']['name'] ." fue cargado
   satisfactoriamente.\n";
   echo "Mostrando su contenido\n";
   readfile($_FILES['archivo_usuario']['tmp_name']);
} else {
   echo "Posible ataque de carga de archivo: ";
   echo "nombre de archivo '". $_FILES['archivo_usuario']['tmp_name'] . "'.";
}

?>]]>
     </programlisting>
    </example>
    <para>
     <function>is_uploaded_file</function> se encuentra disponible
     &uacute;nicamente en versiones de PHP 3 superiores a PHP 3.0.16,
     y en versiones de PHP 4 superiores a 4.0.2. Si est&aacute;
     atrapado usando una versi&oacute;n anterior, puede usar la
     siguiente funci&oacute;n para protegerse:
     <note>
      <para>
       El siguiente ejemplo <emphasis>no</emphasis> trabajar&aacute;
       con versiones de PHP 4 superiores a 4.0.2. Depende en la
       funcionalidad interna de PHP que fue modificada luego de esa
       versi&oacute;n.
      </para>
     </note>
    </para>
     <example>
      <title>Ejemplo de <function>is_uploaded_file</function> para PHP
      4 &lt; 4.0.3</title>
     <programlisting role="php">
<![CDATA[
<?php
/* Prueba de usuario para verificar un archivo cargado. */
function is_uploaded_file($nombre_archivo)
{
    if (!$archivo_tmp = get_cfg_var('upload_tmp_dir')) {
        $archivo_tmp = dirname(tempnam('', ''));
    }
    $archivo_tmp .= '/' . basename($nombre_archivo);
    /* El usuario puede tener una barra final en php.ini... */
    return (ereg_replace('/+', '/', $archivo_tmp) == $nombre_archivo);
}

/* Asi es como se usa, ya que tampoco se cuenta con
 * move_uploaded_file() en estas versiones antiguas: */
if (is_uploaded_file($HTTP_POST_FILES['archivo_de_usuario'])) {
    copy($HTTP_POST_FILES['archivo_de_usuario'], "/lugar/a/colocar/el/archivo/cargado");
} else {
    echo "Posible ataque de archivo entrante: nombre de archivo '$HTTP_POST_FILES[archivo_de_usuario]'.";
}
?>
]]>
     </programlisting>
    </example>
    <para>
     Vea tambi&eacute;n <function>move_uploaded_file</function>, y la
     secci&oacute;n <link
     linkend="features.file-upload">Gesti&oacute;n de carga de
     archivos</link> para un ejempo de uso sencillo.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
