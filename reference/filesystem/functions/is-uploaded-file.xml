<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.11 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.is-uploaded-file" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>is_uploaded_file</refname>
  <refpurpose>Indica si un archivo fue cargado a través de HTTP
  POST</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>is_uploaded_file</methodname>
   <methodparam><type>string</type><parameter>nombre_archivo</parameter></methodparam>
  </methodsynopsis>
  <para>
   Devuelve &true; si el archivo dado por
   <parameter>nombre_archivo</parameter> fue cargado a través de HTTP POST.
   Esto es útil para ayudar a verificar que un usuario malicioso no ha
   intentado engañar al script haciéndole trabajar sobre archivos con los
   que no debería trabajar--por ejemplo, <filename>/etc/passwd</filename>.
  </para>
  <para>
   Este tipo de chequeo es especialmente importante si existe alguna
   posibilidad de que cualquier cosa realizada con archivos cargados pueda
   revelar sus contenidos al usuario, o incluso a otros usuarios en el mismo
   sistema.
  </para>
  <para>
   Para que trabaje adecuadamente, la función
   <function>is_uploaded_file</function> necesita un argumento como
   $_FILES['archivo_usuario']['tmp_name'], - el nombre del archivo cargado
   en la máquina del cliente $_FILES['archivo_usuario']['name'] no funciona.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>nombre_archivo</parameter></term>
     <listitem>
      <para>
       El nombre de archivo a chequear.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>is_uploaded_file</function></title>
    <programlisting role="php">
<![CDATA[
<?php

if (is_uploaded_file($_FILES['archivo_usuario']['tmp_name'])) {
   echo "El archivo ". $_FILES['archivo_usuario']['name'] ." fue cargado satisfactoriamente.\n";
   echo "Mostrando su contenido\n";
   readfile($_FILES['archivo_usuario']['tmp_name']);
} else {
   echo "Posible ataque de carga de archivo: ";
   echo "nombre de archivo '". $_FILES['archivo_usuario']['tmp_name'] . "'.";
}

?>]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo de <function>is_uploaded_file</function> para PHP 4 &lt;
    4.0.3</title>
    <para>
     El siguiente ejemplo <emphasis>no</emphasis> trabajará con versiones de
     PHP 4 superiores a 4.0.2. Depende en la funcionalidad interna de PHP
     que fue modificada luego de esa versión.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Prueba de usuario para verificar un archivo cargado. */
function is_uploaded_file_4_0_2($nombre_archivo)
{
    if (!$archivo_tmp = get_cfg_var('upload_tmp_dir')) {
        $archivo_tmp = dirname(tempnam('', ''));
    }
    $archivo_tmp .= '/' . basename($nombre_archivo);
    /* El usuario puede tener una barra final en php.ini... */
    return (ereg_replace('/+', '/', $archivo_tmp) == $nombre_archivo);
}

/* Así es como se usa, ya que tampoco se cuenta con
 * move_uploaded_file() en estas versiones antiguas: */
if (is_uploaded_file_4_0_2($HTTP_POST_FILES['archivo_de_usuario'])) {
    copy($HTTP_POST_FILES['archivo_de_usuario'], "/lugar/a/colocar/el/archivo/cargado");
} else {
    echo "Posible ataque de archivo entrante: nombre de archivo '$HTTP_POST_FILES[archivo_de_usuario]'.";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>move_uploaded_file</function></member>
    <member><link linkend="features.file-upload">Gestión de carga de
    archivos</link> para un ejemplo de uso simple.</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
