<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 311198 Maintainer: seros Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.parse-ini-file">
 <refnamediv>
  <refname>parse_ini_file</refname>
  <refpurpose>Analiza un archivo de configuración</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>parse_ini_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>process_sections</parameter><initializer>false</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>scanner_mode</parameter><initializer>INI_SCANNER_NORMAL</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>parse_ini_file</function> carga el
   archivo ini especificado en <parameter>filename</parameter>,
   y devulve las configuraciones que hay en él a una matriz asociativa.
  </para>
  <para>
   La estructura del archivo ini es la misma que la de &php.ini;.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       El nombre de archivo del archivo ini que va a ser analizado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>process_sections</parameter></term>
     <listitem>
      <para>
       Al establecer el parámetro <parameter>process_sections</parameter>
       a &true;, se obtiene una matriz multidimesional, con
       los nombres de las secciones y las configuraciones incluidas. El valor por defecto
       de <parameter>process_sections</parameter> es &false;      
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>scanner_mode</parameter></term>
     <listitem>
      <para>
       Puede ser o <constant>INI_SCANNER_NORMAL</constant> (por defecto) o 
       <constant>INI_SCANNER_RAW</constant>. Si <constant>INI_SCANNER_RAW</constant> 
       es proporcionado, los valores de las opciones no serán analizadas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Las configuraciones son devueltas como un <type>array</type> asociativo si se tiene éxito,
   y &false; si falla.
  </para>
 </refsect1>
 
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Añadido el parámetro opcional <parameter>scanner_mode</parameter>.
        Las comillas simples ahora pueden usarse para las asignaciones de variables.
        Los signos de número (<literal>#</literal>) ya no se pueden usar como comentarios
        y si se usan se lanzará una advertencia de tipo obsoleto.
       </entry>
      </row>
      <row>
       <entry>5.2.7</entry>
       <entry>
        Cuando sucede un error de sintaxis, esta función devolverá &false; en vez de un array
        vacío.
       </entry>
      </row>
      <row>
       <entry>5.2.4</entry>
       <entry>
        Las claves y los nombres de las secciones consisten en números que ahora se evalúan como
        <link linkend="language.types.integer">integers</link> de PHP, así los números
        que comiencen por 0 son evaluados como octales y los números que comiencen por 0x son
        evaluados como hexadecimales.
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Los valores encerrados entre comillas dobles pueden contener nuevas líneas.
       </entry>
      </row>
      <row>
       <entry>4.2.1</entry>
       <entry>
        Esta función ahora está influida por el &safemode;
        y <link linkend="ini.open-basedir">open_basedir</link>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Contenido de <filename>ejemplo.ini</filename></title>
    <programlisting>
<![CDATA[
; Este es un ejemplo de archivo de configuración
; Los comentarios empiezan con ';', como en php.ini

[primera_sección]
uno = 1
cinco = 5
animal = PÁJARO

[segunda_sección]
ruta = "/usr/local/bin"
URL = "http://www.example.com/~username"

[tercera_sección]
phpversion[] = "5.0"
phpversion[] = "5.1"
phpversion[] = "5.2"
phpversion[] = "5.3"
]]>
    </programlisting>
   </example>
   <example>
    <title>Ejemplo de <function>parse_ini_file</function></title>
    <para>
     Las <link linkend="language.constants">Constantes</link> también se pueden analizar
     en el archivo ini, por lo que si se define una constante como un valor ini antes
     de ejecutar <function>parse_ini_file</function>, también será integrada dentro de
     los resultados. Sólo los valores ini son evaluados. Por ejemplo:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

define('PÁJARO', 'Pájaro dodo');

// Analizar sin secciones
$matriz_ini = parse_ini_file("ejemplo.ini");
print_r($matriz_ini);

// Analizar con secciones
$matriz_ini = parse_ini_file("ejemplo.ini", true);
print_r($matriz_ini);

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [uno] => 1
    [cinco] => 5
    [animal] => Pájaro dodo
    [ruta] => /usr/local/bin
    [URL] => http://www.example.com/~username
    [phpversion] => Array
        (
            [0] => 5.0
            [1] => 5.1
            [2] => 5.2
            [3] => 5.3
        )

)
Array
(
    [primera_sección] => Array
        (
            [uno] => 1
            [cinco] => 5
            [animal] => Dodo bird
        )

    [segunda_sección] => Array
        (
            [ruta] => /usr/local/bin
            [URL] => http://www.example.com/~username
        )

    [tercera_sección] => Array
        (
            [phpversion] => Array
                (
                    [0] => 5.0
                    [1] => 5.1
                    [2] => 5.2
                    [3] => 5.3
                )

        )

)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>parse_ini_file</function> analizando un archivo php.ini</title>
    <programlisting role="php">
<![CDATA[
<?php
// Una sencilla función usada para comparar los resultados de abajo
function síno($expresión)
{
    return($expresión ? 'Sí' : 'No');
}

// Obtiene la ruta de php.ini usando la función
// php_ini_loaded_file() disponible a partir de PHP 5.2.4
$ruta_ini = php_ini_loaded_file();

// Analizar php.ini
$ini = parse_ini_file($ruta_ini);

// Imprime y compara los valores, observe que al usar get_cfg_var()
// se obtendrán aquí los mismos resultados de análisis y carga
echo '(analizado) magic_quotes_gpc = ' . síno($ini['magic_quotes_gpc']) . PHP_EOL;
echo '(cargado) magic_quotes_gpc = ' . síno(get_cfg_var('magic_quotes_gpc')) . PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
(parsed) magic_quotes_gpc = Yes
(loaded) magic_quotes_gpc = Yes
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Esta función no tiene nada que hacer con el
    archivo &php.ini;. Ya es procesado en
    el momento en el que se ejecuta el script. Esta función se puede usar para
    leer los propios archivos de configuración de sus aplicaciones.
   </para>
  </note>
  <note>
   <para>
    Si un valor en el archivo ini contiene cualquier carácter no alfanumérico,
    se necesita encerrarlo entre comillas dobles (").
   </para>
  </note>
  <note>
   <simpara>
    Hay palabras reservadas que no se deben usar como claves en
    los archivos ini. Éstas incluyen: null, yes, no, true, false, on, off, none.
    Los valores null, no y false resultan en "", yes y true resultan en "1".
    Los caracteres <literal>?{}|&amp;~![()^"</literal> no se deben usar en ningún lugar
    de la clave y tienen un significado especial en el valor.
   </simpara>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>parse_ini_string</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->