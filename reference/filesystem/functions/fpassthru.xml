<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.13 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.fpassthru" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fpassthru</refname>
  <refpurpose>Imprime todos los datos restantes en un apuntador de
  archivo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>fpassthru</methodname>
   <methodparam><type>resource</type><parameter>gestor</parameter></methodparam>
  </methodsynopsis>
  <para>
   Lee hasta EOF en el apuntador de archivo dado a partir de la posición
   actual y escribe los resultados en el búfer de salida.
  </para>
  <para>
   Puede que necesite llamar <function>rewind</function> para restablecer el
   apuntador de archivo al comienzo de éste si ya ha escrito datos en el
   archivo.
  </para>
  <para>
   Si tan sólo quiere volcar el contenido de un archivo al búfer de salida,
   sin modificarlo o buscar un desplazamiento en particular, puede que
   quiera usar la función <function>readfile</function>, la cual le ahorra
   la llamada a <function>fopen</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>gestor</parameter></term>
     <listitem>
      &fs.validfp.all;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si ocurre un error, <function>fpassthru</function> devuelve &false;. De
   lo contrario, <function>fpassthru</function> devuelve el número de
   caracteres leídos desde <parameter>gestor</parameter> y pasados a la
   salida.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Uso de <function>fpassthru</function> con archivos
    binarios</title>
    <programlisting role="php">
<![CDATA[
<?php

// abrir el archivo en modo binario
$nombre = './img/ok.png';
$aa = fopen($nombre, 'rb');

// enviar las cabeceras correctas
header("Content-Type: image/png");
header("Content-Length: " . filesize($nombre));

// volcar la imagen y detener el script
fpassthru($aa);
exit;

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Cuando se usa <function>fpassthru</function> sobre un archivo binario en
    sistemas Windows, debe asegurarse de abrir el archivo en modo binario,
    agregando el valor <literal>b</literal> al modo usado en la llamada a
    <function>fopen</function>.
   </para>
   <para>
    Es recomendable usar la bandera <literal>b</literal> cuando trate con
    archivos binarios, incluso si su sistema no lo requiere, de modo que sus
    scripts sean más portables.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>readfile</function></member>
    <member><function>fopen</function></member>
    <member><function>popen</function></member>
    <member><function>fsockopen</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
