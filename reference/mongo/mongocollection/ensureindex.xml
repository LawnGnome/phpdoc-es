<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328545 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.ensureindex" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::ensureIndex</refname>
  <refpurpose>
   Crea un índice en el campo o cmapos dados, o si el índice ya existe, no realiza
   nada.
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>MongoCollection::ensureIndex</methodname>
   <methodparam><type>string|array</type><parameter>key|keys</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   Este método crea un índice en la colección y los campos especificados.
   Al especificar la clave (parámetro keys) se puede o bien proporcionar un nombre de campo en forma de string, o
   un array que contenga uno o más nombres de campo con su sentido de ordenación.
  </para>
 </refsect1>
 
 <refsect1 role="parameters"> 
  &reftitle.parameters; 
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>keys</parameter>
     </term>
     <listitem>
      <para>
       Array que contiene los campos por los que se ordenará el índice. Cada elemento del
       array tiene como clave el nombre del campo, y como valor, o bien
       <literal>1</literal> para orden ascendente, o bien <literal>-1</literal> para
       orden desendente.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Este parámetro es un array asociativo de la forma
       <literal>array("nombredeopcion" => &lt;boolean&gt;, ...)</literal>. Las opciones
       soportadas actualmente son:
       <itemizedlist>
        &mongo.writes.parameters.writeconcern;
        <listitem>
         <para>
          <literal>"unique"</literal>
         </para>
         <para>
          Crea un índice único.
         </para>
         <warning>
          <para>
           No se puede crear un índice único en un campo si los distintos documentos
           existentes no contienen dicho campo. Este es efectivamente &null;
           para estos documentos y, por lo tanto, ya es no único. Se podría utilizar
           indexación fluida para superar este problema, ya que prevendrá que los documentos sin
           dicho cambo sean indexados.
          </para>
         </warning>
        </listitem>
        <listitem>
         <para>
          <literal>"dropDups"</literal>
         </para>
         <para>
          Si se estuviera creando un índice único, y existieran valores duplicados, borrar
          todos excepto uno de ellos.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"sparse"</literal>
         </para>
         <para>
          Crea un índice fluido, el cual únicamente incluye documentos que contiene el
          campo. Esta opción solamente es compatible con índices de campo sencillo.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"expireAfterSeconds"</literal>
         </para>
         <para>
          El valor de esta opciión debería especificar el número de segundos transcurridos
          para que un documento sea considerado como expirado y sea automáticamente
          eliminado de la colección. Esta opción solamente es compatible con
          índices de campo sencillo donde el campo contiene valores
          <classname>MongoDate</classname>.
         </para>
         <para>
          Esta característica está disponible en MongoDB 2.2+. Véase
          <link xlink:href="&url.mongodb.docs.expire_data;">Expirar datos de colecciones estableciendo el TTL</link>
          para más información.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>"background"</literal>
         </para>
         <para>
          De manera predeterminada, la creación de un índice es una operación de bloqueo que detendrá otras
          operaciones sobre la base de datos hasta que sea completada. Si se
          especifica &true; para esta opción, el índice se creará en segundo
          plano mientras toman lugar otras operaciones.
         </para>
         <warning>
          <para>
           Antes de MongoDB 2.1.0, la operación de construcción de un índice no estaba en segundo
           plano cuando replicaba a secundarios, sin tener en cuenta esta opción.
           See
           <link xlink:href="&url.mongodb.dochub.indexes.rs;">Building Indexes with Replica Sets</link>
           for more information.
          </para>
         </warning>
        </listitem>
        <listitem>
         <para>
          <literal>"name"</literal>
         </para>
         <para>
          Desde la versión 1.0.5 de driver, se peude especificar el nombre del índice.
          Puede ser muy útil si se están indexando varias claves y Mongo emite alertas
          porque el nombre del índice es muy extenso.
         </para>
        </listitem>
        &mongo.writes.parameters.timeout;
        &mongo.writes.parameters.safe;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve &true;.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.3.0</entry>
       <entry>
        El parámetro <parameter>options</parameter> ya no acepta un booleano para
        identificar un índice único. En su lugar, ahora debe hacerse con
        <literal>array('unique' => true)</literal>.
       </entry>
      </row>
      <row>
       <entry>1.2.11</entry>
       <entry>
        Emite un error de nivel <constant>E_DEPRECATED</constant> cuando
        <parameter>options</parameter> es de tipo <type>scalar</type>.
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>Se añadió la opción <literal>"timeout"</literal>.</entry>
      </row>
      <row>
       <entry>1.0.11</entry>
       <entry>
        <para>
         La opción <literal>"safe"</literal> desencadenará una tolerancia a fallos en el primario,
         si fuera necesario.
        </para>
        <para>
         Se lanzará una <classname>MongoException</classname> si el nombre del índice
         (generado o establecido) es mayor que 128 bytes.
        </para>
       </entry>
      </row>
      <row>
       <entry>1.0.2</entry>
       <entry>
        Cambiado el parámetro <parameter>options</parameter> de booleano a array.
        Antes de la versión 1.0.2, el segundo parámetro era un valor booleano opcional que
        especificaba si era o no un índice único.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza <classname>MongoException</classname> si el nombre de índice es superior
   a 128 bytes. (Versión 1.0.11+)
  </para>
  &mongo.errors.exceptions.writeconcern;
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>MongoCollection::ensureIndex</function></title>
   <programlisting role="php">
<![CDATA[
<?php

$c = new MongoCollection($db, 'foo');

// crea un índice en 'x' ascendente
$c->ensureIndex('x');

// crea un índice en 'y' ascendente
$c->ensureIndex(array('y' => 1));

// crea un índice en 'z' ascendente y en 'zz' descendente
$c->ensureIndex(array('z' => 1, 'zz' => -1));

// crea un índice único en 'x'
$c->ensureIndex(array('x' => 1), array("unique" => true));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Ejemplo de borrado de duplicados</title>
   <programlisting role="php">
<![CDATA[
<?php

$collection->insert(array("username" => "joeschmoe"));
$collection->insert(array("username" => "joeschmoe"));

/*
 * falla la creación del índice; no se puede crear un índice único en una clave que no tiene
 * valores únicos
 */
$collection->ensureIndex(array("username" => 1), array("unique" => 1));

/*
 * éxito al crear índice: se ha eliminado uno de los documentos de la colección
 */
$collection->ensureIndex(array("username" => 1), array("unique" => 1, "dropDups" => 1));

/* 
 * ahora tenemos un índice único, por lo que las inserciones con el mismo username (como el
 * anterior) fallarán
 */
$collection->insert(array("username" => "joeschmoe"));

?>
]]>
   </programlisting>
  </example>
  
  <example>
   <title>Indexación Geoespacial</title>
   <para>
    Mongo soporta índices geoespaciales, que permiten buscar documentos cercanos a una
    determinada localización o que estén dentro de una determinada forma. Por ejemplo, para crear
    un índice geoespacial en el campo "loc":
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$collection->ensureIndex(array("loc" => "2d"));

?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   Documentación de MongoDB sobre
   <link xlink:href="&url.mongodb.dochub.indexes;">índices por defecto</link> y sobre
   <link xlink:href="&url.mongodb.dochub.geo;">índices geoespaciales</link>.
  </para>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 