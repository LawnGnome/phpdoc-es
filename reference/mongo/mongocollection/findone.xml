<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 321520 Maintainer: chuso Status: ready -->
<!-- Reviewed: no -->
<!-- $Revision$ -->
<refentry xml:id="mongocollection.findone" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::findOne</refname>
  <refpurpose>Realiza una consulta a esta colección, devolviendo sólo un elemento</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>MongoCollection::findOne</methodname>
   <methodparam choice="opt"><type>array</type><parameter>query</parameter><initializer>array()</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>fields</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   A diferencia de <function>MongoCollection::find</function>, este método
   solo devolverá el <emphasis>primer</emphasis> resultado del juego de resultados,
   y no una instancia de <classname>MongoCursor</classname> que se pueda iterar.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>query</parameter>
     </term>
     <listitem>
      <para>
       Campos en los que buscar. El lenguaje de consultas de MongoDB es muy
       ampliable. El controlador de PHP intentará, en casi cualquier caso, pasar la consulta
       directa al servidor, por lo que recomendamos consultar la documentación
       general de MongoDB sobre <link xlink:href="&url.mongodb.dochub.find;">find</link>.
      </para>
      <warning>
       <para>
        Por favor, asegúrese de que utiliza comillas simples en todos los operadores
        especiales de consulta (los que comienzan por <literal>$</literal>) para evitar que PHP intente
        reemplacer <literal>"$exists"</literal> con el valor de la variable
        <literal>$exists</literal>.
       </para>
      </warning>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>fields</parameter>
     </term>
     <listitem>
      <para>
       Campos del resultado que se devolverán. El array debe estar en formato
       <literal>array('fieldname' => true, 'fieldname2' => true)</literal>.
       Siempre se devuelve el campo <literal>_id</literal>.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el registro que coincide con la búsqueda, o &null;.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si no se pudiera acceder a la base de datos, lanzaría una excepción de tipo
   <classname>MongoConnectionException</classname>.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <methodname>MongoCollection::findOne</methodname> buscando por id.</title>
   <para>Este ejemplo muestra cómo buscar un documento en una colección a partir de su id.</para>
   <programlisting role="php">
<![CDATA[
<?php

$articulos = $mongo->mi_bd->articulos;

$articulo = $articulos->findOne(array('_id' => new MongoId('47cc67093475061e3d9536d2')));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Ejemplo de <methodname>MongoCollection::findOne</methodname> a partir de una condición.</title>
   <para>Este ejemplo muestra como buscar un documento en una colección a partir de una condición, limitando los campos devueltos.</para>
   <programlisting role="php">
<![CDATA[
<?php

$usuarios = $mongo->mi_bd->usuarios;
$usuario = $usuarios->findOne(array('nombreusuario' => 'jwage'), array('password'));
print_r($usuario);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Array
(
    [_id] => MongoId Object
        (
        )

    [password] => test
)
]]>
   </screen>
   <para>
    Fíjese que, incluso si el documento no contiene un campo nombreusuario, hemos limitado los resultados
    para que únicamente contengan el campo password.
   </para>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCollection::find</function></member>
   <member><function>MongoCollection::insert</function></member>
   <member>Documentación de MongoDB sobre <link xlink:href="&url.mongodb.dochub.find;">find</link>.</member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
