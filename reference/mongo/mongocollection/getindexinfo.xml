<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 319493 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mongocollection.getindexinfo" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::getIndexInfo</refname>
  <refpurpose>Devuelve información sobre los índices de esta colección</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>MongoCollection::getIndexInfo</methodname>
   <void/>
  </methodsynopsis>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;  
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Esta función devuelve un array en el cual cada elemento describe un array.
   Los elementos contienen los valores <literal>name</literal> para el nombre del
   índice, <literal>ns</literal> para el espacio de nombres (el nombre de la
   colección), <literal>key</literal> que contiene una lista de todas las claves
   y sus órdenes de tipos que componen el índice, y <literal>_id</literal>
   que contiene un objeto de la clase MongoId con el ID de este índice.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>MongoCollection::find</function></title>
   <para>Este ejemplo demuestra cómo buscar en un rango.</para>
   <programlisting role="php">
<![CDATA[
<?php

$m = new Mongo;
$c = $m->selectCollection('project', 'outfits');
var_dump($c->getIndexInfo());

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
array(8) {
  [0] =>
  array(3) {
    'name' =>
    string(4) '_id_'
    'ns' =>
    string(12) 'project.outfits'
    'key' =>
    array(1) {
      '_id' =>
      int(1)
    }
  }
...
  [7] =>
  array(4) {
    '_id' =>
    class MongoId#12 (1) {
      public $$id =>      string(24) '4d6f7abd44670a1513190000'
    }
    'ns' =>
    string(12) 'project.outfits'
    'key' =>
    array(2) {
      'created' =>
      int(-1)
      'userid' =>
      int(1)
    }
    'name' =>
    string(19) 'created_-1_userid_1'
  }
}
]]>
   </screen>
   <para>
    Véase la clase <classname>MongoCursor</classname> para más información sobre cómo trabajar con cursores.
   </para>
  </example>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
