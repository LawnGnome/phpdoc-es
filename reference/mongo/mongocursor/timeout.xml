<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 317663 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.timeout" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::timeout</refname>
  <refpurpose>Establece un tiempo de espera en el lado del cliente para esta consulta</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::timeout</methodname>
   <methodparam><type>int</type><parameter>ms</parameter></methodparam>
  </methodsynopsis>
  <para>
   Se puede establecer un tiempo de espera en cualquier momento y afectará a consultas subsiguientes del
   cursor, incluyendo la obtención de más resultados desde la base de datos. Por ejemplo, para
   esperar por siempre a una respuesta inicial pero que expire tras 100 ms para los resultados
   siguiente, se podría hacer esto:
   <programlisting role="php">
<![CDATA[
<?php

$cursor = $collection->find();

// $cursor->hasNext() ejecuta la consulta. No se ha establecido tiempo de espera, por lo
// que el programa esperará lo que sea necesario a una respuesta.

while ($cursor->hasNext()) {
    $cursor->timeout(100);

    // ahora se ha establecido el tiempo de espera, por lo que si el cursor necesita obtener más
    // resultados de la base de datos, solo esperará 100 ms a la réplica de la base de datos

    try {
        print_r($cursor->getNext());
    }
    catch(MongoCursorTimeoutException $e) {
        echo "query took too long!";
    }
}

?>
]]>
   </programlisting>
  </para>
  <para>
   Un tiempo de espera de 0 (o un número negativo) esperará por siempre por lo que se puede
   usar para reiniciar un cursor si ya no es necesario un tiempo de espera.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>ms</parameter>
    </term>
    <listitem>
     <para>
      El número de milisegundos que ha de esperar el cursor a una respuesta. Por
      omisión, el cursor esperará por siempre.
     </para>
    </listitem>
   </varlistentry>   
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   Este cursor.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>MongoCursor::timeout</function></title>
   <para>
    Una consulta donde el cursor espera una respuesta durante un segundo.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$cursor = $collection->find()->timeout(1000);

try {
  foreach ($cursor as $valor) {
    print_r($valor);
  }
}
catch(MongoCursorTimeoutException $e) {
  echo "¡La consulta tomódemasiado tiempo!";
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Hace que los método que obtienen resultados lancen
   <classname>MongoCursorTimeoutException</classname>s si la consulta toma más
   tiempo de los milisegundos especificados.
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
