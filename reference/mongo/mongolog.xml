<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 325229 Maintainer: chuso Status: ready -->

<phpdoc:classref xml:id="class.mongolog" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>La clase MongoLog</title>
 <titleabbrev>MongoLog</titleabbrev>

 <partintro>

<!-- {{{ MongoLog intro -->
  <section xml:id="mongolog.intro">
   &reftitle.intro;
   <para>
    El registro se puede usar para obetner información detallada de lo que está
    haciendo el controlador. El mecanismo de registro como lo usa MongoLog emite todos los mensajes
    de registro como un aviso de PHP. Dependiendo de la interfaz del servidor que se use,
    esto significa que serán enviados a strerr (con PHP-CLI), o,
    de lo contrario, al registro de errores del servidor web. Para que PHP pueda
    imprimir los mensajes de registro, no se neceistan configurar sus niveles (E_NOTICE) para
    que sean mostrados. Esto significa que el bit de E_NOTICE necesita ser parte del nivel de
    error_reporting y que display_errors esté establecido a 1.
   </para>
   <para>
    Por omisión, el registro está deshabilitado. Esta clase permite habilitar
    niveles específicos de informes para determinadas áreas del driver. Algunos ejemplos:
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// muestra todos los mensajes posibles
MongoLog::setLevel(MongoLog::ALL); // todos los niveles de registros
MongoLog::setModule(MongoLog::ALL); // todas las partes del driver

// muestra eventos significativos sobre fallos en conjuntos de réplicas
MongoLog::setLevel(MongoLog::INFO);
MongoLog::setModule(MongoLog::RS);

// muestra registros de nivel de información y de ajustes sobre conjuntos de réplicas y sobre agrupamientos de conexiones
MongoLog::setLevel(MongoLog::INFO|MongoLog::FINE);
MongoLog::setModule(MongoLog::RS|MongoLog::POOL);

?>
]]>
   </programlisting>
  </section>
<!-- }}} -->

  <section xml:id="mongolog.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoLog</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoLog</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.none">MongoLog::NONE</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.all">MongoLog::ALL</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="levels">constantes de niveles</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.warning">MongoLog::WARNING</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.info">MongoLog::INFO</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.fine">MongoLog::FINE</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="levels">constantes de módulos</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.rs">MongoLog::RS</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.pool">MongoLog::POOL</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.io">MongoLog::IO</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.server">MongoLog::SERVER</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.parse">MongoLog::PARSE</varname>
    </fieldsynopsis>


    <classsynopsisinfo role="comment">Campos</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier></modifier>
     <type>int</type>
     <varname>level</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>int</type>
     <varname>module</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongodate')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section>
   &reftitle.constants;
   <section xml:id="mongolog.constants.types">
    <title>Constantes de MongoLog</title>
    <para>
     Estas constantes pueden usarse tanto por
     <function>MongoLog::setLevel</function> como por
     <function>MongoLog::setModule</function>.
    </para>

    <variablelist>
     <varlistentry xml:id="mongolog.constants.none">
      <term><constant>MongoLog::NONE</constant></term>
      <listitem>
       <simpara>
        Constante para deshabilitar los registros.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.all">
      <term><constant>MongoLog::ALL</constant></term>
      <listitem>
       <simpara>
        Constante para notificar todos los registros.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>

   <section>
    <title>Constantes de Nivel de MongoLog</title>
    <para>
     Estas constantes pueden usarse por <function>MongoLog::setLevel</function>.
    </para>
    <variablelist>
     <varlistentry xml:id="mongolog.constants.warning">
      <term><constant>MongoLog::WARNING</constant></term>
      <listitem>
       <simpara>
        Muestra mensajes sobre situaciones excepcionales no
        críticas.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.info">
      <term><constant>MongoLog::INFO</constant></term>
      <listitem>
       <simpara>
        Muestra eventos que pudieran ser de interes para administradores, pero no
        especialmente notorios.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.fine">
      <term><constant>MongoLog::FINE</constant></term>
      <listitem>
       <simpara>
        Muestra la mayor parte de eventos que realiza el driver. Dependiendo del módulo que
        se esté analizando, este nivel podría ser demasiado ruidoso. Se usa principalmente para depuración.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>

   <section>
    <title>Constantes de módulos de MongoLog</title>
    <para>
     Estas constantes pueden usarse por <function>MongoLog::setModule</function>.
    </para>
    <variablelist>
     <varlistentry xml:id="mongolog.constants.io">
      <term><constant>MongoLog::IO</constant></term>
      <listitem>
       <simpara>
        Crea registros del tráfico generado de y desde la base de datos. A no ser que se trate de un programa trivial,
        esto creará un gran volumen de registros.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.parse">
      <term><constant>MongoLog::PARSE</constant></term>
      <listitem>
       <simpara>
        Crear registro de los análisis de textos realizados.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.pool">
      <term><constant>MongoLog::POOL</constant></term>
      <listitem>
       <simpara>
        Registra las actividades de los agrupamientos de conexiones. Creación de nuevas conexiones,
        reutilización de conexiones, y cierre de conexiones.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.rs">
      <term><constant>MongoLog::RS</constant></term>
      <listitem>
       <simpara>
        Registra las actividades de los conjuntos de réplicas. Caídas, comprobaciones, elección
        de secundarios a los que leer, etc..
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.server">
      <term><constant>MongoLog::SERVER</constant></term>
      <listitem>
       <simpara>
        Registra cambios de estado en el servidor. Detecta en primarios, secundarios
        y en duplicados.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
  </section>

 </partintro>

 &reference.mongo.entities.mongolog;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
