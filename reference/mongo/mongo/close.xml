<?xml version="1.0" encoding="utf-8"?>

<!-- EN-Revision: 308234 Maintainer: chuso Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="mongo.close" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Mongo::close</refname>
  <refpurpose>Cierra la conexión</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Mongo::close</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Salvo en circunstancias excepcionales, no es necesario invocar a
   este método. Cuando la instancia de Mongo quede fuera de ámbito, el 
   driver cerrará la conexión con la base de datos automáticamente.
  </para>
  <para>
   En caso de que los objetos no salgan de ámbito entre las peticiones, quizás
   se deee invocar a este método al final de la ejecución para eliminar todas las
   conexiones residuales. Sin embargo, es probable que sea más eficiente utilizar una conexión
   persistente, que creará automáticamente una conexión cuando sea necesaria y la utilizaría
   para tntas peticiones como fuera posible.
  </para>
  <para>
   Si se está conectado a un conjunto de réplicas, close() sólo cerrará la conexión a
   la primaria.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Indica si la conexión se cerró o no con éxito.
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
