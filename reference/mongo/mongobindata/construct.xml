<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 308234 Maintainer: chuso Status: ready -->

<refentry xml:id="mongobindata.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoBinData::__construct</refname>
  <refpurpose>Crea un nuevo objeto de datos binarios</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>MongoBinData::__construct</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>2</initializer></methodparam>
  </methodsynopsis>
  <para>
   Crea un nuevo objeto de datos binarios
  </para>
  <para>
   Hay cinco tipos reconocidos de datos binarios según la especificación BSON:
   función (0x01), matriz de bytes (0x02), UUID (0x03), MD5 (0x05), y definido por el usuario
   (0x80). El tipo por omisión es matriz de bytes (0x02). No hay ninguna diferencia en particilar
   sobre cómo interpreta el driver cada tipo, There is no particular 
   difference in how the driver or server interpret different types, por tanto
   es por ahora irrelevante. Se puede usar cualquier número (entre 0 y 255) como
   tipo, siempre y cuando el usuario asuma el riesgo de que la base de datos pueda eventualmente
   llevar a cabo alguna función con datos binarios de este tipo.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>data</parameter>
     </term>
     <listitem>
      <para>
       Datos binarios.
      </para>
     </listitem>
    </varlistentry>     
    <varlistentry>
     <term>
      <parameter>type</parameter>
     </term>
     <listitem>
      <para>
       Tipo de datos.
      </para>
     </listitem>
    </varlistentry>     
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un nuevo objeto de datos binarios.
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
