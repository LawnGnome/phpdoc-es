<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.10 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.bcpowmod" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>bcpowmod</refname>
  <refpurpose>Eleva un número de precisión arbitraria a otro, reducido por
  un módulo especificado</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>string</type><methodname>bcpowmod</methodname>
    <methodparam><type>string</type><parameter>operando_izquierda</parameter></methodparam>
    <methodparam><type>string</type><parameter>operando_derecha</parameter></methodparam>
    <methodparam><type>string</type><parameter>modulo</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>escala</parameter></methodparam>
   </methodsynopsis>
  <para>
   Utiliza el método de exponenciación-rápida para elevar
   <parameter>operando_izquierda</parameter> a la potencia
   <parameter>operando_derecha</parameter> con respecto al módulo
   <parameter>modulo</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>operando_izquierda</parameter></term>
     <listitem>
      <para>
       El operando de la izquierda, como una cadena.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>operando_derecha</parameter></term>
     <listitem>
      <para>
       El operando de la derecha, como una cadena.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>modulo</parameter></term>
     <listitem>
      <para>
       El módulo, como una cadena.
      </para>
     </listitem>
    </varlistentry>
    &bc.scale.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el resultado como una cadena, o &null; si
   <parameter>modulo</parameter> es 0.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Dado que éste método usa la operación de módulo, los números
    no-naturales pueden dar resultados inesperados. Un número natural es
    cualquier entero positivo diferente de cero.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Las siguientes dos declaraciones son funcionalmente idénticas. Sin
   embargo, la versión que usa <function>bcpowmod</function> se ejecuta en
   menos tiempo y puede aceptar parámetros más grandes.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a = bcpowmod($x, $y, $mod);

$b = bcmod(bcpow($x, $y),$mod);

// $a y $b poseen valores iguales.
?>
]]>
    </programlisting>
   </informalexample>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>bcpow</function></member>
    <member><function>bcmod</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
