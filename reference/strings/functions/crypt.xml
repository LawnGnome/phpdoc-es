<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.11 Maintainer: javi Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.crypt" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>crypt</refname>
    <refpurpose>Encripta una cadena mediante un algoritmo no reversible (hash)</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>string</type><methodname>crypt</methodname>
      <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>semilla</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>crypt</function> encriptar&aacute; una cadena utilizando el 
     m&eacute;todo est&aacute;ndar de encriptaci&oacute;n del Unix: <abbrev>DES</abbrev>.
     Los argumentos son una cadena a encriptar y una cadena semilla 
     de 2 caracteres en la que basar la encriptaci&oacute;n. Vea la p&aacute;gina del 
     manual de Unix sobre crypt para m&aacute;s informaci&oacute;n.
    </para>
    <simpara>
     Si el argumento de semilla no se proporciona, ser&aacute; generado 
     aleatoriamente por PHP cada vez que se llama a la funci&oacute;n.
    </simpara>
    <simpara>
     Algunos sistemas operativos soportan m&aacute;s de un tipo de encriptaci&oacute;n.
     De hecho, algunas veces la encriptaci&oacute;n est&aacute;ndar DES es sustitu&iacute;da
     por un algoritmo de encriptaci&oacute;n basado en MD5. El tipo de 
     encriptaci&oacute;n se selecciona en base al argumento semilla. En tiempo de 
     instalaci&oacute;n, PHP determina la capacidad de la funci&oacute;n de 
     encriptaci&oacute;n y aceptar&aacute; semillas para otros tipos de encriptaci&oacute;n.
     Si no se proporciona la semilla, PHP intentar&aacute; generar una 
     semilla est&aacute;ndar DES de 2 caraceres por defecto, excepto si el
     tipo de encriptaci&oacute;n est&aacute;ndar del sistema es el MD5, en cuyo caso 
     se generar&aacute; una semilla aleatoria compatible con MD5. PHP 
     fija una constante llamada CRYPT_SALT_LENGTH que le especifica si 
     su sistema soporta una semilla de 2 caracteres o si se debe usar 
     la semilla de 12 caracteres de longitud.
    </simpara>
    <simpara>
     Si se utiliza la semilla proporcionada, debe tenerse en cuenta que la semilla 
	 se genera una sola vez. Por tanto, si se llama a esta funci&oacute;n repetidamente, 
	 puede que se produzca un potencial problema de seguridad.
    </simpara>
    <simpara>
     La funci&oacute;n est&aacute;ndar de encriptaci&oacute;n <function>crypt</function> devuelve 
     la semilla como los dos primeros caracteres de la salida generada. Adem&aacute;s, solamente 
	 emplea los 8 primeros caracteres del par&aacute;metro <parameter>cadena</parameter>, por lo que 
	 si se utilizan 2 cadenas largas cuyos 8 primeros caracteres son identicos, la salida generada ser&aacute; 
	 la misma (siempre que se emplee la misma semilla).
    </simpara>
    <simpara>
     En los sistemas en los que la funci&oacute;n crypt() soporta m&uacute;ltiples 
     tipos de encriptaci&oacute;n, las siguienes constantes son fijadas a
     0 &oacute; 1 dependiendo de si est&aacute; disponible el tipo dado:
     </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       CRYPT_STD_DES - Encriptaci&oacute;n DES est&aacute;ndar con semilla de 2 caracteres
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       CRYPT_EXT_DES - Encriptaci&oacute;n DES extendida con semilla de 9 caracteres
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       CRYPT_MD5 - Encriptaci&oacute;n MD5 con semilla de 12 caracteres y comenzando
       por $1$
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       CRYPT_BLOWFISH - Encriptaci&oacute;n DES extendida con semilla de 16 caracteres
       y comenzando por $2$ o $2a$
      </simpara>
     </listitem>
    </itemizedlist>
    <note>
     <simpara>
	 No existe una funci&oacute;n de desencriptado, ya que <function>crypt</function> 
     utiliza algoritmos no reversibles.
     </simpara>
    </note>
    <example>
     <title>Ejemplos de <function>crypt</function></title>
     <programlisting role="php">
<![CDATA[
<?php
$contrasena = crypt('mi_contrasena'); // la semilla se genera automaticamente

/* Para realizar las comprobaciones de contrasenas, se debe establecer como valor de la 
	semilla el valor completo devuelto por crypt(). De esta forma, se evitan los 
	problemas que se pueden producir cuando se emplean diferentes algoritmos de 
	encriptacion. (Como se detalla previamente, el metodo DES estandar emplea una semilla 
	de 2 caracteres mientras que el metodo MD5 utiliza una semilla de 12 caracteres.
	*/
if (crypt($datos_introducidos_por_el_usuario, $contrasena) == $contrasena) {
   echo "La contrasena proporcionada por el usuario coincide con la contrasena establecida";
}
?>
]]>
     </programlisting>
    </example>
    <example>
     <title>Empleando <function>crypt</function> con htpasswd</title>
     <programlisting role="php">
<![CDATA[
<?php
// Establecer la contrasena
$contrasena = 'mi_contrasena';

// Obtener el hash, generandose la semilla de forma aleatoria
$hash = crypt($contrasena);
?>
]]>
     </programlisting>
    </example>
    <example>
     <title>Empleando <function>crypt</function> con diferentes m&eacute;todos de encriptaci&oacute;n</title>
     <programlisting role="php">
<![CDATA[
<?php
if (CRYPT_STD_DES == 1) {
    echo 'DES estandar: ' . crypt('rasmuslerdorf', 'rl') . "\n";
}

if (CRYPT_EXT_DES == 1) {
    echo 'DES extendido: ' . crypt('rasmuslerdorf', '_J9..rasm') . "\n";
}

if (CRYPT_MD5 == 1) {
    echo 'MD5:          ' . crypt('rasmuslerdorf', '$1$rasmusle$') . "\n";
}

if (CRYPT_BLOWFISH == 1) {
    echo 'Blowfish:     ' . crypt('rasmuslerdorf', '$2a$07$rasmuslerd...........$') . "\n";
}
?>
]]>
     </programlisting>
      &example.outputs.similar;
     <screen>
<![CDATA[
DES estandar: rl.3StKT.4T8M
DES extendido: _J9..rasmBYk8r9AiWNc
MD5:          $1$rasmusle$rISCgZzpwk3UhDidwXvin0
Blowfish:     $2a$07$rasmuslerd............nIdrcHdxcUxWomQX9j6kvERCFjTg7Ra
]]>
     </screen>
    </example>
    <simpara>
        Vea tambi&eacute;n: <function>md5</function> y la <link linkend="ref.mcrypt">extensi&oacute;n 
     Mcrypt</link>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
