<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/strings.xml, last change in rev 1.7 -->
<!-- last change to 'strrpos' in en/ tree in rev 1.8 -->
  <refentry id="function.strrpos">
   <refnamediv>
    <refname>strrpos</refname>
    <refpurpose>
     Encuentra la posici&oacute;n de la &uacute;ltima aparici&oacute;n de un caracter en una cadena
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>int</type><methodname>strrpos</methodname>
      <methodparam><type>string</type><parameter>pajar</parameter></methodparam>
      <methodparam><type>char</type><parameter>aguja</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuele la posici&oacute;n num&eacute;rica de la &uacute;ltima aparici&oacute;n de
     la <parameter>aguja</parameter> en el <parameter>pajar</parameter>.
     N&oacute;tese que la aguja en este caso s&oacute;lo puede ser un caracter &uacute;nico.
     Si se pasa una cadena como aguja, s&oacute;lo se utilizar&aacute; el primer
     caracter de la misma.
    </para>
    <para>
     Si la <parameter>aguja</parameter> no es hayada, devuelve &false;.
    </para>
    <para>
     Si la <parameter>aguja</parameter> no es una cadena, se convierte
     a entero y se aplica como el valor ordinal de un caracter.
    </para>
    <para>
     Vea tambi&eacute;n <function>strpos</function>,
     <function>strrchr</function>, <function>substr</function>,
     <function>stristr</function>, y <function>strstr</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
