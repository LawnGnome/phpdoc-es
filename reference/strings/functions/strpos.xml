<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.8 Maintainer: javi Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.8 -->
  <refentry xml:id="function.strpos" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>strpos</refname>
    <refpurpose>
     Encuentra la posici&oacute;n de la primera aparici&oacute;n de una cadena
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>int</type><methodname>strpos</methodname>
      <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
      <methodparam><type>string</type><parameter>caracter</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>desplazamiento</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve la posici&oacute;n num&eacute;rica de la primera aparici&oacute;n de la 
     <parameter>caracter</parameter> en la cadena 
     <parameter>cadena</parameter>. A diferencia de 
     <function>strrpos</function>, esta funci&oacute;n puede tomar una 
     cadena completa como <parameter>caracter</parameter> y se utilizar&aacute; 
     en su totalidad.
    </para>
    <para>
     Si no se encuentra el <parameter>caracter</parameter>, devuelve &false;.
	</para>
    
    &return.falseproblem;
    &note.bin-safe;
    <para>
     <example>
     <title>Ejemplos de <function>strpos</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$mi_cadena = 'abc';
$caracter   = 'a';
$posicion = strpos($mi_cadena, $caracter);

// Seguidamente se utiliza ===.  La forma simple de comparacion (==)
// no funciona como deberia, ya que la posicion de 'a' es el caracter
// numero 0 (cero)
if ($posicion === false) {
    echo "No se encontro '$caracter' en la cadena '$mi_cadena'";
} else {
    echo "Se encontro '$caracter' en la cadena '$mi_cadena'";
    echo " en la posicion $posicion";
}

// Se puede buscar el caracter sin tener en cuenta los caracteres anteriores 
// al desplazamiento
$nueva_cadena = 'abcdef abcdef';
$posicion = strpos($nueva_cadena, 'a', 1); // $posicion = 7, no 0
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Si el <parameter>caracter</parameter> no es una cadena, se convierte 
     a entero y se aplica como el valor ordinal de un car&aacute;cter.
    </para>
    <para>
     El par&aacute;metro opcional <parameter>desplazamiento</parameter> le permite 
     especificar a partir de qu&eacute; car&aacute;cter de la <parameter>cadena</parameter> 
     se empieza a buscar. La posici&oacute;n devuelta sigue siendo relativa al comienzo 
     de <parameter>cadena</parameter>.
    </para>
    <para>
     Vea tambi&eacute;n <function>strrpos</function>, 
     <function>stripos</function>,
     <function>strripos</function>,
     <function>strrchr</function>, 
     <function>substr</function>,
     <function>stristr</function> y  
     <function>strstr</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
