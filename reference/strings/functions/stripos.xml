<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.9 Maintainer: lboshell Status: ready -->
  <refentry id="function.stripos">
   <refnamediv>
    <refname>stripos</refname>
    <refpurpose>
     Encontrar la posición de la primera ocurrencia de una cadena,
     insensible a mayúsculas y minúsculas
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
     <methodsynopsis>
      <type>int</type><methodname>stripos</methodname>
      <methodparam><type>string</type><parameter>pajar</parameter></methodparam>
      <methodparam><type>string</type><parameter>aguja</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>desplazamiento</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve la posición numérica de la primera ocurrencia de
     <parameter>aguja</parameter> en el <parameter>pajar</parameter>
     tipo <type>string</type>. A diferencia de
     <function>strpos</function>, <function>stripos</function> es
     indiferente a mayúsculas y minúsculas.
    </para>
    <para>
     Note que la <parameter>aguja</parameter> puede ser una cadena de
     uno o más caracteres.
    </para>
    <para>
     Si <parameter>aguja</parameter> no se encuentra,
     <function>stripos</function> devolverá el valor
     <type>boolean</type> &false;.
    </para>

    &return.falseproblem;

    <para>
     <example>
     <title>Ejemplos de <function>stripos</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$encontradme = 'a';
$micadena1 = 'xyz';
$micadena2 = 'ABC';

$pos1 = stripos($micadena1, $encontradme);
$pos2 = stripos($micadena2, $encontradme);

// No, ciertamente 'a' no esta en 'xyz'
if ($pos1 === false) {
    echo "La cadena '$encontradme' no fue encontrada en la cadena '$micadena1'";
}

// Note nuestro uso de ===.  Simplemente == no funcionaría como es de
// esperarse, ya que la posición de 'a' es el caracter 0 (el primero).
if ($pos2 !== false) {
    echo "Encontramos '$encontradme' en '$micadena2' en la posición $pos2";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Si <parameter>aguja</parameter> no es una cadena, es convertida a
     un entero y aplicada como el valor ordinal de un caracter.
    </para>
    <para>
     El parámetro opcional <parameter>desplazamiento</parameter> le
     permite especificar el caracter en <parameter>pajar</parameter> a
     partir del que desea empezar a buscar. La posición devuelta sigue
     siendo relativa al comienzo de <parameter>pajar</parameter>.
    </para>

    &note.bin-safe;

    <para>
     Vea también <function>strpos</function>,
     <function>strrpos</function>, <function>strrchr</function>,
     <function>substr</function>, <function>stristr</function>,
     <function>strstr</function>, <function>strripos</function> y
     <function>str_ireplace</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
