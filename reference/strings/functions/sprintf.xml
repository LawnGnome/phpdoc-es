<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/strings.xml, last change in rev 1.7 -->
<!-- last change to 'sprintf' in en/ tree in rev 1.2 -->
  <refentry id="function.sprintf">
   <refnamediv>
    <refname>sprintf</refname>
    <refpurpose>Devuelve una cadena con formato</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>string</type><methodname>sprintf</methodname>
      <methodparam><type>string</type><parameter>formato</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>args</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Devuelve una cadena producida de acuerdo a la cadena de 
     <parameter>formato</parameter>.
    </simpara>
    <simpara>
     La cadena de formato est&aacute; compuesta por cero o m&aacute;s directivas:
     caracteres ordinarios (excepto <literal>%</literal>) que son
     copiados directamente al resultado, y <emphasis>especificaciones
     de conversi&oacute;n</emphasis>, cada una de las cuales provoca la
     obtenci&oacute;n de su propio par&aacute;metro. Esto se aplica tanto a 
     <function>sprintf</function> como a <function>printf</function>.
    </simpara>
    <para>
     Cada especificaci&oacute;n de conversi&oacute;n consiste en uno de estos elementos,
     por orden:
     <orderedlist>
      <listitem>
       <simpara>
        Un <emphasis>especificador de relleno</emphasis> opcional que
        indica qu&eacute; caracter se utilizar&aacute; para rellenar el resultado hasta
        el tama&ntilde;o de cadena correcto. Este puede ser un espacio o un 
        <literal>0</literal> (caracter cero). El valor por defecto es
        rellenar con espacios. Un caracter de relleno alternativo se puede
        especificar prefij&aacute;ndolo con una comilla simple (<literal>'</literal>).
        Vea los ejemplos m&aacute;s abajo.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Un <emphasis>especificador de alineaci&oacute;n</emphasis> opcional que
        indica si el resultado debe ser alineado a la izquierda o a la
        derecha. Por defecto se alinea a la derecha; un caracter 
        <literal>-</literal> aqu&iacute; lo justificar&aacute; a la izquierda.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Un n&uacute;mero opcional, un <emphasis>especificador de ancho</emphasis>
        que dice el n&uacute;mero de caracteres (m&iacute;nimo) en que deber&iacute;a resultar
        esta conversi&oacute;n.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Un <emphasis>especificador de precisi&oacute;n</emphasis> opcional que
        indica cu&aacute;ntos d&iacute;gitos decimales deben mostrarse para los n&uacute;meros
        en coma flotante. Esta opci&oacute;n no tienen efecto para otros tipos
        que no sean double. (Otra funci&oacute;n &uacute;til para formatear n&uacute;meros
        es <function>number_format</function>).
       </simpara>
      </listitem>
      <listitem>
       <para>
        Un <emphasis>especificador de tipo</emphasis> que indica el tipo
        a usar para tratar los datos de los argumentos. Los tipos posibles
        son:
        <simplelist>
         <member>
          <literal>%</literal> - un caracter literal de porcentaje. No se
          precisa argumento.
         </member>
         <member>
          <literal>b</literal> - el argumento es tratado como un entero y
          presentado como un n&uacute;mero binario.
         </member>
         <member>
          <literal>c</literal> - el argumento es tratado como un entero, y
          presentado como el caracter con dicho valor ASCII.
         </member>
         <member>
          <literal>d</literal> - el argumento es tratado como un entero y
          presentado como un n&uacute;mero decimal.
         </member>
         <member>
          <literal>f</literal> - el argumento es tratado como un doble y
          presentado como un n&uacute;mero de coma flotante.
         </member>
         <member>
          <literal>o</literal> - el argumento es tratado como un entero, y
          presentado como un n&uacute;mero octal.
         </member>
         <member>
          <literal>s</literal> - el argumento es tratado como una cadena y
          es presentado como tal.
         </member>
         <member>
          <literal>x</literal> - el argumento es tratado como un entero y
          presentado como un n&uacute;mero hexadecimal (con min&uacute;sculas).
         </member>
         <member>
          <literal>X</literal> - el argumento es tratado como un entero y
          presentado como un n&uacute;mero hexadecimal (con may&uacute;sculas).
         </member>
        </simplelist>
       </para>
      </listitem>
     </orderedlist>
    </para>
    <simpara>
     Vea tambi&eacute;n: <function>printf</function>, <function>sscanf</function>,
         <function>fscanf</function>, y <function>number_format</function>.
    </simpara>
   </refsect1>
   <refsect1>
    <title>Ejemplos</title>
    <para>
     <example>
      <title>Ejemplo de <function>sprintf</function>: enteros rellenos con ceros</title>
      <programlisting role="php">
$fechaiso = sprintf ("%04d-%02d-%02d", $anno, $mes, $dia);
      </programlisting>
     </example>
     <example>
      <title>Ejemplo de <function>sprintf</function>: formateando monedas</title>
      <programlisting role="php">
$pelas1 = 68.75;
$pelas2 = 54.35;
$pelas = $pelas1 + $pelas2;
// echo $pelas mostrar&aacute; "123.1";
$formateado = sprintf ("%01.2f", $pelas);
// echo $formateado mostrar&aacute; "123.10"
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
