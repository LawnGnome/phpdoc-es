<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.10 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/math.xml, last change in rev 1.2 -->
  <refentry xml:id="function.number-format" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>number_format</refname>
    <refpurpose>Dar formato a un número con los miles
    agrupados</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
     <methodsynopsis>
      <type>string</type><methodname>number_format</methodname>
      <methodparam><type>float</type><parameter>numero</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>decimales</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>punto_dec</parameter></methodparam>
      <methodparam><type>string</type><parameter>sep_miles</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>number_format</function> devuelve una versión con
     formato de <parameter>numero</parameter>. Esta función acepta
     uno, dos, o cuatro parámetros (no tres):
    </para>

    <para>
     Si solo se entrega un parámetro, <parameter>numero</parameter>
     recibirá un formato sin decimales, pero con una coma (",") entre
     cada grupo de miles.
    </para>
    <para>
     Si se entregan dos parámetros, <parameter>numero</parameter>
     recibirá un formato con la cantidad de
     <parameter>decimales</parameter> dada, con un punto (".") al
     frente, y una coma (",") entre cada grupo de miles.
    </para>
    <para>
     Si todos los cuatro parámetros son dados,
     <parameter>numero</parameter> recibirá un formato con la cantidad
     de <parameter>decimales</parameter> dada,
     <parameter>punto_dec</parameter> en lugar de un punto (".")
     antes de los decimales, y <parameter>sep_miles</parameter> en
     lugar de una coma (",") entre cada grupo de miles.
    </para>
    <para>
     Sólo el primer caracter de <parameter>sep_miles</parameter> es
     usado. Por ejemplo, si usa <literal>bar</literal> como
     <parameter>sep_miles</parameter> sobre el número
     <literal>1000</literal>, <function>number_format</function>
     devolverá <literal>1b000</literal>.
    </para>
    <para>
     <example>
      <title>Ejemplo de <function>number_format</function></title>
      <para>
       Por ejemplo, la notación francesa usa usualmente dos decimales,
       coma (',') como separador decimal, y espacio (' ') como
       separador de miles. Esto se puede lograr con esta línea:
      </para>
      <programlisting role="php">
<![CDATA[
<?php

$numero = 1234.56;

// notación inglesa (predeterminada)
$numero_formato_ingles = number_format($numero);
// 1,235

// notación francesa
$numero_formato_frances = number_format($numero, 2, ',', ' ');
// 1 234,56

$numero = 1234.5678;

// notación inglesa sin separador de miles
$numero_formato_ingles = number_format($numero, 2, '.', '');
// 1234.57

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Vea también: <function>money_format</function>,
     <function>sprintf</function>, <function>printf</function> y
     <function>sscanf</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
