<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.5 Maintainer: javi Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.stripslashes" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>stripslashes</refname>
    <refpurpose>
     Desmarca la cadena marcada con <function>addslashes</function>
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>string</type><methodname>stripslashes</methodname>
      <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve una cadena con las barras invertidas eliminadas 
     (<literal>\'</literal> se convierte en <literal>'</literal>, 
     etc.). Las barras invertidas dobles (<literal>\\</literal>) se 
	 convierten en sencillas (<literal>\</literal>).
    </para>
    <para>
     Un ejemplo de uso de la funci&oacute;n <function>stripslashes</function> es 
	 cuando la directiva <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> 
     tiene un valor de <literal>on</literal> (que es su valor por defecto) y no se van 
	 a insertar los datos en una base de datos o cualquier otro elemento que necesite 
	 escapar los caracteres (por ejemplo, cuando se van a mostrar los datos de forma 
	 directa en una p&aacute;gina HTML).
    </para>
    <para>
     <example>
      <title>Ejemplo de <function>stripslashes</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$cadena = "¿Te apellidas O\'reilly?";

// La salida es: ¿Te apellidas O'reilly?
echo stripslashes($cadena);
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      <function>stripslashes</function> no es recursiva, por lo que que si se quiere aplicar la 
	  funci&oacute;n a una matriz multi-dimensional, se debe emplear una funci&oacute;n recursiva.
     </para>
    </note>
    <para>
     <example>
      <title>Uso de <function>stripslashes</function> con una matriz</title>
      <programlisting role="php">
<![CDATA[
<?php
function stripslashes_recursiva($valor)
{
    $valor = is_array($valor) ?
                array_map('stripslashes_recursiva', $valor) :
                stripslashes($valor);

    return $valor;
}

// Ejemplo
$array = array("p\\'rueba", "prue\\'ba", array("pru\\'eba", "prueb\\'a"));
$array = stripslashes_recursiva($array);

// Output
print_r($array);
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
	
Array
(
    [0] => p'rueba
    [1] => prue'ba
    [2] => Array
        (
            [0] => pru'eba
            [1] => prueb'a
        )

)
]]>
      </screen>
     </example>
    </para>
    <para>
     Para ver m&aacute;s informaci&oacute;n sobre "magic quotes", vea <function>get_magic_quotes_gpc</function>.
    </para>
    <simpara>
     Vea tambi&eacute;n <function>addslashes</function> y <function>get_magic_quotes_gpc</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
