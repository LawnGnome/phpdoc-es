<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.2 Maintainer: lboshell Status: ready -->
  <refentry id="function.fprintf">
   <refnamediv>
    <refname>fprintf</refname>
    <refpurpose>Escribir una cadena con formato a una secuencia</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>int</type><methodname>fprintf</methodname>
      <methodparam><type>resource</type><parameter>gestor</parameter></methodparam>
      <methodparam><type>string</type><parameter>formato</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>args</parameter></methodparam>
     </methodsynopsis>
    <simpara>
Escribe una cadena producida de acuerdo a la cadena de
formato <parameter>formato</parameter> al recurso de secuencia
especificado por <parameter>gestor</parameter>.
    </simpara>
    <simpara>
La cadena de formato est&aacute; compuesta por cero o m&aacute;s
directivas: caracteres ordinarios (excluyendo <literal>%</literal>)
que son copiados directamente en el resultado,
y <emphasis>especificaciones de conversi&oacute;n</emphasis>, cada uno
de los cuales resulta en la recuperaci&oacute;n de su propio
par&aacute;metro. Esto se aplica
en <function>fprintf</function>, <function>sprintf</function>,
y <function>printf</function>.
    </simpara>
    <para>
Cada especificaci&oacute;n de conversi&oacute;n consiste en un signo
de porcentaje (<literal>%</literal>), seguido de uno o m&aacute;s de
estos elementos, en orden:
     <orderedlist>
      <listitem>
       <simpara>
Un <emphasis>especificador de relleno</emphasis> opcional que indica
qu&eacute; caracter ser&aacute; usado para rellenar los resultados al
lado derecho del tama&ntilde;o de la cadena. &Eacute;ste puede ser un
caracter de espacio o un <literal>0</literal> (el caracter de
cero). La acci&oacute;n predeterminada es realizar el relleno con
espacios. Un caracter de relleno alternativo puede ser especificado si
se precede con una comilla simple (<literal>'</literal>). Vea los
ejemplos m&aacute;s adelante.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
Un <emphasis>especificador de alineaci&oacute;n</emphasis> opcional
que dice si el resultado deber&iacute;a ser alineado sobre la
izquierda o sobre la derecha. La acci&oacute;n predeterminada es la
alineaci&oacute;n a la derecha; un caracter <literal>-</literal> en
este lugar har&aacute; que la alineaci&oacute;n se efectuara a la
izquierda.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
Un n&uacute;mero opcional, un <emphasis>especificador de
ancho</emphasis> que dice cu&aacute;ntos caracteres (m&iacute;nimo)
debe producir esta conversi&oacute;n.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
Un <emphasis>especificador de precisi&oacute;n</emphasis> opcional que
dice cu&aacute;ntos d&iacute;gitos decimales deben ser mostrados para
los n&uacute;meros de punto flotante. Esta opci&oacute;n no tiene
ning&uacute;n efecto sobre otros tipos de datos diferentes
a <type>float</type>. (Otra funci&oacute;n &uacute;til para el formato
de n&uacute;meros es <function>number_format</function>.)
       </simpara>
      </listitem>
      <listitem>
       <para>
        Un <emphasis>especificador de tipo</emphasis> que dice el tipo
        de argumento usado para tratar los datos. Los
        posibles tipos:
        <simplelist>
         <member>
          <literal>%</literal> - un caracter de porcentaje literal. No
          requiere argumento.
         </member>
         <member>
          <literal>b</literal> - el argumento es tratado como un
          entero, y presentado como un n&uacute;mero binario.
         </member>
         <member>
          <literal>c</literal> - el argumento es tratado como un
          entero, y presentado como el caracter correspondiente al
          valor ASCII dado.
         </member>
         <member>
          <literal>d</literal> - el argumento es tratado como un
          entero, y presentado como un n&uacute;mero decimal (con signo).
         </member>
         <member>
          <literal>u</literal> - el argumento es tratado como un
          entero, y presentado como un n&uacute;mero decimal sin signo.
         </member>
         <member>
          <literal>f</literal> - el argumento es tratado como un 
          <type>float</type>, y presentado como un n&uacute;mero con
          punto flotante.
         </member>
         <member>
          <literal>o</literal> - el argumento es tratado como un
          entero, y presentado como un n&uacute;mero octal.
         </member>
         <member>
          <literal>s</literal> - el argumento es tratado y presentado
          como una cadena.
         </member>
         <member>
          <literal>x</literal> - el argumento es tratado como un
          entero y presentado como un n&uacute;mero hexadecimal (con letras
          min&uacute;sculas).
         </member>
         <member>
          <literal>X</literal> - el argumento es tratado como un
          entero y presentado como un n&uacute;mero hexadecimal (con letras
          may&uacute;sculas).
         </member>
        </simplelist>
       </para>
      </listitem>
     </orderedlist>
    </para>
    <simpara>
     Vea tambi&eacute;n: <function>printf</function>,
     <function>sprintf</function>,
     <function>sscanf</function>, <function>fscanf</function>, 
     <function>vsprintf</function>, y
     <function>number_format</function>.
    </simpara>
   </refsect1>
   <refsect1>
    <title>Ejemplos</title>
    <para>
     <example>
      <title><function>sprintf</function>: enteros con relleno de ceros</title>
      <programlisting role="php">
<![CDATA[
<?php
$fecha_iso = sprintf("%04d-%02d-%02d", $anyo, $mes, $dia);
?>
]]>
      </programlisting>
     </example>
     <example>
      <title><function>sprintf</function>: dando formato a valores monetarios</title>
      <programlisting role="php">
<![CDATA[
<?php
$dinero1 = 68.75;
$dinero2 = 54.35;
$dinero = $dinero1 + $dinero2;
// echo $dinero producira la salida "123.1";

$con_formato = sprintf("%01.2f", $dinero);
// echo $con_formato producira la salida "123.10"
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
