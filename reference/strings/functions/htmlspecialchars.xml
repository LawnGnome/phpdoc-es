<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 309322 Maintainer: jpberdejo Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.htmlspecialchars" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>htmlspecialchars</refname>
  <refpurpose>Convierte caracteres especiales en entidades HTML</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>htmlspecialchars</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>ENT_COMPAT</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>double_encode</parameter><initializer>true</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ciertos caracteres tienen un significado especial en HTML y deben
   ser representados por entidades HTML si se desea preservar su
   significado. Esta función devuelve un string con algunas de estas
   conversiones realizadas; las traducciones hechas son las más
   útiles para la programación web de todos los días. Si se requieren traducir todas las
   entidades de caracteres HTML, utilizar en su lugar
   <function>htmlentities</function>.
  </para>
  <simpara>
   Esta función es útil en prevenir que texto suministrado por el usuario
   contenga código HTML, como en una aplicación de foros o una de libro
   de visitas.
  </simpara>
  <para>
   Las traducciones realizadas son:
   <itemizedlist>
    <listitem>
     <simpara>
      '&amp;' (ampersand) se convierte en '&amp;amp;'
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      '&quot;' (comillas dobles) se convierten en '&amp;quot;' cuando <constant>ENT_NOQUOTES</constant>
      no se ha establecido.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      '&#039;' (comilla simple) se convierte en '&amp;#039;' sólo cuando
      <constant>ENT_QUOTES</constant> se ha establecido.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      '&lt;' (menor que) se convierte en '&amp;lt;'
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      '&gt;' (mayor que) se convierte en '&amp;gt;'
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       El <type>string</type> a ser convertido.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       El segundo argumento opcional, <parameter>flags</parameter>, le dice
       a la función qué hacer con los caracteres de comillas simples y dobles y con
       secuencias multi-byte inválidas.
       El modo predeterminado, <constant>ENT_COMPAT</constant>, es el modo compatible con versiones anteriores
       en el cual sólo se traduce el carácter de comillas dobles y se deja la
       comilla simple sin traducir. Si se establece <constant>ENT_QUOTES</constant>, tanto comillas simples
       como dobles se traducen y si se establece <constant>ENT_NOQUOTES</constant> ni
       comillas simples ni dobles están traducidos.
       Además, desde 5.3.0, estas constantes se pueden combinar con
       <constant>ENT_IGNORE</constant>. En ese caso, en los strings que contienen secuencias inválidas de
       unidad de código, éstas se descartan en lugar de que la función
       devuelva un string vacío. Se debe evitar su uso, ya que puede introducir vulnerabilidades.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charset</parameter></term>
     <listitem>
      <para>
       Define el juego de caracteres utilizado en la conversión.
       El juego de caracteres por defecto es ISO-8859-1.
      </para>
      <para>
       Para el propósito de ésta función, los juegos de caracteres
       <literal>ISO-8859-1</literal>, <literal>ISO-8859-15</literal>,
       <literal>UTF-8</literal>, <literal>cp866</literal>,
       <literal>cp1251</literal>, <literal>cp1252</literal> y
       <literal>KOI8-R</literal> son efectivamente equivalentes, siempre y cuando el
       <parameter>string</parameter> en sí sea válido para el juego de caracteres, debido
       a que los caracteres afectados por <function>htmlspecialchars</function> ocupan
       las mismas posiciones en todos estos juegos de caracteres.
      </para>
      &reference.strings.charsets;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>double_encode</parameter></term>
     <listitem>
      <para>
       Cuando <parameter>double_encode</parameter> se apaga, PHP no codificará
       las entidades html existentes, el valor por defecto es convertir todo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El <type>string</type> convertido.
  </para>
  <para>
   Si el <parameter>string</parameter> de entrada contiene una secuencia de unidad de código 
   no válida en el <parameter>charset</parameter> dado y el
   indicador <constant>ENT_IGNORE</constant> no se establece, entonces
   <function>htmlspecialchars</function> devolverá un string vacío.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.3</entry>
       <entry>
        Fue agregado el parámetro <parameter>double_encode</parameter>.
       </entry>
      </row>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Fue agregado el parámetro <parameter>charset</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>htmlspecialchars</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$new = htmlspecialchars("<a href='test'>Test</a>", ENT_QUOTES);
echo $new; // &lt;a href=&#039;test&#039;&gt;Test&lt;/a&gt;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Tener en cuenta que esta función no traduce nada más allá de lo que
    aparece en la lista de arriba. Para la traducción completa de entidades, ver
    <function>htmlentities</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_html_translation_table</function></member>
    <member><function>htmlspecialchars_decode</function></member>
    <member><function>strip_tags</function></member>
    <member><function>htmlentities</function></member>
    <member><function>nl2br</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
