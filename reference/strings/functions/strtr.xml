<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: benjamin Status: ready -->
<!-- Reviewed: not --> 

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strtr"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtr</refname>
  <refpurpose>Traduce ciertos caracteres</refpurpose>
 </refnamediv>

 <refsect1 role="description"> &reftitle.description; <methodsynopsis>
   <type>string</type>
   <methodname>strtr</methodname>
   <methodparam>
    <type>string</type>
    <parameter>cadena</parameter>
   </methodparam>
   <methodparam>
    <type>string</type>
    <parameter>desde</parameter>
   </methodparam>
   <methodparam>
    <type>string</type>
    <parameter>hasta</parameter>
   </methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>string</type>
   <methodname>strtr</methodname>
   <methodparam>
    <type>string</type>
    <parameter>cadena</parameter>
   </methodparam>
   <methodparam>
    <type>array</type>
    <parameter>pares_sustituidos</parameter>
   </methodparam>
  </methodsynopsis>
  <para> Esta función devuelve una copia de la <parameter>cadena</parameter>, traduciendo todas las
   apariciones de cada caracter en <parameter>desde</parameter> por el carácter correspondiente
    <parameter>hasta</parameter>. </para>
  <para> Si <parameter>desde</parameter> y <parameter>hasta</parameter> son de distinta logitud, se
   ignoran los caracteres extra de la cadena más larga. </para>
 </refsect1>

 <refsect1 role="parameters"> &reftitle.parameters; <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>cadena</parameter>
     </term>
     <listitem>
      <para> Tipo <type>string</type> La cadena que se está traduciendo. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>desde</parameter>
     </term>
     <listitem>
      <para> Tipo <type>string</type> sus caracteres serán reemplazado por
        <parameter>hasta</parameter>. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>hasta</parameter>
     </term>
     <listitem>
      <para> Tipo <type>string</type> los caracteres que reemplazarán a
       <parameter>desde</parameter>. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>pares_sustituidos</parameter>
     </term>
     <listitem>
      <para> El argumento <parameter>pares_sustituidos</parameter> puede ser usado como un sustituto
       para <parameter>hasta</parameter> y <parameter>desde</parameter> en cuyo caso se trata de un
        <type>array</type> en esta forma <literal>array('from' => 'to', ...)</literal>. </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues"> &reftitle.returnvalues; <para> Esta función devulve una copia de
    <parameter>str</parameter>, traduciendo todas las apariciones de cada carácter en
    <parameter>desde</parameter> por el caracter correspondiente <parameter>hasta</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog"> &reftitle.changelog; <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.0</entry>
       <entry> Esta Característica de 2 argumentos (<parameter>hasta</parameter> y
         <parameter>desde</parameter>) se han añadido a la versión PHP 4.0.0 . </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples"> &reftitle.examples; <para>
   <example>
    <title><function>strtr</function> ejemplo</title>
    <programlisting role="php">
<![CDATA[
<?php
$addr = strtr($addr, "äåö", "aao");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <function>strtr</function> Puede llamarse con dos unicos argumentos. Si se llama con 2 argumentos
   se comporta de otro modo: <parameter>desde</parameter> debe ser entonces una matriz que contenga
   pares cadena -> cadena que serán sustituídos en la cadena original. <function>strtr</function>
   siempre buscará la coincidencia más larga primero y *NO* intentará sustituir nada en lo que haya
   trabajado ya. </para>
  <example>
   <title><function>strtr</function> ejemplo con 2 argumentos</title>
   <programlisting role="php">
<![CDATA[
<?php
$trans = array("hola" => "buen dia", "buen dia" => "hola");
echo strtr("hola a todos, digo buen dia", $trans);
?>
]]>
    </programlisting> &example.outputs; <screen>
<![CDATA[
buen dia a todos, digo hola
]]>
    </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso"> &reftitle.seealso; <para>
   <simplelist>
    <member>
     <function>preg_replace</function>
    </member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
