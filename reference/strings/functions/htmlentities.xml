<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 306404 Maintainer: jpberdejo Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.htmlentities">
 <refnamediv>
  <refname>htmlentities</refname>
  <refpurpose>Convierte todos los caracteres aplicables a entidades HTML</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>htmlentities</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>ENT_COMPAT</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>charset</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>double_encode</parameter><initializer>true</initializer></methodparam>
  </methodsynopsis>
  <para>
   Esta función es idéntica a <function>htmlspecialchars</function> en todos
   los aspectos, excepto que con <function>htmlentities</function>, todos los caracteres que
   tienen equivalente HTML son convertidos a esas entidades.
  </para>
  <para>
   Si en su lugar lo que se quiere es decodificar (lo inverso), se puede utilizar
   <function>html_entity_decode</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       El string de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Al igual que <function>htmlspecialchars</function>, el segundo parámetro opcional
       <parameter>flags</parameter> permite definir qué se
       hará con las comillas 'sencillas' y "dobles". Se establece en una de tres
       constantes, siendo la por defecto <constant>ENT_COMPAT</constant>,
       opcionalmente combinada con una cuarta <constant>ENT_IGNORE</constant>
       (a partir de PHP 5.3.0):
       <table>
        <title>Constantes disponibles para <parameter>flags</parameter></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Nombre de la constante</entry>
           <entry>Descripción</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>ENT_COMPAT</constant></entry>
           <entry>Convertirá las comillas dobles y deja solo las comillas sencillas.</entry>
          </row>
          <row>
           <entry><constant>ENT_QUOTES</constant></entry>
           <entry>Convertirá tanto las comillas dobles como las sencillas.</entry>
          </row>
          <row>
           <entry><constant>ENT_NOQUOTES</constant></entry>
           <entry>Dejará tanto las comillas dobles como las sencillas sin convertir.</entry>
          </row>
          <row>
           <entry><constant>ENT_IGNORE</constant></entry>
           <entry>
            Silenciosamente descarta unidades de secuencia de código no válidas en lugar de devolver
            un string vacío. Agregado en PHP 5.3.0. Esto está previsto para la compatibilidad
            hacia atrás; evitar su uso ya que puede tener implicaciones de seguridad.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charset</parameter></term>
     <listitem>
      <para>
       Al igual que <function>htmlspecialchars</function>, se toma un tercer argumento opcional
       <parameter>charset</parameter> el cual define el conjunto de caracteres
       a ser utilizado para la conversión.
       En la actualidad, el juego de caracteres ISO-8859-1 se utiliza como valor por defecto.
      </para>
      &reference.strings.charsets;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>double_encode</parameter></term>
     <listitem>
      <para>
       Cuando se desactiva <parameter>double_encode</parameter> PHP no
       codificará a las entidades html existentes. El valor por defecto es convertir todo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el string codificado.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Fue agregada la constante <constant>ENT_IGNORE</constant>.
       </entry>
      </row>
      <row>
       <entry>5.2.3</entry>
       <entry>
        Fue agregado el parámetro <parameter>double_encode</parameter>.
       </entry>
      </row>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Fue agregado el parámetro <parameter>charset</parameter>.
       </entry>
      </row>
      <row>
       <entry>4.0.3</entry>
       <entry>
        Fue agregado el parámetro <parameter>flags</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>htmlentities</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$str = "A 'quote' is <b>bold</b>";

// Produce: A 'quote' is &lt;b&gt;bold&lt;/b&gt;
echo htmlentities($str);

// Produce: A &#039;quote&#039; is &lt;b&gt;bold&lt;/b&gt;
echo htmlentities($str, ENT_QUOTES);
?>
]]>
    </programlisting>
   </example>
  </para>
  
  <para>
   <example>
    <title>Uso de <constant>ENT_IGNORE</constant></title>
    <programlisting role="php">
<![CDATA[
<?php
$str = "\x8F!!!";

// Produce un string vacío
echo htmlentities($str, ENT_QUOTES, "UTF-8");

// Produce "!!!"
echo htmlentities($str, ENT_QUOTES | ENT_IGNORE, "UTF-8");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>html_entity_decode</function></member>
    <member><function>get_html_translation_table</function></member>
    <member><function>htmlspecialchars</function></member>
    <member><function>nl2br</function></member>
    <member><function>urlencode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
