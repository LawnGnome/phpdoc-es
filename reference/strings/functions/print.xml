<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: javi Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.print" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <refnamediv>
    <refname>print</refname>
    <refpurpose>Muestra una cadena</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>int</type><methodname>print</methodname>
      <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Muestra el valor de <parameter>cadena</parameter> por la salida definida. 
	 Siempre devuelve el valor <literal>1</literal>.
    </simpara>
    <para>
     <function>print</function> no es realmente una funci&oacute;n (es una 
     sentencia del lenguaje) de modo que no se requiere el uso de 
     los par&eacute;ntesis.
    </para>
    <para>
     <example>
      <title>Ejemplos de <function>print</function></title>
      <programlisting role="php">
<![CDATA[
<?php
print("Hola mundo");

print "print() tambien funciona sin parentesis.";

print "Este texto se extiende
por varias lineas. Los saltos de linea
tambien se envian";

print "Este texto se extiende\npor varias lineas. Los saltos de linea\ntambien se envian.";

print "Para escapar caracteres, se debe indicar \"de esta forma\".";

// Se pueden usar variables dentro de una sentencia echo
$saludo = "que tal";
$despedida = "hasta luego";

print "hola, $saludo"; // hola, que tal

// Tambien se pueden usar arrays
$cadena = array("valor" => "saludo desde un array");

print "Esto es un {$cadena['valor']} "; // Esto es un saludo desde un array

// Si se emplean comillas simples, se muestra el nombre de la variable, no su valor
print 'hola, $saludo'; // hola, $saludo

// Si no se anade ningun caracter, tambien es posible emplear echo para mostrar el valor de las variables
print $saludo;             // que tal
print $saludo,$despedida;  // que talhasta luego

print <<<FIN
Este texto utiliza una sintaxis especial que 
permite mostrar varias lineas de texto.
La etiqueta que indica el final del bloque de texto 
(y que en este caso es "FIN") debe aparecer en una 
linea que contenga solamente el valor de la etiqueta 
y un caracter de punto y coma (ni siquiera puede 
contener espacios en blanco). 
FIN;
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
	 En el siguiente articulo de la "FAQTs Knowledge Base" <link xlink:href="&url.echo-print;">&url.echo-print;
     </link> puede encontrarse una argumentaci&oacute;n sobre las diferencias 
	 entre las funciones <function>print</function> y <function>echo</function>.
    </simpara>
    
    &note.language-construct;
    
    <simpara>
     Vea tambi&eacute;n <function>echo</function>, <function>printf</function> 
     y <function>flush</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
