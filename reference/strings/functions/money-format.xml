<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.12 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.money-format" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>money_format</refname>
  <refpurpose>Da formato a un número como una cadena de moneda</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>money_format</methodname>
   <methodparam><type>string</type><parameter>formato</parameter></methodparam>
   <methodparam><type>float</type><parameter>numero</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>money_format</function> devuelve una versión con formato de
   <parameter>numero</parameter>. Esta función envuelve la función de la
   biblioteca de C <function>strfmon</function>, con la diferencia de que
   esta implementación convierte solo un número a la vez.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>formato</parameter></term>
     <listitem>
      <para>
       La especificación de formato consiste de la siguiente secuencia:
       <itemizedlist>
        <listitem><para>un caracter <literal>%</literal></para></listitem>
        <listitem><para>banderas opcionales</para></listitem>
        <listitem><para>un ancho de campo opcional</para></listitem>
        <listitem><para>precisión de izquierda opcional</para></listitem>
        <listitem><para>precisión de derecha opcional</para></listitem>
        <listitem><para>un caracter de conversión, requerido</para></listitem>
       </itemizedlist>
      </para>
      <formalpara>
       <title>Banderas</title>
       <para>
        Una o más de las siguientes banderas opcionales pueden ser usadas:
        <variablelist>
         <varlistentry>
          <term><literal>=</literal><replaceable>f</replaceable></term>
          <listitem>
           <para>
            El caracter <literal>=</literal> seguido de un caracter (byte
            sencillo) <replaceable>f</replaceable> que será usado como el
            caracter de relleno numérico. Es caracter de relleno
            predeterminado es el espacio.
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term><literal>^</literal></term>
          <listitem>
           <para>
            Deshabilitar el uso de caracteres de agrupamiento (tal y como
            estén definidos según la localidad actual).
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term><literal>+</literal> o <literal>(</literal></term>
          <listitem>
           <para>
            Especifica el estilo de formato para números positivos y
            negativos. Si se usa <literal>+</literal>, los equivalentes de
            <literal>+</literal> y <literal>-</literal> en la localidad
            actual serán usados. Si se usa <literal>(</literal>, las
            cantidades negativas estarán ubicadas entre paréntesis. Si no se
            da especificación alguna, el valor por defecto es
            <literal>+</literal>.
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term><literal>!</literal></term>
          <listitem>
           <para>
            Elimina el símbolo de moneda de la cadena de salida.
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term><literal>-</literal></term>
          <listitem>
           <para>
            Si se encuentra presente, hará que todos los campos estén
            justificados a izquierda (con relleno a la derecha), en
            contraste al comportamiento predeterminado que hace que los
            campos estén justificados a derecha (con relleno a la
            izquierda).
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </para>
      </formalpara>
      <formalpara>
       <title>Ancho de campo</title>
       <para>
        <variablelist>
         <varlistentry>
          <term><replaceable>w</replaceable></term>
          <listitem>
           <para>
            Una cadena de dígito decimal que especifica un ancho de campo
            mínimo. El campo será justificado a derecha a menos que la
            bandera <literal>-</literal> sea usada. El valor predeterminado
            es 0 (cero).
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </para>
      </formalpara>
      <formalpara>
       <title>Precisión de izquierda</title>
       <para>
        <variablelist>
         <varlistentry>
          <term><literal>#</literal><replaceable>n</replaceable></term>
          <listitem>
           <para>
            El número máximo de dígitos (<replaceable>n</replaceable>) a
            esperar a la izquerda del caracter decimal (p. ej. el punto
            decimal). Usualmente se usa para mantener la salida con formato
            alineada en las mismas columnas, usando el caracter de relleno
            si el número de dígitos es menor que
            <replaceable>n</replaceable>. Si el número de dígitos real es
            mayor que <replaceable>n</replaceable>, entonces esta
            especificación es ignorada.
           </para>
           <para>
            Si no se ha suprimido el agrupamiento usando la bandera
            <literal>^</literal>, los separadores de agrupamiento serán
            insertados antes de que los caracteres de relleno (si los hay)
            sean agregados. Los separadores de agrupamiento no serán
            aplicados sobre los caracteres de relleno, aun si el caracter de
            relleno es un dígito.
           </para>
           <para>
            Para asegurar el alineamiento, cualquier caracter que aparezca
            antes o después del número en la salida con formato, tales como
            los símbolos de moneda o de signo, son rellenados en tanto sea
            necesario con caracteres de espacio para hacer que sus formatos
            positivo y negativo tengan una misma longitud.
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </para>
      </formalpara>
      <formalpara>
       <title>Precisión de derecha</title>
       <para>
        <variablelist>
         <varlistentry>
          <term><literal>.</literal><replaceable>p</replaceable></term>
          <listitem>
           <para>
            Un punto seguido del número de dígitos
            (<replaceable>p</replaceable>) después del caracter decimal. Si
            el valor de <replaceable>p</replaceable> es 0 (cero), el
            caracter decimal y los dígitos a su derecha serán omitidos. Si
            no se incluye ninguna precisión de derecha, el valor
            predeterminado será determinado por la localidad en uso. La
            cantidad a la cual se está dando formato es redondeada al número
            de dígitos especificado antes del formato.
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </para>
      </formalpara>
      <formalpara>
       <title>Caracteres de conversión</title>
       <para>
        <variablelist>
         <varlistentry>
          <term><literal>i</literal></term>
          <listitem>
           <para>
            El número recibe formato de acuerdo al formato de moneda
            internacional de la localidad (p.ej. para la localidad de USA:
            USD 1,234.56).
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term><literal>n</literal></term>
          <listitem>
           <para>
            El número recibe formato de acuerdo al formato de moneda
            nacional de la localidad (p.ej. para la localidad de_DE:
            DM1.234,56).
           </para>
          </listitem>
         </varlistentry>
         <varlistentry>
          <term><literal>%</literal></term>
          <listitem>
           <para>
            Devuelve el caracter <literal>%</literal>.
           </para>
          </listitem>
         </varlistentry>
        </variablelist>
       </para>
      </formalpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>numbero</parameter></term>
     <listitem>
      <para>
       El número a ser formateado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la cadena con formato. Los caracteres antes y después de la
   cadena de formato serán regresados sin modificar.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    La función <function>money_format</function> está definida solo si el
    sistema tiene la capacidad de llamar a strfmon. Por ejemplo, Windows no
    tiene soporte para esta función, así que
    <function>money_format</function> no se encuentra definida en Windows.
   </para>
  </note>
  <note>
   <para>
    La categoría <constant>LC_MONETARY</constant> de los parámetros de la
    localidad, afecta el comportamiento de esta función. Use
    <function>setlocale</function> para establecer la localidad
    predeterminada apropiada antes de usar esta función.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>money_format</function></title>
    <para>
     Usaremos diferentes localidades y especificaciones de formato para
     ilustrar el uso de esta función.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$numero = 1234.56;

// imprimamos el formato internacional para la localidad en_US
setlocale(LC_MONETARY, 'en_US');
echo money_format('%i', $numero) . "\n";
// USD 1,234.56

// Formato nacional italiano con 2 decimales
setlocale(LC_MONETARY, 'it_IT');
echo money_format('%.2n', $numero) . "\n";
// L. 1.234,56

// Uso de un número negativo
$numero = -1234.5672;

// Formato nacional de US, usando () para números negativos
// y 10 dígitos para la precisión de derecha
setlocale(LC_MONETARY, 'en_US');
echo money_format('%(#10n', $numero) . "\n";
// ($        1,234.57)

// Un formato similar al anterior, agregando el uso de 2 dígitos de
// precisión de derecha y '*' como caracter de relleno
echo money_format('%=*(#10.2n', $numero) . "\n";
// ($********1,234.57)

// Justifiquemos a izquierda, con 14 posiciones de ancho, 8 dígitos de
// precisión de izquierda, 2 de precisión de derecha, sin caracter de
// agrupamiento y usando el formato internacional de la localidad
// de_DE.
setlocale(LC_MONETARY, 'de_DE');
echo money_format('%=*^-14#8.2i', 1234.56) . "\n";
// DEM 1234,56****

// Agreguemos un poco de información antes y despues de la especificación
// de conversión
setlocale(LC_MONETARY, 'en_GB');
$fmt = 'El valor final es %i (después de un descuento de 10%%)';
echo money_format($fmt, 1234.56) . "\n";
// El valor final es GBP 1,234.56 (después de un descuento de 10%)

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>setlocale</function></member>
    <member><function>sscanf</function></member>
    <member><function>sprintf</function></member>
    <member><function>printf</function></member>
    <member><function>number_format</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
