<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.11 Maintainer: javi Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.substr">
   <refnamediv>
    <refname>substr</refname>
    <refpurpose>Devuelve parte de una cadena</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>string</type><methodname>substr</methodname>
      <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
      <methodparam><type>int</type><parameter>comienzo</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>longitud</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>substr</function> devuelve la porci&oacute;n de <parameter>cadena</parameter> 
     especificada por los par&aacute;metros <parameter>comienzo</parameter> 
     y <parameter>longitud</parameter>.
    </para>
    <para>
     Si <parameter>comienzo</parameter> es positivo o 0, la cadena devuelta
     comenzar&aacute; en dicho car&aacute;cter de <parameter>cadena</parameter> (los caracteres 
	 empiezan a contarse en cero). Por ejemplo, en la cadena '<literal>abcdef</literal>', el 
	 car&aacute;cter en la posici&oacute;n <literal>0</literal> es '<literal>a</literal>', el 
     car&aacute;cter en la posici&oacute;n <literal>2</literal> es '<literal>c</literal>', y as&iacute; 
	 sucesivamente.
    </para>
    <example>
     <title>Ejemplo b&aacute;sico de <function>substr</function></title>
     <programlisting role="php">
<![CDATA[
<?php
echo substr('abcdef', 1);     // bcdef
echo substr('abcdef', 1, 3);  // bcd
echo substr('abcdef', 0, 4);  // abcd
echo substr('abcdef', 0, 8);  // abcdef
echo substr('abcdef', -1, 1); // f

// El acceso a los caracteres dentro de una cadena se puede
// realizar directamente mediante las llaves
$string = 'abcdef';
echo $string{0};                 // a
echo $string{3};                 // d
echo $string{strlen($string)-1}; // f

?>
]]>
     </programlisting>
    </example>
    <para>
     Si <parameter>comienzo</parameter> es negativo, la cadena devuelta 
     comenzar&aacute; en dicha posici&oacute;n contando desde el final de 
     <parameter>cadena</parameter>.
    </para>
    <example>
     <title>Ejemplo de valores negativos de <parameter>comienzo</parameter></title>
     <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", -1);    // devuelve "f"
$rest = substr("abcdef", -2);    // devuelve "ef"
$rest = substr("abcdef", -3, 1); // devuelve "d"
?>
]]>
     </programlisting>
    </example>
    <para>
     Si se especifica <parameter>longitud</parameter> y es positiva, la 
     cadena devuelta terminar&aacute; como m&aacute;ximo <parameter>longitud</parameter> caracteres 
     tras el <parameter>comienzo</parameter>. Si la longitud de la cadena es inferior 
	 o igual al valor del comienzo, la funci&oacute;n devuelve &false;.
    </para>
    <para>
     Si se especifica <parameter>longitud</parameter> y es negativa, se omitir&aacute;n  
	 <parameter>longitud</parameter> caracteres desde el final de la cadena (despu&eacute;s 
	 de que la posici&oacute;n de comienzo se haya determinado cuando el <parameter>comienzo</parameter> 
	 es negativo).
	 Si <parameter>comienzo</parameter> indica una posici&oacute;n mas all&aacute; de estos l&iacute;mites,
	 se devuelve una cadean vac&iacute;a.
    </para>
    <example>
     <title>Ejemplo de uso de una <parameter>longitud</parameter> negativa</title>
     <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", 0, -1);  // returns "abcde"
$rest = substr("abcdef", 2, -1);  // returns "cde"
$rest = substr("abcdef", 4, -4);  // returns ""
$rest = substr("abcdef", -3, -1); // returns "de"
?>
]]>
     </programlisting>
    </example>
    <para>
     Vea tambi&eacute;n <function>strrchr</function>,
     <function>substr_replace</function>,
     <function>ereg</function>,
     <function>trim</function>,
     <function>mb_substr</function> y 
     <function>wordwrap</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
