<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/strings.xml, last change in rev 1.7 -->
<!-- last change to 'levenshtein' in en/ tree in rev 1.12 -->
  <refentry id="function.levenshtein">
   <refnamediv>
    <refname>levenshtein</refname> 
    <refpurpose>
     Calcula la distancia Levenshtein entre dos cadenas
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
     <methodsynopsis>
      <type>int</type><methodname>levenshtein</methodname>
      <methodparam><type>string</type><parameter>cad1</parameter></methodparam>
      <methodparam><type>string</type><parameter>cad2</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esta función devuelve la distancia Levenshtein entre las dos
     cadenas argumento, ó -1 si alguna de las cadenas tiene más
     de 255 caracteres.
    </para>
    <para>
     La distancia Levenshtein se define como el mínimo número de
     caracteres que se tienen que sustituir, insertar o borrar
     para transformar <parameter>cad1</parameter> en
     <parameter>cad2</parameter>. La complejidad del algoritmo es
     <literal>O(m*n)</literal>, donde <literal>n</literal> y
     <literal>m</literal> son las longitudes de <parameter>cad1</parameter>
     y <parameter>cad2</parameter> (bastante bueno si se la compara con
     <function>similar_text</function>, que es O(max(n,m)**3), pero
     aún es cara).
    </para>
    <para>
     Vea también <function>soundex</function>,
     <function>similar_text</function> y
     <function>metaphone</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
