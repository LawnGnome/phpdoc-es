<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: javi Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.strtok" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>strtok</refname>
    <refpurpose>Divide una cadena en elementos</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>string</type><methodname>strtok</methodname>
      <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
      <methodparam><type>string</type><parameter>elemento</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>strtok</function> se usa para dividir una cadena en 
	 elementos m&aacute;s peque&ntilde;os, en los que cada elemento 
	 est&aacute; delimitado por cualquier car&aacute;cter del par&aacute;metro 
	 <parameter>elemento</parameter>.
	 Es decir, que si tiene una cadena como "Esta es una cadena 
     de ejemplo", podr&iacute;a dividirla en palabras individuales utilizando 
     el espacio como divisor.
     <example>
      <title>Ejemplo de <function>strtok</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$cadena = "Esta es\tuna cadena de\nejemplo";
/* Se emplea el tabulador y la nueva linea como elementos divisores  */
$tok = strtok ($cadena," ");

while ($tok !== false) {
    echo "Palabra=$tok<br />";
    $tok = strtok(" \n\t");
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     N&oacute;tese que s&oacute;lo la primera llamada a strtok utiliza el argumento 
     cadena. Cada llamada subsiguiente necesita s&oacute;lo el divisor a 
     utilizar, puesto que ella guarda la posici&oacute;n actual en la cadena.
     Para comenzar de nuevo o para dividir otra cadena, simplemente 
     llame a strtok con el argumento de cadena y se inicializar&aacute;.
     N&oacute;tese que puede poner m&uacute;ltiples divisores como par&aacute;metro. La 
     cadena ser&aacute; dividida cuando alguno de los caracteres del argumento 
     sea hallado.
    </para>
    <para>
     El comportamiento de la funci&oacute;n cuando encuentra un trozo vac&iacute;o 
	 se modific&oacute; en la versi&oacute;n PHP 4.1.0. El anterior comportamiento 
	 devolv&iacute;a una cadena vac&iacute;a y el nuevo (y correcto) comportamiento 
	 consiste en no tener en cuenta esa parte de la cadena:
     <example>
      <title>Anterior comportamietno de <function>strtok</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$primer_token  = strtok('/algo', '/');
$segundo_token = strtok('/');
var_dump($primer_token, $segundo_token);
?>
]]>
      </programlisting>
      <para>
       Salida:
      </para>
      <screen>
<![CDATA[
    string(0) ""
    string(9) "algo"
]]>
      </screen>
     </example>
     <example>
      <title>Nuevo comportamiento de <function>strtok</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$primer_token  = strtok('/algo', '/');
$segundo_token = strtok('/');
var_dump($primer_token, $segundo_token);
?>
]]>
      </programlisting>
      <para>
       Salida:
      </para>
      <screen>
<![CDATA[
    string(9) "algo"
    bool(false)
]]>
      </screen>
     </example>
    </para>
    &return.falseproblem;
    <para>
     Vea tambi&eacute;n <function>split</function> y
     <function>explode</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
