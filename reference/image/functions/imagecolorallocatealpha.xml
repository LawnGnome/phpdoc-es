<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 305144 Maintainer: yago Status: ready -->
<refentry xml:id="function.imagecolorallocatealpha" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagecolorallocatealpha</refname>
  <refpurpose>Asigna un color para una imagen</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>imagecolorallocatealpha</methodname>
   <methodparam><type>resource</type><parameter>image</parameter></methodparam>
   <methodparam><type>int</type><parameter>red</parameter></methodparam>
   <methodparam><type>int</type><parameter>green</parameter></methodparam>
   <methodparam><type>int</type><parameter>blue</parameter></methodparam>
   <methodparam><type>int</type><parameter>alpha</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagecolorallocatealpha</function> se comporta de forma idéntica a
   <function>imagecolorallocate</function> con la adición del parámetro de
   transparencia <parameter>alpha</parameter>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>red</parameter></term>
     <listitem>
      <para>
       Valor del componente rojo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>green</parameter></term>
     <listitem>
      <para>
       Valor del componente verde.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>blue</parameter></term>
     <listitem>
      <para>
       Valor del componente azul.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>alpha</parameter></term>
     <listitem>
      <para>
       Un valor entre <literal>0</literal> y <literal>127</literal>.
       <literal>0</literal> indica completamente opaco mientras que
       <literal>127</literal> indica completamente transparente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   Los parámetros de colores son enteros entre 0 y 255 o hexadecimales
   entre 0x00 y 0xFF.
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un identificador de color o &false; si la asignación falló.
  </para>
  &return.falseproblem;
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Antes de 5.1.3</entry>
       <entry>
        Devuelve -1 si la asignación falló.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo usando <function>imagecolorallocatealpha</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$tamaño = 300;
$imagen=imagecreatetruecolor($tamaño, $tamaño);

// algo para obtener un fondo blanco con borde negro
$fondo = imagecolorallocate($imagen, 255, 255, 255);
$borde = imagecolorallocate($imagen, 0, 0, 0);
imagefilledrectangle($imagen, 0, 0, $tamaño - 1, $tamaño - 1, $fondo);
imagerectangle($imagen, 0, 0, $tamaño - 1, $tamaño - 1, $borde);

$amarillo_x = 100;
$amarillo_y = 75;
$rojo_x     = 120;
$rojo_y     = 165;
$azul_x     = 187;
$azul_y     = 125;
$radio      = 150;

// asignar colores con valores alfa
$amarillo = imagecolorallocatealpha($imagen, 255, 255, 0, 75);
$rojo     = imagecolorallocatealpha($imagen, 255, 0, 0, 75);
$azul     = imagecolorallocatealpha($imagen, 0, 0, 255, 75);

// dibujar 3 círculos solapados
imagefilledellipse($imagen, $amarillo_x, $amarillo_y, $radio, $radio, $amarillo);
imagefilledellipse($imagen, $rojo_x, $rojo_y, $radio, $radio, $rojo);
imagefilledellipse($imagen, $azul_x, $azul_y, $radio, $radio, $azul);

// ¡no olvide imprimir la cabecera correcta!
header('Content-type: image/png');

// y finalmente, imprimir el resultado
imagepng($imagen);
imagedestroy($imagen);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Salida del ejemplo : Ejemplo usando imagecolorallocatealpha()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagecolorallocatealpha.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &note.gd.2;
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imagecolorallocate</function></member>
    <member><function>imagecolordeallocate</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
