<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.12 $ -->
<!-- EN-Revision: 1.33 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.getimagesize" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>getimagesize</refname>
  <refpurpose>Obtener el tamaño de una imagen</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>getimagesize</methodname>
   <methodparam><type>string</type><parameter>nombre_archivo</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">info_imagen</parameter></methodparam>
  </methodsynopsis>
  <para>
   La función <function>getimagesize</function> determinará el tamaño de
   cualquier archivo de imagen dado y devuelve las dimensiones junto con el
   tipo de archivo y una cadena de texto de altura/ancho a ser usada en una
   etiqueta <acronym>HTML</acronym> <tag>IMG</tag> corriente y el
   tipo de contenido <acronym>HTTP</acronym> correspondiente.
  </para>
  <para>
   <function>getimagesize</function> puede también devolver un poco más de
   información en el parámetro <parameter>info_imagen</parameter>.
  </para>
  <note>
   <simpara>
    Note que JPC y JP2 son capaces de tener componentes con diferentes
    profundidades de bits. En este caso, el valor para "bits" es el de la
    profundidad de bits más alta encontrada. Asimismo, los archivos JP2
    pueden contener múltiples secuencias de código JPEG 2000. En este caso,
    <function>getimagesize</function> devuelve los valores para la primera
    secuencia de código que encuentra en la raíz del archivo.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>nombre_archivo</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>info_imagen</parameter></term>
     <listitem>
      <para>
       Este parámetro opcional le permite extraer algunos datos extendidos
       del archivo de imagen. Actualmente, devolverá los diferentes
       marcadores APP de <acronym>JPG</acronym> como una matriz asociativa.
       Algunos programas usan estos marcadores para embeber información de
       texto en imágenes. Un uso muy común es el embeber información <link
       xlink:href="&url.iptc;">IPTC</link> en el marcador APP13. Puede usar la
       función <function>iptcparse</function> para convertir el marcador
       APP13 binario hacia algo legible.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una matriz con 5 elementos.
  </para>
  <para>
   Los índices 0 y 1 contienen respectivamente el ancho y la altura de la
   imagen.
  </para>
  <note>
   <para>
    Puede que algunos formatos no contengan una imagen o que contengan
    múltiples imágenes. En estos casos, puede que
    <function>getimagesize</function> no sea capaz de determinar el tamaño
    de la imagen apropiadamente. <function>getimagesize</function> devolverá
    cero como valor de ancho y altura en tales casos.
   </para>
  </note>
  <para>
   El índice 2 es una de las constantes <literal>IMAGETYPE_XXX</literal> que
   indica el tipo de imagen.
  </para>
  <para>
   El índice 3 es una cadena de texto con el valor <literal>height="yyy"
   width="xxx"</literal> apropiado que puede ser usado directamente en una
   etiqueta IMG.
  </para>
  <para>
   <literal>mime</literal> es el tipo MIME  correspondiente de la imagen.
   Esta información puede ser usada para despachar imágenes con las
   cabeceras HTTP <literal>Content-type</literal> correctas:
   <example>
    <title>getimagesize() y los tipos MIME</title>
    <programlisting role="php">
<![CDATA[
<?php
$tam = getimagesize($nombre_archivo);
$da = fopen($nombre_archivo, "rb");
if ($tam && $da) {
  header("Content-type: {$tam['mime']}");
  fpassthru($da);
  exit;
} else {
  // error
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <literal>channels</literal> será 3 para imágenes RGB y 4 para imágenes
   CMYK. <literal>bits</literal> es el número de bits para cada color. Sin
   embargo, para algunos tipos de imagen, la presencia de estos valores
   puede ser un poco confusa. Como un ejemplo, <acronym>GIF</acronym>
   siempre usa 3 canales por píxel, pero el número de bits por píxel no
   puede ser calculado para un <acronym>GIF</acronym> animado con una tabla
   de colores global.
  </para>
  <para>
   En caso de fallos, se devuelve &false;.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si es imposible acceder a la imagen en
   <parameter>nombre_archivo</parameter>, o si no es una imagen válida,
   <function>getimagesize</function> generará un error de nivel
   <constant>E_WARNING</constant>. En caso de un error de lectura,
   <function>getimagesize</function> generarrá un error de nivel
   <constant>E_NOTICE</constant>.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.3</entry>
       <entry>
        Los errores de lectura generados por esta función disminuyeron su
        nivel a <constant>E_NOTICE</constant>, de su nivel anterior
        <constant>E_WARNING</constant>.
       </entry>
      </row>
      <row>
       <entry>4.3.2</entry>
       <entry>
        Apareció es soporte para <acronym>JPC</acronym>,
        <acronym>JP2</acronym>, <acronym>JPX</acronym>,
        <acronym>JB2</acronym>, <acronym>XBM</acronym>, y
        <acronym>WBMP</acronym>.
       </entry>
      </row>
      <row>
       <entry>4.3.2</entry>
       <entry>
        El soporte para JPEG 2000 fue agregado para el parámetro
        <parameter>info_imagen</parameter>.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        <literal>bits</literal> y <literal>channels</literal> están
        presentes para otros tipos de imágenes también.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Se agregó <literal>mime</literal>.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Se agregó el soporte para <acronym>SWC</acronym>.
       </entry>
      </row>
      <row>
       <entry>4.2.0</entry>
       <entry>
        Se agregó el soporte para <acronym>TIFF</acronym>.
       </entry>
      </row>
      <row>
       <entry>4.0.5</entry>
       <entry>
        Se agregó el soporte para URL.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>getimagesize (archivo)</title>
    <programlisting role="php">
<![CDATA[
<?php
list($ancho, $altura, $tipo, $atr) = getimagesize("img/bandera.jpg");
echo "<img src=\"img/bandera.jpg\" $atr alt=\"ejemplo de getimagesize()\" />";
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>getimagesize (URL)</title>
    <programlisting role="php">
<![CDATA[
<?php
$tam = getimagesize("http://www.example.com/gifs/logo.gif");

// si el nombre de archivo contiene un espacio, codificarlo apropiadamente
$tam = getimagesize("http://www.example.com/gifs/lo%20go.gif");

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>getimagesize() devolviendo IPTC</title>
    <programlisting role="php">
<![CDATA[
<?php
$tam = getimagesize("imagen_prueba.jpg", $info);
if (isset($info["APP13"])) {
    $iptc = iptcparse($info["APP13"]);
    var_dump($iptc);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    La función <function>getimagesize</function> no requiere de la
    biblioteca de imágenes GD.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>image_type_to_mime_type</function></member>
    <member><function>exif_imagetype</function></member>
    <member><function>exif_read_data</function></member>
    <member><function>exif_thumbnail</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
