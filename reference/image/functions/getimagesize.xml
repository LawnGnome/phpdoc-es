<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.23 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/image.xml, last change in rev 1.36 -->
 <refentry id="function.getimagesize">
  <refnamediv>
   <refname>getimagesize</refname>
   <refpurpose>Obtener el tama&ntilde;o de una imagen</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descripci&oacute;n</title>
    <methodsynopsis>
     <type>array</type><methodname>getimagesize</methodname>
     <methodparam><type>string</type><parameter>nombre_archivo</parameter></methodparam>
     <methodparam choice="opt"><type>array</type><parameter>info_imagen</parameter></methodparam>
    </methodsynopsis>
   <para>
    La funci&oacute;n <function>getimagesize</function>
    determinar&aacute; el tama&ntilde;o de cualquier archivo de
    imagen <acronym>GIF</acronym>, <acronym>JPG</acronym>,
    <acronym>PNG</acronym>, <acronym>SWF</acronym>, 
    <acronym>SWC</acronym>, <acronym>PSD</acronym>, 
    <acronym>TIFF</acronym>, <acronym>BMP</acronym>, 
    <acronym>IFF</acronym>, <acronym>JP2</acronym>,
    <acronym>JPX</acronym>, <acronym>JB2</acronym>,
    <acronym>JPC</acronym>, <acronym>XBM</acronym>, o
    <acronym>WBMP</acronym> y devuelve las dimensiones, junto con el
    tipo de archivo y una cadena de texto de altura/ancho a ser usada
    al interior de una
    etiqueta <acronym>HTML</acronym> <literal>IMG</literal> normal.
   </para>
   <para>
    Si no es posible acceder a la imagen
    <parameter>nombre_archivo</parameter>, o si no es una imagen
    v&aacute;lida, <function>getimagesize</function> devolver&aacute;
    &false; y generar&aacute; un error de nivel
    <varname>E_WARNING</varname>.
   </para>
   <note>
    <para>
     El soporte para <acronym>JPC</acronym>, <acronym>JP2</acronym>,
     <acronym>JPX</acronym>, <acronym>JB2</acronym>,
     <acronym>XBM</acronym>, y <acronym>WBMP</acronym> apareci&oacute;
     en PHP 4.3.2. El soporte para <acronym>SWC</acronym> existe a
     partir de PHP 4.3.0 y el soporte <acronym>TIFF</acronym> fue
     agregado en PHP 4.2.0
    </para>
   </note>
   <note>
    <simpara>
     El soporte de JPEG 2000 fue agregado en PHP 4.3.2. Note que JPC y
     JP2 son capaces de tener componentes con diferentes profundidades
     de bit. En este caso, el valor para "bits" es la profundidad de
     bit m&aacute;s alta encontrada. Asimismo, los archivos JP2 pueden
     contener m&uacute;ltiples secuencias de c&oacute;digo JPEG
     2000. En este caso, <function>getimagesize</function> devuelve
     los valores para la primera secuencia de c&oacute;digo que
     encuentra en la ra&iacute;z del archivo.
    </simpara>
   </note>
   <note>
    <simpara>
     La funci&oacute;n <function>getimagesize</function> no requiere
     de la biblioteca de im&aacute;genes GD.
    </simpara>
   </note>

   <para>
    Devuelve una matriz con 4 elementos. El &iacute;ndice 0 contiene
    el ancho de la imagen en p&iacute;xeles. El &iacute;ndice 1
    contiene la altura. El &iacute;ndice 2 es una bandera que indica
    el tipo de imagen: 1 = GIF, 2 = JPG, 3 = PNG, 4 = SWF, 5 = PSD, 6
    = BMP, 7 = TIFF(orden de bytes intel), 8 = TIFF(orden de bytes
    motorola), 9 = JPC, 10 = JP2, 11 = JPX, 12 = JB2, 13 = SWC, 14 =
    IFF, 15 = WBMP, 16 = XBM. Estos valores corresponden a las
    constantes IMAGETYPE que fueron agregadas en PHP 4.3.0. El
    &iacute;ndice 3 es una cadena de texto con el valor correcto
    height="yyy" width="xxx" que puede ser usado directamente en una
    etiqueta IMG.
    <example>
     <title>getimagesize (archivo)</title>
     <programlisting role="php">
<![CDATA[
<?php
list($ancho, $altura, $tipo, $atr) = getimagesize("img/bandera.jpg");
echo "<img src=\"img/bandera.jpg\" $attr alt=\"ejemplo de getimagesize()\" />";
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    El soporte para URLs fue agregado en PHP 4.0.5
    <example>
     <title>getimagesize (URL)</title>
     <programlisting role="php">
<![CDATA[
<?php 
$tam = getimagesize("http://www.example.com/gifs/logo.gif");

// si el nombre de archivo contiene un espacio, codificarlo apropiadamente
$tam = getimagesize("http://www.example.com/gifs/lo%20go.gif");

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Con las im&aacute;genes <acronym>JPG</acronym> se devuelven dos
    &iacute;ndices adicionales: <literal>channels</literal> y
    <literal>bits</literal>. <literal>channels</literal> ser&aacute; 3
    para fotos RGB y 4 para fotos CMYK. <literal>bits</literal> es el
    n&uacute;mero de bits por cada color.
   </para>
   <para>
    A partir de PHP 4.3.0, <literal>bits</literal> y
    <literal>channels</literal> se encuentran presentes para otros
    tipos de im&aacute;genes tambi&eacute;n. Sin embargo, la presencia
    de &eacute;stos valores puede ser un poco confusa. Como un
    ejemplo, <acronym>GIF</acronym> siempre usa 3 canales por
    p&iacute;xel, pero el n&uacute;mero de bits por p&iacute;xel no
    puede ser calculado para un
    <acronym>GIF</acronym> animado con una tabla de colores global.
   </para>
   <para>
    Puede que algunos formatos no contengan una imagen o que contengan
    m&uacute;ltiples im&aacute;genes. En estos casos, puede que
    <function>getimagesize</function> no sea capaz de determinar el
    tama&ntilde;o de la imagen
    apropiadamente. <function>getimagesize</function> devolver&aacute;
    cero como valor de ancho y altura en tales casos.
   </para>
   <para>
    A partir de PHP 4.3.0, <function>getimagesize</function> devuelve
    tambi&eacute;n un par&aacute;metro adicional,
    <literal>mime</literal>, que corresponde con el tipo MIME de la
    imagen. Esta informaci&oacute;n puede ser usada para despachar
    im&aacute;genes con las cabeceras HTTP Content-type correctas:
    <example>
     <title>getimagesize() y los tipos MIME</title>
     <programlisting role="php">
<![CDATA[
<?php
$tam = getimagesize($nombre_archivo);
$da=fopen($nombre_archivo, "rb");
if ($tam && $da) {
  header("Content-type: {$tam['mime']}");
  fpassthru($da);
  exit;
} else {
  // error
}
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    El par&aacute;metro opcional <parameter>info_imagen</parameter> le
    permite extraer algunos datos extendidos desde el archivo de
    imagen. En la actualidad, esto devolver&aacute; los diferentes
    marcadores APP de <acronym>JPG</acronym> como una matriz
    asociativa. Algunos programas usan estos marcadores para embeber
    informaci&oacute;n de texto en im&aacute;genes. Un uso muy
    com&uacute;n es el embeber informaci&oacute;n
    <acronym>IPTC</acronym> <ulink url="&url.iptc;">&url.iptc;</ulink>
    en el marcador APP13. Puede usar la funci&oacute;n
    <function>iptcparse</function> para convertir el marcador APP13
    binario hacia algo legible.
   </para>
   <para>
    <example>
     <title>getimagesize() devolviendo IPTC</title>
     <programlisting role="php">
<![CDATA[
<?php
$tam = getimagesize("imagen_prueba.jpg", $info);
if (isset($info["APP13"])) {
    $iptc = iptcparse($info["APP13"]);
    var_dump($iptc);
}
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Vea tambi&eacute;n <function>image_type_to_mime_type</function>,
    <function>exif_imagetype</function>,
    <function>exif_read_data</function> y
    <function>exif_thumbnail</function>.
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
