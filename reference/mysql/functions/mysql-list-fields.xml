<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: n/a Maintainer: baoengb Status: ready -->
<!-- splitted from ./es/functions/mysql.xml, last change in rev 1.1 -->
<!-- last change to 'mysql-list-fields' in en/ tree in rev 1.2 -->
  <refentry xml:id="function.mysql-list-fields" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysql_list_fields</refname>
    <refpurpose>Lista los campos del resultado de MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
     <methodsynopsis>
     <type>int</type><methodname>mysql_list_fields</methodname>
     <methodparam><type>cadena</type><parameter>base_de_datos</parameter></methodparam>
     <methodparam><type>cadena</type><parameter>tabla</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>dentificador_de_enlace</parameter></methodparam>
     </methodsynopsis>
     <note>
      <para>
       La función <function>mysql_list_fields</function> es onsoleta. 
       Es preferible usar <function>mysql_query</function> para ejecutar una 
       sentencia SQL <literal>SHOW COLUMNS FROM table [LIKE 'name']</literal>.
      </para>
     </note>
    <para>
     <function>mysql_list_fields</function> lista información
     sobre la tabla. Los argumentos son la base de datos y el nombre de 
     la tabla. Se devuelve un puntero que puede ser usado por las 
     funciones <function>mysql_field_flags</function>,
     <function>mysql_field_len</function>,
     <function>mysql_field_name</function>, y
     <function>mysql_field_type</function>.
    </para>
    <para>
     Un identificador de resultado es un entero positivo. La función
     devuelve -1 si se produce un error. Una cadena de caracteres describiendo
     el error será introducida en <literal>$phperrmsg</literal>, y a menos que
     la función sea llamada como <literal>@mysql()</literal> el literal 
     del error también será desplegado.
    </para>
    <para>
     <example>
      <title>Ejemplo alternativo a mysql_list_fields</title>
      <programlisting role="php">
<![CDATA[
<?php
 $result = mysql_query("SHOW COLUMNS FROM sometable");
 if (!$result) {
     echo 'Could not run query: ' . mysql_error();
     exit;
 }
 if (mysql_num_rows($result) > 0) {
     while ($row = mysql_fetch_assoc($result)) {
         print_r($row);
     }

?>
]]>
      </programlisting>
      <para>
       El ejemplo anterior producirá una salida similar a:
      </para>
      <screen>
<![CDATA[
 Array
 (
     [Field] => id
     [Type] => int(7)
     [Null] =>
     [Key] => PRI
     [Default] =>
     [Extra] => auto_increment
 )
 Array
 (
     [Field] => email
     [Type] => varchar(100)
     [Null] =>
     [Key] =>
     [Default] =>
     [Extra] =>
 )
]]>
      </screen>
     </example>
    </para>
    <para>
     Por razones de compatibilidad puede usarse también 
     <function>mysql_listfields</function>. Sin embargo esta funció es 
     obsoleta.
    </para>
    <para>
     Vea también
     <function>mysql_field_flags</function>,
     <function>mysql_info</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
