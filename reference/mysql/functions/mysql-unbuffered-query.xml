<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.9 Maintainer: lboshell Status: ready -->
<refentry id="function.mysql-unbuffered-query">
 <refnamediv>
  <refname>mysql_unbuffered_query</refname>
  <refpurpose>Env&iacute;a una consulta SQL a MySQL, sin recuperar ni
  colocar en b&uacute;fer las filas de resultado</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>mysql_unbuffered_query</methodname>
   <methodparam><type>string</type><parameter>consulta</parameter></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>id_enlace</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>mysql_unbuffered_query</function> env&iacute;a la
   <parameter>consulta</parameter> SQL a MySQL, sin recuperar ni
   colocar en b&uacute;fer las filas de resultado
   autom&aacute;ticamente, como <function>mysql_query</function> lo
   hace. Por una parte, esto ahorra una considerable cantidad de
   memoria con las consultas SQL que producen conjuntos grandes de
   resultados. Por otra parte, usted puede empezar a trabajar con el
   conjunto de resultado inmediatamente despu&eacute;s de que la
   primera fila ha sido recuperada: no necesita esperar hasta que la
   consulta SQL completa haya sido ejecutada. Cuando se usan
   m&uacute;ltiples conexiones con la BD, necesita indicar el
   par&aacute;metro opcional <parameter>id_enlace</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>consulta</parameter></term>
     <listitem>
      <para>
       Una consulta SQL
      </para>
     </listitem>
    </varlistentry>
    &mysql.linkid.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Para sentencias SELECT, SHOW, DESCRIBE o EXPLAIN,
   <function>mysql_query</function> devuelve un valor
   <type>resource</type> en caso de &eacute;xito, o &false; si ocurre
   un error.
  </para>
  <para>
   Para otro tipo de sentencias SQL, UPDATE, DELETE, DROP, etc,
   <function>mysql_query</function> devuelve &true; en caso de
   &eacute;xito o &false; si ocurre un error.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Los beneficios de <function>mysql_unbuffered_query</function>
    vienen por un precio: No puede usar
    <function>mysql_num_rows</function> ni
    <function>mysql_data_seek</function> en un conjunto de resultados
    devuelto por
    <function>mysql_unbuffered_query</function>. Tambi&eacute;n
    tendr&aacute; que recuperar todas las filas de resultado de una
    consulta SQL sin b&uacute;fer, antes de poder enviar una nueva
    consulta SQL a MySQL.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_query</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
