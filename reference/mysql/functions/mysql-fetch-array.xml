<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: baoengb Status: ready -->
<!-- splitted from ./es/functions/mysql.xml, last change in rev 1.1 -->
  <refentry xml:id="function.mysql-fetch-array" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysql_fetch_array</refname>
    <refpurpose>
     Extrae la fila de resultado como una matriz asociativa, una matriz 
     numérica o ambas
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
     <methodsynopsis>
     <type>array</type><methodname>mysql_fetch_array</methodname>
     <methodparam><type>int</type><parameter>id_resultado</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>
       tipo_de_resultado
      </parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve una matriz que corresponde a la sentencia extraida, o falso
     si no quedan más filas.
    </para>
    <para>
     <function>mysql_fetch_array</function> es una versión extendida
     de <function>mysql_fetch_row</function>.  Además de guardar los
     datos en el índice numérico de la matriz, guarda tambi&eacute;n los 
     datos en los índices asociativos, usando el nombre de campo como clave.
    </para>
    <para>
     Si dos o más columnas del resultado tienen el mismo nombre de
     campo, la última columna toma la prioridad. Para acceder a la(s)
     otra(s) columna(s) con el mismo nombre, se debe escificar el indice 
     numerico o definir un alias para la columna. En columnas con alias, 
     usted no puede acceder al contenido con el nombre original de la columna
     (usando <literal>'field'</literal> en este ejemplo)
     <example>
      <title>Consulta con campos repetidos usando alias</title>
      <programlisting role="sql">
<![CDATA[
SELECT table1.field AS foo, table2.field AS bar FROM table1, table2
]]>
      </programlisting>
     </example>
    </para>
    <para>
     La función <function>mysql_fetch_array</function> no es
     significativemente mas lenta que <function>mysql_fetch_row</function>,
     sin embargo tiene un valor añadido importante.
    </para>
    <para>
     El segundo argumento opcional <parameter>tipo_de_resultado</parameter>
     en <function>mysql_fetch_array</function> es una constante y puede tomar
     los siguientes valores: <constant>MYSQL_ASSOC</constant>,
     <constant>MYSQL_NUM</constant>, y <constant>MYSQL_BOTH</constant>.
     Esta caraterística fue agregada en PHP 3.0.7. 
     <constant>MYSQL_BOTH</constant>
    </para>
    <para>
     Usando <constant>MYSQL_BOTH</constant>, usted obtendrá una matrix 
     con índices asociativos y numéricos. Usando 
     <constant>MYSQL_ASSOC</constant>, usted solo tendrá índices 
     asociativos (tal como funciona <function>mysql_fetch_assoc</function>),
     usando <constant>MYSQL_NUM</constant>, solo obtendrá los 
     índices numéricos (tal como si fuera 
     <function>mysql_fetch_row</function>).
    </para>
    <para>
    &database.field-case;
    &database.fetch-null;
    </para>
    <para>
     Vea también
     <function>mysql_fetch_row</function>,
     <function>mysql_fetch_assoc</function>,
     <function>mysql_data_seek</function>, y
     <function>mysql_query</function>.
    </para>
    <para>
     <example>
      <title>
       <function>mysql_fetch_array</function> con 
       <constant>MYSQL_NUM</constant>
      </title>
      <programlisting role="php">
<![CDATA[
<?php
mysql_connect("localhost", "mysql_user", "mysql_password") or
    die("Could not connect: " . mysql_error());
mysql_select_db("mydb");

$result = mysql_query("SELECT id, name FROM mytable");

while ($row = mysql_fetch_array($result, MYSQL_NUM)) {
    printf("ID: %s  Name: %s", $row[0], $row[1]);  
}

mysql_free_result($result);
?>
]]>
      </programlisting>
     </example>
     <example>
      <title>
       <function>mysql_fetch_array</function> con 
       <constant>MYSQL_ASSOC</constant>
      </title>
      <programlisting role="php">
<![CDATA[
<?php
mysql_connect("localhost", "mysql_user", "mysql_password") or
    die("Could not connect: " . mysql_error());
mysql_select_db("mydb");

$result = mysql_query("SELECT id, name FROM mytable");

while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {
    printf("ID: %s  Name: %s", $row["id"], $row["name"]);
}

mysql_free_result($result);
?>
]]>
      </programlisting>
     </example>
     <example>
      <title>
       <function>mysql_fetch_array</function> con
       <constant>MYSQL_BOTH</constant></title>
      <programlisting role="php">
<![CDATA[
<?php
mysql_connect("localhost", "mysql_user", "mysql_password") or
    die("Could not connect: " . mysql_error());
mysql_select_db("mydb");

$result = mysql_query("SELECT id, name FROM mytable");

while ($row = mysql_fetch_array($result, MYSQL_BOTH)) {
    printf ("ID: %s  Name: %s", $row[0], $row["name"]);
}

mysql_free_result($result);
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
