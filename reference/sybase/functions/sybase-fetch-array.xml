<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: n/a Maintainer: baoengb Status: ready -->
<!-- splitted from ./en/functions/sybase.xml, last change in rev 1.2 -->
  <refentry xml:id="function.sybase-fetch-array" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>sybase_fetch_array</refname>
    <refpurpose>Obtiene una fila como una matriz</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>matriz</type><methodname>sybase_fetch_array</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
     </methodsynopsis>
    <para>
     Regresa una matriz que corresponde a la fila obtenida, o &false; si no 
     hay m&aacute;s filas.
    </para>
    <para>
     <function>sybase_fetch_array</function> es una versi&oacute;n extendida de 
     <function>sybase_fetch_row</function>. Adem&aacute;s de almacenar los datos 
     en &iacute;ndices num&eacute;ricos en la matriz resultante, tambi&acute;n 
     almacena los datos en &iacute;ndices asociativos, usando los nombres de los 
     campos como llaves.
    </para>
    <para>
     Una cosa importate es que usando <function>sybase_fetch_array</function> 
     no es significativamente m&aacute;s lento que usar <function>sybase_fetch_row</function>,
     mientras que si provee un valor agregado significativo.
    </para>
    <note>
     <para> 
      Cuando se seleccionan campos con nombres id&eacute;nticos (por ejemplo, 
      en una uni&oacute;n), los &iacute;ndices asociativos tendr&aacute;n agregado 
      un n&uacute;mero secuencial, vea el ejemplo para m&aacute;s detalles.
     </para>
    </note>
    <para>
     <example>
      <title>Nombres de campo id&eacute;nticos</title>
      <programlisting role="php">
<![CDATA[
<?php
    $dbh = sybase_connect('SYBASE', '', '');
    $q = sybase_query('SELECT * FROM p, a WHERE p.person_id= a.person_id');
    var_dump(sybase_fetch_array($q));
    sybase_close($dbh);
?>
]]>
      </programlisting>
      <para>
       El ejemplo anterior producir&aacute; la siguiente salida (asumiendo 
       que las dos tablas solo tienen una columna llamada "person_id" cada una):
      </para>
      <screen>
<![CDATA[
array(4) {
  [0]=>
  int(1)
  ["person_id"]=>
  int(1)
  [1]=>
  int(1)
  ["person_id1"]=>
  int(1)
}
]]>
      </screen>
     </example>
    </para>
    <para>
     Vea tambi&eacute;n
     <function>sybase_fetch_row</function>,
     <function>sybase_fetch_assoc</function>,
     <function>sybase_fetch_object</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
