<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 299461 Maintainer: seros Status: ready -->

<refentry xml:id="datetime.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DateTime::__construct</refname>
  <refpurpose>Devuelve un nuevo objeto DateTime</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>DateTime::__construct</methodname>
   <methodparam choice="opt"><type>string</type><parameter>time</parameter><initializer>"now"</initializer></methodparam>
   <methodparam choice="opt"><type>DateTimeZone</type><parameter>timezone</parameter><initializer>&null;</initializer></methodparam>
  </constructorsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type>DateTime</type><methodname>date_create</methodname>
   <methodparam choice="opt"><type>string</type><parameter>time</parameter><initializer>"now"</initializer></methodparam>
   <methodparam choice="opt"><type>DateTimeZone</type><parameter>timezone</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve un nuevo objeto DateTime.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>time</parameter></term>
    <listitem>
     <para>&date.formats.parameter;</para>
     <para>
      Introduzca &null; aquí para obtener el momento actual cuando se use
      el parámetro <parameter>$timezone</parameter>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>timezone</parameter></term>
    <listitem>
     <para>
      Un objeto <classname>DateTimeZone</classname> que representa la
      zona horaria deseada.
     </para>
     <para>
      Si se omite <parameter>$timezone</parameter>,
      se usará la zona horaria actual.
     </para>
     <note>
      <para>
       El parámetro <parameter>$timezone</parameter>
       y la zona horaria actuales se ignoran cuando el
       parámetro <parameter>$time</parameter>
       es una fecha UNIX (p.ej. <literal>@946684800</literal>)
       o especifica una zona horaria
       (p.ej. <literal>2010-01-28T15:00:00+02:00</literal>).
      </para>
     </note>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   evuelve una nueva instancia de DateTime.
   &return.falseforfailure.style.procedural;
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Emite <classname>Exception</classname> en caso de error.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>DateTime::__construct</function></title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
try {
    $fecha = new DateTime('2000-01-01');
} catch (Exception $e) {
    echo $e->getMessage();
    exit(1);
}

echo $fecha->format('Y-m-d');
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
$fecha = date_create('2000-01-01');
if (!$fecha) {
    $e = date_get_last_errors();
    foreach ($e['errors'] as $error) {
        echo "$error\n";
    }
    exit(1);
}

echo date_format($fecha, 'Y-m-d');
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
2000-01-01
]]>
   </screen>
  </example>
  <example>
   <title>Complejidades de <function>DateTime::__construct</function></title>
   <programlisting role="php">
<![CDATA[
<?php
// Fecha/hora especificadas en la zona horaria de su ordenador.
$fecha = new DateTime('2000-01-01');
echo $fecha->format('Y-m-d H:i:sP') . "\n";

// Fecha/hora especificadas en la zona horaria especificada.
$fecha = new DateTime('2000-01-01', new DateTimeZone('Pacific/Nauru'));
echo $fecha->format('Y-m-d H:i:sP') . "\n";

// Fecha/hora actuales en la zona horaria de su ordenador.
$fecha = new DateTime();
echo $fecha->format('Y-m-d H:i:sP') . "\n";

// Fecha/hora actuales en la zona horaria especificada.
$fecha = new DateTime(null, new DateTimeZone('Pacific/Nauru'));
echo $fecha->format('Y-m-d H:i:sP') . "\n";

// Usando una fecha UNIX.  Nótese el resultado en la zona horaria UTC.
$fecha = new DateTime('@946684800');
echo $fecha->format('Y-m-d H:i:sP') . "\n";

// Valores no existentes que se exceden.
$fecha = new DateTime('2000-02-30');
echo $fecha->format('Y-m-d H:i:sP') . "\n";
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
2000-01-01 00:00:00-05:00
2000-01-01 00:00:00+12:00
2010-04-24 10:24:16-04:00
2010-04-25 02:24:16+12:00
2000-01-01 00:00:00+00:00
2000-03-01 00:00:00-05:00
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>DateTime::createFromFormat</function></member>
   <member><function>DateTimeZone::__construct</function></member>
   <member>Configuración ini de <link linkend="ini.date.timezone">date.timezone</link></member>
   <member><function>date_default_timezone_set</function></member>
   <member><function>DateTime::getLastErrors</function></member>
  </simplelist>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
