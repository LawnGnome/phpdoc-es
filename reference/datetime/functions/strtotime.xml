<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 312829 Maintainer: chuso Status: ready -->
<!-- splitted from ./en/functions/datetime.xml, last change in rev 1.8 -->
<refentry xml:id="function.strtotime" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtotime</refname>
  <refpurpose>Convierte una descripción de fecha/hora textual en Inglés a una fecha Unix</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strtotime</methodname>
   <methodparam><type>string</type><parameter>time</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>now</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Esta función espera que se proporcione una cadena que contenga un formato de fecha
   en Inglés US e intentará convertir ese formato a una fecha Unix (el
   número de segundos desde el 1 de Enero del 1970 00:00:00 UTC), relativa
   a la marca de tiempo dada en <parameter>now</parameter>, o la marca de tiempo
   actual si <parameter>now</parameter> no se proporciona.
  </simpara>
  <para>
   Esta función usará la variable de entorno <envar>TZ</envar> (si está
   disponible) para calcular la marca de tiempo. A partir de PHP 5.1.0 hay maneras
   más sencillas de definir la zona horaria que se usa en todas las funciones de fecha/hora.
   Ese proceso se explica en la página de la función
   <function>date_default_timezone_get</function>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>time</parameter></term>
     <listitem>
      <para>&date.formats.parameter;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>now</parameter></term>
     <listitem>
      <para>
       La marca de tiempo que se usa como base para el cálculo de las
       fechas relativas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una marca de tiempo si se tuvo éxito, &false; si no. Antes de PHP 5.1.0,
   esta funcion devolvía <literal>-1</literal> si fallaba.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  
  &date.timezone.errors.description;
  
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Antes de PHP 5.3.0, <literal>24:00</literal> no era un formato válido y
        <function>strtotime</function> devolvía &false;.
       </entry>
      </row>
      <row>
       <entry>5.2.7</entry>
       <entry>
        En PHP 5 anterior a 5.2.7, las peticiones de una incidencia de un
        día de la semana dado en un mes donde ese día de la semana era el primer día
        del mes, añadía incorrectamente una semana a la marca de tiempo devuelta.
        Esto ha sido corregido en 5.2.7 y versiones
        posteriores.
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Ahora devuelve &false; si falla, en vez
        de <literal>-1</literal>.
       </entry>
      </row>
      
      &date.timezone.errors.changelog;
      
      <row>
       <entry>5.0.2</entry>
       <entry>
        En PHP 5 hasta 5.0.2, <literal>"now"</literal> y otros
        momentos relativos son computados erróneamente como la medianoche de
        hoy. Esto difiere de otras versiones donde es
        computado como el momento actual.
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Los microsegundos comenzaron a estar permitidos, pero son ignorados.
       </entry>
      </row>
      <row>
       <entry>4.4.0</entry>
       <entry>
        En versiones de PHP antariores a 4.4.0, <literal>"next"</literal> es computado
        incorrectamente como +2. Una solución típica para esto es usar
        <literal>"+1"</literal>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>strtotime</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo strtotime("now"), "\n";
echo strtotime("10 September 2000"), "\n";
echo strtotime("+1 day"), "\n";
echo strtotime("+1 week"), "\n";
echo strtotime("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime("next Thursday"), "\n";
echo strtotime("last Monday"), "\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Comprobar si falla</title>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = 'No Válida';

// antes de PHP 5.1.0 se debería de comparar con -1, en vez de con false
if (($timestamp = strtotime($cadena)) === false) {
    echo "La cadena ($cadena) es falsa";
} else {
    echo "$cadena == " . date('l dS \o\f F Y h:i:s A', $timestamp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Si el número del año se especifica en un formato de dos dígitos, los valores
    entre 00-69 son mapeados a 2000-2069 y 70-99 a 1970-1999. Vea las notas de abajo
    para las posibles diferencias en sistemas de 32 bit (las fechas posibles podrían terminar en
    2038-01-19 03:14:07).
   </para>
  </note>
  <note>
   <para>
    El rango válido de una marca de tiempo es típicamente desde Fri, 13 Dec
    1901 20:45:54 UTC a Tue, 19 Jan 2038 03:14:07 UTC. (Estas son
    las fechas que se corresponden con los valores máximo y mínimo de
    un entero con signo de 32 bit.)
    Adicionalmente, no todas las plataformas soportan marcas de tiempo negativas, por lo tanto
    el rango de la fecha puede estar limitado a fechas no anteriores a la época Unix. Esto
    significa que, p.ej., las fechas anteriores al 1 de Enero del 1970 no funcionarán en Windows,
    en algunas distribuciones de Linux, y en otros pocos sistemas operativos. PHP 5.1.0 y
    versiones posteriores superan esta limitación.
   </para>
   <para>
    Para PHP versión 64-bit, el rángo válido de fechas es en la práctica infinito,
    ya que 64 bits pueden representar aproximadamente 293.000 millones de años en
    cualquier dirección.
   </para>
  </note>
  <note>
   <para>
    Las fechas en los formatos <literal>m/d/y</literal> o <literal>d-m-y</literal>
    no son ambiguas al observar el separador entre los distintos
    componentes: si el separador es una barra (<literal>/</literal>), se asume
    el formato americano <literal>m/d/y</literal>; mientras que si el separador es un
    guión (<literal>-</literal>) o un punto (<literal>.</literal>), se asume
    el formato europeo <literal>d-m-y</literal>.
   </para>
   <para>
    Para evitar esta ambigüedad potencial es mejor usar fechas ISO 8601
    (<literal>YYYY-MM-DD</literal>) o
    <methodname>DateTime::createFromFormat</methodname> cuando sea posible.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DateTime::createFromFormat</methodname></member>
    <member><function>checkdate</function></member>
    <member><function>strptime</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
