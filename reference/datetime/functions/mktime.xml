<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.16 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/datetime.xml, last change in rev 1.2 -->
<refentry id="function.mktime">
 <refnamediv>
  <refname>mktime</refname>
  <refpurpose>Obtener la marca de tiempo Unix de una
  fecha</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Descripci&oacute;n</title>
  <methodsynopsis>
   <type>int</type><methodname>mktime</methodname>
   <methodparam choice="opt"><type>int</type><parameter>hora</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>minuto</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>segundo</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mes</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>dia</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>anyo</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>es_dst</parameter></methodparam>
  </methodsynopsis>
  <para>
   <emphasis>Advertencia:</emphasis> Note el extra&ntilde;o orden de
   los argumentos, que difiere del orden de los argumentos en una
   llamada t&iacute;pica a mktime() en Unix, la cual no se presta para
   que se omitan par&aacute;metros de derecha a izquierda (vea
   m&aacute;s adelante). Es un error com&uacute;n mezclar estos
   valores en un script.
  </para>
  <para>
   Devuelve la marca de tiempo Unix que corresponde a los argumentos
   dados. Esta marca de tiempo es un entero largo que contiene el
   n&uacute;mero de segundos entre el Epoch Unix (Enero 1 1970 00:00:00
   GMT) y la hora especificada.
  </para>
  <para>
   Es posible dejar sin definir argumentos en orden de derecha a
   izquierda; cualquier argumento omitido ser&aacute; definido con el
   valor actual de acuerdo a la fecha y hora local.
  </para>
  <para>
   Es posible definir <parameter>es_dst</parameter> a 1 si la hora
   est&aacute; dentro del tiempo de ahorro de luz diurna (DST), 0 si
   no lo es, o -1 (el valor predeterminado) si se desconoce si la hora
   est&aacute; dentro del tiempo de ahorro de luz diurna o no. Si se
   desconoce, PHP intenta averiguarlo por s&iacute; solo. Esto puede
   causar resultados inesperados (pero no incorrectos).
  </para>
  <para>
   Algunas veces los resultados son inv&aacute;lidos si DST
   est&aacute; habilitado en el sistema en el que est&aacute;
   corriendo PHP o el valor de <parameter>es_dst</parameter> es 1. Si
   DST est&aacute; habilitado en p.ej. 2:00, todas las horas entre las
   2:00 y las 3:00 son inv&aacute;lidas y <function>mktime</function>
   devuelve un valor indefinido (por lo general negativo). Algunos
   sistemas (p.ej. Solaris 8) habilita DST a media noche as&iacute;
   que la hora 0:30 del d&iacute;a cuando DST est&aacute; habilitado
   se eval&uacute;a como 23:30 del d&iacute;a anterior.
  </para>
  <note>
   <para>
    <parameter>es_dst</parameter> se agreg&oacute; en 3.0.10.
   </para>
  </note>
  <para>
   <function>mktime</function> es &uacute;til cuando se realiza
   aritm&eacute;tica y validaciones de fechas, ya que calcula
   autom&aacute;ticamente el valor correcto para entradas fuera de
   rango. Por ejemplo, cada una de las siguientes l&iacute;neas
   produce la cadena "Jan-01-1998".
   <example>
    <title>Ejemplo de <function>mktime</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo date("M-d-Y", mktime(0, 0, 0, 12, 32, 1997));
echo date("M-d-Y", mktime(0, 0, 0, 13, 1, 1997));
echo date("M-d-Y", mktime(0, 0, 0, 1, 1, 1998));
echo date("M-d-Y", mktime(0, 0, 0, 1, 1, 98));
?>
]]>
    </programlisting>
   </example>
   <parameter>anyo</parameter> puede ser un valor de dos o cuatro
   d&iacute;gitos; los valores entre 0-69 se convierten a 2000-2069 y
   70-99 a 1970-1999 (en sistemas en donde time_t es un entero de
   32bits con signo, como ocurre com&uacute;nmente hoy en d&iacute;a,
   el rango v&aacute;lido para <parameter>anyo</parameter> es un valor
   entre 1901 y 2038).
  </para>
  <para>
   <note>
    <title>Windows</title>
    <simpara>
     Las marcas de tiempo negativas no son soportadas bajo ninguna
     versi&oacute;n conocida de Windows. Por lo tanto el rango de
     a&ntilde;os v&aacute;lido incluye &uacute;nicamente 1970 a 2038.
    </simpara>
   </note>
  </para>
  <para>
   El &uacute;ltimo d&iacute;a de cualquier mes dado puede ser
   expresado como el d&iacute;a "0" del siguiente mes, no el
   d&iacute;a -1. Los dos ejemplos siguientes producir&aacute;n la
   cadena "El &uacute;ltimo dia en Feb 2000 es: 29".
   <example>
    <title>El &uacute;ltimo d&iacute;a del mes siguiente</title>
    <programlisting role="php">
<![CDATA[
<?php
$ultimodia = mktime(0, 0, 0, 3, 0, 2000);
echo strftime("El ultimo dia en Feb 2000 es: %d", $ultimodia);

$ultimodia = mktime(0, 0, 0, 4, -31, 2000);
echo strftime("El ultimo dia en Feb 2000 es: %d", $ultimodia);
?>
]]>
    </programlisting>
   </example>
  </para>
  <simpara>
   Una fecha con el a&ntilde;o, mes y d&iacute;a igual a cero es
   considerada inv&aacute;lida (de otra forma se interpretar&iacute;a
   como 30.11.1999, lo cual ser&iacute;a un comportamiento
   extra&ntilde;o).
  </simpara>
  <para>
   Vea tambi&eacute;n <function>gmmktime</function>,
   <function>date</function> y <function>time</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
