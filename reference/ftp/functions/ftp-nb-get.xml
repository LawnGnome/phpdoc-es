<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.11 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.ftp-nb-get" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ftp_nb_get</refname>
  <refpurpose>Recupera un archivo desde el servidor FTP y lo
   escribe sobre un archivo local (modo no-bloqueo)</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>ftp_nb_get</methodname>
   <methodparam><type>resource</type><parameter>secuencia_ftp</parameter></methodparam>
   <methodparam><type>string</type><parameter>archivo_local</parameter></methodparam>
   <methodparam><type>string</type><parameter>archivo_remoto</parameter></methodparam>
   <methodparam><type>int</type><parameter>modo</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>pos_continuacion</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>ftp_nb_get</function> recupera un archivo remoto desde el
   servidor FTP, y lo almacena en un archivo local.
  </para>
  <para>
   La diferencia entre &eacute;sta funci&oacute;n y
   <function>ftp_get</function> es que &eacute;sta funci&oacute;n
   recupera el archivo asincr&oacute;nicamente, de modo que su
   programa puede realizar otras operaciones mientras el archivo
   est&aacute; siendo descargado.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>secuencia_ftp</parameter></term>
     <listitem>
      <para>
       El identificador de enlace de la conexi&oacute;n FTP.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>archivo_local</parameter></term>
     <listitem>
      <para>
       La ruta del archivo local (ser&aacute; sobrescrito si el
       archivo ya existe).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>archivo_remoto</parameter></term>
     <listitem>
      <para>
       La ruta del archivo remoto.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>modo</parameter></term>
     <listitem>
      <para>
       El modo de transferencia. Debe ser
       <constant>FTP_ASCII</constant> o
       <constant>FTP_BINARY</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>pos_continuacion</parameter></term>
     <listitem>
      <para></para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve <constant>FTP_FAILED</constant> o
   <constant>FTP_FINISHED</constant> o
   <constant>FTP_MOREDATA</constant>.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>ftp_nb_get</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Iniciar la descarga
$ret = ftp_nb_get($mi_conexion, "test", "README", FTP_BINARY);
while ($ret == FTP_MOREDATA) {

   // Haga lo que quiera
   echo ".";

   // Continuar la descarga...
   $ret = ftp_nb_continue($mi_conexion);
}
if ($ret != FTP_FINISHED) {
   echo "Hubo un error descargando el archivo...";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Reanudando una descarga con
    <function>ftp_nb_get</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Iniciar
$ret = ftp_nb_get($mi_conexion, "test", "README", FTP_BINARY,
                  filesize("test"));

// O: $ret = ftp_nb_get($mi_conexion, "test", "README",
//                      FTP_BINARY, FTP_AUTORESUME);
while ($ret == FTP_MOREDATA) {

   // Haga lo que quiera
   echo ".";

   // Continuar descargando...
   $ret = ftp_nb_continue($mi_conexion);
}
if ($ret != FTP_FINISHED) {
   echo "Hubo un error descargando el archivo...";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>
     Reanudar una descarga en la posici&oacute;n 100 sobre un archivo
     nuevo con <function>ftp_nb_get</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

// Deshabilitar Autoseek
ftp_set_option($mi_conexion, FTP_AUTOSEEK, FALSE);

// Iniciar
$ret = ftp_nb_get($mi_conexion, "archivo_nuevo", "README", FTP_BINARY, 100);
while ($ret == FTP_MOREDATA) {

   /* ... */

   // Continuar descarga...
   $ret = ftp_nb_continue($mi_conexion);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   En el ejemplo anterior, <filename>archivo_nuevo</filename> es 100
   bytes m&aacute;s peque&ntilde;a que <filename>README</filename> en
   el servidor FTP, ya que comenzamos la lectura en la posici&oacute;n
   100. Si no deshabilitamos <constant>FTP_AUTOSEEK</constant>, los
   primeros 100 bytes de <filename>archivo_nuevo</filename>
   ser&iacute;an <literal>'\0'</literal>.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ftp_nb_fget</function></member>
    <member><function>ftp_nb_continue</function></member>
    <member><function>ftp_fget</function></member>
    <member><function>ftp_get</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
