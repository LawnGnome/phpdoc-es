<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/xml.xml, last change in rev 1.2 -->
<!-- last change to 'xml-set-processing-instruction-handler' in en/ tree in rev 1.2 -->
  <refentry id="function.xml-set-processing-instruction-handler">
   <refnamediv>
    <refname>xml_set_processing_instruction_handler</refname>
    <refpurpose>
     Establece el gestor de instrucciones de procesado (PI) 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>int</type><methodname>xml_set_processing_instruction_handler</methodname>
     <methodparam><type>int</type><parameter>parser</parameter></methodparam>
     <methodparam><type>string</type><parameter>handler</parameter></methodparam>
     </methodsynopsis>
    <para>
     Establece ela funci&oacute;n de gesti&oacute;n de instrucciones
     de procesado (PI) para el analizador XML <parameter>parser</parameter>.
     <parameter>handler</parameter> es un string que contiene el nombre de
     una funci&oacute;n que debe existir cuando
     <function>xml_parse</function> es llamada por
     <parameter>parser</parameter>.
    </para>
    <para>
     Una instrucci&oacute;n de procedado tiene el siguiente formato:
     <informalexample>
      <programlisting>&lt;?
       <replaceable>target</replaceable> 
       <replaceable>data</replaceable>?>
      </programlisting>
     </informalexample>
     Puedes poner c&oacute;digo PHP en esa etiqueta, pero ten en cuenta
     una limitaci&oacute;n: en una PI XML, la etiqueta de fin de la PI
     (<literal>?&gt;</literal>) no puede ser citada, por lo que
     esta secuencia de caracteres no deber&iacute;a aparecer en el
     c&oacute;digo PHP que insertes con las PIs en documentos XML.
     Si lo hace, el resto del c&oacute;digo PHP, as&iacute; como la
     etiqueta de fin de PI "real", ser&aacute;n tratados como datos
     de caracteres.
    </para>
    <para>
     La funci&oacute;n nombrada en <parameter>handler</parameter> debe aceptar
     tres par&aacute;metros:
     <methodsynopsis>
      <methodname><replaceable>handler</replaceable></methodname>
      <methodparam><type>int</type><parameter>parser</parameter></methodparam>
      <methodparam><type>string</type><parameter>target</parameter></methodparam>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
     </methodsynopsis>
     <variablelist>
      <varlistentry>
       <term><parameter>parser</parameter></term> <listitem><simpara>
       El primer par&aacute;metro, <replaceable>parser</replaceable>, es una
       referencia al analizador XML que llama al gestor.</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>target</parameter></term>
       <listitem><simpara>
	 El segundo par&aacute;metro, <parameter>target</parameter>, contiene
	 el objetivo PI.</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>data</parameter></term>
       <listitem><simpara>
	 El tercer par&aacute;metro, <parameter>data</parameter>, contiene
	 los datos PI.</simpara></listitem>
      </varlistentry>
     </variablelist></para>
    <para>
     Si una funci&oacute;n gestora se establece como la cadena vac&iacute;a,
     o &false;, el gestor en cuesti&oacute;n se deshabilita.
    </para>
    <para>
     Se devuelve &true; si se estableci&oacute; el gestor, &false; si
     <parameter>parser</parameter> no es un analizador.
    </para>
    <para>
     En la actualidad no hay soporte para gestores objeto/m&eacute;todo.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
