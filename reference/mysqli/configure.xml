<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 318290 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<section xml:id="mysqli.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 
 &reftitle.install;
 
 <para>
  La extensión <literal>mysqli</literal> se introdujo en PHP versión
  5.0.0. El Driver Nativo MySQL se introdujo en PHP version 5.3.0.
 </para>
 
 <section xml:id="mysqli.installation.linux">
  
  <title>Instalación en Linux</title>
  
  <para>
   Las distribuciones más comunes de Unix incluyen versiones binarias de PHP que
   pueden ser instalados. Aunque estas versiones binarias son típicamente
   construidos con soporte para extensiones de MySQL habilitada, las bibliotecas
   de extensión puede ser necesario instalarlo utilizando un paquete adicional.
   Compruebe el gestor de paquetes que viene con su distribución elegida para
   disponibilidad.
  </para>
  
  <para>
   Si su distribución de Unix no viene con un paquete binario de PHP con la
   extensión <literal>mysqli</literal> disponible, tendrá que compilar PHP desde
   código fuente. La compilación de PHP desde el código fuente le permite
   especificar las extensiones de MySQL que desea utilizar, así como la elección
   de la biblioteca cliente para cada extensión.
  </para>
  
  <para>
   La opción recomendada es el Controlador Nativio de MySQL, ya que sus
   resultados mejoran el rendimiento y dan acceso a características no
   disponibles al usar la Biblioteca Cliente de MySQL. Consúlte
   <link linkend="mysqli.overview.mysqlnd">¿Qué es el Controlador Nativo de MySQL
    para PHP?</link> para una visión general breve de las ventajas del Controlador Nativo
   de MySQL.
  </para>
  
  <para>
   <literal>/path/to/mysql_config</literal> representa la ubicación del
   programa <literal>mysql_config</literal> que viene con el Servidor
   MySQL.
  </para>
  
  <table>
   <title>Matriz de soporte en tiempo de compilación de mysqli</title>
   <tgroup cols="5">
    <thead>
     <row>
      <entry>PHP &Version;</entry>
      <entry>&Default;</entry>
      <entry>&ConfigureOptions;: <link linkend="mysqlnd.overview">mysqlnd</link></entry>
      <entry>&ConfigureOptions;: <literal>libmysql</literal></entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>5.0.x, 5.1.x, 5.2.x</entry>
      <entry>libmysql</entry>
      <entry>&NotAvailable;</entry>
      <entry><option role="configure">--with-mysqli=/path/to/mysql_config</option></entry>
      <entry></entry>
     </row>
     <row>
      <entry>5.3.x</entry>
      <entry>libmysql</entry>
      <entry><option role="configure">--with-mysqli=mysqlnd</option></entry>
      <entry><option role="configure">--with-mysqli=/path/to/mysql_config</option></entry>
      <entry>mysqlnd ahora es soportada</entry>
     </row>
     <row>
      <entry>5.4.x</entry>
      <entry>mysqlnd</entry>
      <entry><option role="configure">--with-mysqli</option></entry>
      <entry><option role="configure">--with-mysqli=/path/to/mysql_config</option></entry>
      <entry>mysqlnd ahora es el predeterminado</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  
  <para>
   Observe que es posible mezclar libremente extensiones de MySQL y bibliotecas
   cliente. Por ejemplo, es posible habilitar la extensión de MySQL
   para usar la Biblioteca Cliente de MySQL (libmysql), mientras se configura la
   extensión <literal>mysqli</literal> para usar el Controlador Nativo de MySQL.
   No obstante, son posibles todas las permutaciones de extensiones y bibliotecas
   cliente.
  </para>
  
  <para>
   El siguiente ejemplo compila la extensión MySQL para usar la Biblioteca Cliente
   de MySQL, y las extensiones <literal>mysqli</literal> y PDO MYSQL
   para usar el Controlador Nativo de MySQL:
  </para>
  
  <programlisting role="shell">
   ./configure --with-mysql=/usr/bin/mysql_config  \
   --with-mysqli=mysqlnd \
   --with-pdo-mysql=mysqlnd
   [other options]
  </programlisting>
  
 </section>
 
 <section xml:id="mysqli.installation.windows">
  
  <title>Instalación en sistemas Windows</title>
  
  <para>
   En Windows, PHP es más comúnmente instalado usando el instalador
   binario.
  </para>
  
  <section>
   
   <title>PHP 5.0, 5.1, 5.2</title>
   
   <para>
    Una vez que se ha instalado PHP, se debe ajustar la configuración
    para habilitar <literal>mysqli</literal> y especificar la biblioteca
    cliente que se va a utilizar.
   </para>
   
   <para>
    La extensión <literal>mysqli</literal> no está
    habilitada por defecto, por lo que el archivo DLL <filename>php_mysqli.dll</filename>
    debe habilitarse al interior de &php.ini;. Para hacer esto usted necesita
    encontrar el archivo &php.ini; (normalmente se encuentra en
    <filename>c:\php</filename>), y asegúrese de eliminar el comentario
    (punto y coma) desde el inicio de la línea de
    <literal>extension=php_mysqli.dll</literal>, en la sección marcada como
    <literal>[PHP_MYSQLI]</literal>.
   </para>
   
   <para>
    Además, si desea utilizar la biblioteca de cliente MySQL con
    <literal>mysqli</literal>, debe asegurarse de que PHP puede acceder al
    archivo de la biblioteca de cliente. La biblioteca de cliente MySQL se
    incluye como un archivo de nombre <filename>libmysql.dll</filename> en la
    distribución de PHP en Windows. Este archivo debe estar disponible en la
    variable de entorno de sistema de Windows <envar>PATH</envar>, de modo que
    puede ser cargado con éxito. Véase la FAQ titulada
    "<link linkend="faq.installation.addtopath">Cómo agrego mi directorio PHP a
    la variable PATH en Windows</link>" para obtener información sobre cómo hacer
    esto. Copiar <filename>libmysql.dll</filename> al directorio de sistema de
    Windows (normalmente <filename>C:\Windows\System</filename>) funciona,
    pues el directorio de sistema esta por defecto en el <envar>PATH</envar> del sistema.
    Sin embargo, esta práctica está totalmente desaconsejada.
   </para>
   
   <para>
    Al igual que con cualquier otra extensión de PHP (como
    <filename>php_mysqli.dll</filename>), la directiva de PHP
    <link linkend="ini.extension-dir">extension_dir</link> se debe de establecer
    en el directorio donde están ubicadas las extensiones de PHP. Consulte
    tambien el <link linkend="install.windows.manual">Manual de instalación de
    Windows</link>. Un ejemplo de valor de <literal>extension_dir</literal> para
    PHP 5 es <filename>c:\php\ext</filename>.
   </para>
   
   <note>
    <para>
     Si al iniciar el servidor web un error similar al siguiente ocurre:
     <literal>"Unable to load dynamic library './php_mysqli.dll'"</literal>,
     esto es porque <filename>php_mysqli.dll</filename> y/o
     <filename>libmysql.dll</filename> no pudo ser encontrado por el sistema.
    </para>
   </note>
   
  </section>
  
  <section>
   
   <title>PHP 5.3.0+</title>
   
   <para>
    En Windows, con versiones de PHP 5.3 o superiores, la 
    extensión <literal>mysqli</literal> viene habilitada y utiliza por
    omisión el Driver Nativo MySQL. Esto significa que no debe preocuparse
    por configurar el acceso a
    <filename>libmysql.dll</filename>.
   </para>
   
  </section>
  
 </section>
 
</section>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
