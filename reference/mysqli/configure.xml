<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 288721 $ -->
<!-- EN-Revision: 288721 Maintainer: argosback Status: ready --> 
<section xml:id="mysqli.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

&reftitle.install;

 <para xml:id="mysqli.configure">
  A partir de PHP 5.0, el soporte para MySQL no se habilita de forma
  predeterminada con la distribucione estándar de PHP. Esto significa que PHP
  debe ser explícitamente configurado para tomar ventaja de las extensiones de
  MySQL.
 </para>

 <para>
  Las distribuciones más comunes de Unix incluyen versiones binarias de PHP que
  pueden ser instalados. Aunque estas versiones binarias son típicamente
  construidos con soporte para extensiones de MySQL habilitada, las bibliotecas
  de extensión puede ser necesario instalarlo utilizando un paquete adicional.
  Compruebe el gestor de paquetes que viene con su distribución elegida para
  disponibilidad.
 </para>

 <para>
  Si su distribución de Unix no viene con un paquete binario de PHP con la
  extensión <literal>mysqli</literal> disponible, tendrá que compilar PHP desde
  código fuente. La compilación de PHP desde el código fuente le permite
  especificar las extensiones de MySQL que desea utilizar, así como la elección
  de la biblioteca cliente para cada extensión.
 </para>

 <para>
  Para asegurarse que la extensión <literal>mysqli</literal> para PHP esta
  habilitada, necesitará configurar el código fuente de PHP para usar
  <literal>mysqli</literal>. Esto se logra ejecucutando el script
  <command>configure</command> con la opción
  <option role="configure">--with-mysqli=mysql_config_path/mysql_config</option>,
  antes de compilar PHP. Esto habilitará <literal>mysqli</literal> y se usará la
  biblioteca de cliente MySQL (libmysql) para comunicarse con
  el servidor MySQL.
 </para>

 <note>
  <para>
   <literal>mysql_config_path</literal> representa la ubicación del programa
   <literal>mysql_config</literal> que viene con el servidor MySQL.
  </para>
 </note>

 <para>
  Con las versiones de PHP 5.3 y posteriores, alternativamente puede usar el
  nuevo driver nativo de MySQL con <literal>mysqli</literal>. Esto da una serie
  de ventajas frente al uso libmysql.
 </para>

 <para>
  Para usar el driver nativo de MySQL con <literal>mysqli</literal> necesita
  configurar el código fuente de PHP con la opción
  <option role="configure">--with-mysqli=mysqlnd</option>, antes de la
  compilación de PHP.
 </para>

 <para>
  Esta es la opción recomendada, ya que utilizando el controlador nativo de MySQL
  resulta en un mejor rendimiento y permite el acceso a funciones que no están
  disponibles cuando se utiliza la biblioteca de cliente MySQL. Consulte
  <link linkend="mysqli.overview.mysqlnd">¿Qué es driver nativo de PHP para MySQL?</link>
  para obtener una descripción breve de las ventajas de driver nativo de MySQL.
 </para>

 <para>
  Tenga en cuenta que es posible mezclar libremente extensiones de MySQL y
  librerias cliente. Por ejemplo, es posible habilitar la extensión de MySQL
  para utilizar la biblioteca de cliente MySQL (libmysql), mientras que la
  configuración de la extensión mysqli para utilizar el controlador nativo de
  MySQL. Sin embargo, todas las permutaciones de la extensión y la biblioteca de
  cliente son posibles.
 </para>

 <para>
  El siguiente ejemplo construye la extensión de MySQL para utilizar la
  biblioteca de cliente MySQL, y <literal>mysqli</literal> y la extensión PDO
  MYSQL para utilizar el controlador nativo de MySQL:
 </para>

<programlisting role="shell">
./configure --with-mysql=/usr/bin/mysql_config  \
--with-mysqli=mysqlnd \
--with-pdo-mysql=mysqlnd
[other options]
</programlisting>

 <section xml:id="mysqli.installation.windows">

  <title>Instalación en sistemas Windows</title>

  <para>
   En Windows, PHP es más comúnmente instalado usando el instalador binario. Una
   vez que PHP se ha instalado, alguna configuración es necesaria para habilitar
   <literal>mysqli</literal> y especificar la biblioteca cliente que desee usar.
  </para>

  <para>
   Como se mencionó anteriormente, la extensión <literal>mysqli</literal> no está
   habilitada por defecto, por lo que el archivo DLL <filename>php_mysqli.dll</filename>
   debe habilitarse al interior de &php.ini;. Para hacer esto usted necesita
   encontrar el archivo &php.ini; (normalmente se encuentra en
   <filename>c:\php</filename>), y asegúrese de eliminar el comentario
   (punto y coma) desde el inicio de la línea de
   <literal>extension=php_mysqli.dll</literal>, en la sección marcada como
   <literal>[PHP_MYSQLI]</literal>.
  </para>

  <para>
   Además, si desea utilizar la biblioteca de cliente MySQL con
   <literal>mysqli</literal>, debe asegurarse de que PHP puede acceder al
   archivo de la biblioteca de cliente. La biblioteca de cliente MySQL se
   incluye como un archivo de nombre <filename>libmysql.dll</filename> en la
   distribución de PHP en Windows. Este archivo debe estar disponible en la
   variable de entorno de sistema de Windows <envar>PATH</envar>, de modo que
   puede ser cargado con éxito. Véase la FAQ titulada
   "<link linkend="faq.installation.addtopath">Cómo agrego mi directorio PHP a
   la variable PATH en Windows</link>" para obtener información sobre cómo hacer
   esto. Copiar <filename>libmysql.dll</filename> al directorio de sistema de
   Windows (normalmente <filename>C:\Windows\System</filename>) funciona,
   pues el directorio de sistema esta por defecto en el PATH del sistema.
   Sin embargo, esta práctica está totalmente desaconsejada.
  </para>

  <para>
   En Windows, las versiones de PHP 5.3 y posteriores, la extensión 
   <literal>mysqli</literal> utiliza el controlador nativo de MySQL por defecto.
   Esto significa que usted no necesita preocuparse por la configuración de
   <filename>libmysql.dll</filename>, sólo tiene que asegurarse de que la
   extensión está habilitada en el archivo &php.ini;.
  </para>

  <para>
   Al igual que con cualquier otra extensión de PHP (como
   <filename>php_mysqli.dll</filename>), la directiva de PHP
   <link linkend="ini.extension-dir">extension_dir</link> se debe de establecer
   en el directorio donde están ubicadas las extensiones de PHP. Consulte
   tambien el <link linkend="install.windows.manual">Manual de instalación de
   Windows</link>. Un ejemplo de valor de <literal>extension_dir</literal> para
   PHP 5 es <filename>c:\php\ext</filename>.
  </para>

  <note>
   <para>
    Si al iniciar el servidor web un error similar al siguiente ocurre:
    <literal>"Unable to load dynamic library './php_mysqli.dll'"</literal>,
    esto es porque <filename>php_mysqli.dll</filename> y/o
    <filename>libmysql.dll</filename> no pudo ser encontrado por el sistema.
   </para>
  </note>

 </section>

</section>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
