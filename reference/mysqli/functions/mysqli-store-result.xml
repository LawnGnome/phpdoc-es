<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.10 Maintainer: baoengb Status: ready -->
  <refentry id="function.mysqli-store-result">
   <refnamediv>
    <refname>mysqli_store_result</refname>
    <refname>mysqli->store_result</refname>
    <refpurpose>Transfiere un resultado de la &uacute;ltima consulta</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <para>Estilo por procedimientos:</para>
    <methodsynopsis>
     <type>objeto</type><methodname>mysqli_store_result</methodname>
     <methodparam><type>mysqli_stmt</type><parameter>identificador_de_enlace</parameter></methodparam>
    </methodsynopsis>
    <para>Estilo orientado a objetos (m&eacute;todo):</para>
    <classsynopsis>
     <ooclass><classname>mysqli</classname></ooclass>
     <methodsynopsis>
      <type>objeto</type><methodname>store_result</methodname>
      <void />
     </methodsynopsis>
    </classsynopsis>
    <para>
     Transfiere el resultado de la &uacute;ltima consulta en la conexi&oacute;n 
     de base de datos representada por el par&aacute;metro 
     <parameter>identificador_de_enlace</parameter>, para ser usado con la 
     funci&oacute;n <function>mysqli_data_seek</function>.
    </para>
    <note>
     <para>
      Aunque es siempre una buena practica liberar la memoria usada por el 
      resultado de una consulta usando la funci&oacute;n 
      <function>mysqli_free_result</function>, cuando se transfieren resultados
      de gran tama&ntilde;o usando <function>mysqli_store_result</function> 
      en este caso esta practica se convierte particularmente importante.
     </para>
    </note>
    <note>
     <para>
      <function>mysqli_store_result</function> regresa &false; en caso de que la
      consulta no regrese un resultado (si la consulta fue, por ejemplo una 
      sentencia INSERT). Esta funci&oacute;n tambi&eacute;n regresa &false; si falla la
      lectura del resultado. Puede checar si obtuvo un error checando si 
      <function>mysqli_error</function> no regresa una cadena vac&iacute;a, si
      <function>mysqli_errno</function> regresa un valor diferente de cero o si
      <function>mysqli_field_count</function> regresa un valor diferente de cero.
      Tambi&eacute;n es una raz&oacute;n posible para que esta funci&oacute;n 
      regrese &false; despu&eacute;s que una llamada exitosa de 
      <function>mysqli_query</function> pueda ser demasiado grande el resultado 
      (la memoria no lo puede contener). Si <function>mysqli_field_count</function>
      regresa un valor no cero, la sentencia debi&oacute; producir un 
      resultado no vac&iacute;o.
     </para>
    </note>
   </refsect1>
   <refsect1>
    &reftitle.returnvalues;
    <para>
     Regresa un objeto resultado con almacenamiento intermedio (buffered) o 
     &false; si ocurre un error. 
    </para>
   </refsect1>
   <refsect1>
    <title>See also</title>
    <para>
     <function>mysqli_real_query</function>&listendand;
     <function>mysqli_use_result</function>.
    </para>
   </refsect1>
   <refsect1>
    &reftitle.examples;
    <para>
     Vea <function>mysqli_multi_query</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
