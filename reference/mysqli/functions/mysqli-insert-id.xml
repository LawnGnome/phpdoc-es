<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.7 Maintainer: baoengb Status: ready -->
  <refentry xml:id="function.mysqli-insert-id" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysqli_insert_id</refname>
    <refname>mysqli->insert_id</refname>
    <refpurpose>Regresa el ID generado autom&aacute;ticamente en la &uacute;ltima 
    consulta</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <para>Estilo por procedimientos:</para>
     <methodsynopsis>
      <type>mixto</type><methodname>mysqli_insert_id</methodname>
      <methodparam><type>mysqli</type><parameter>identificador_de_enlace</parameter></methodparam>
     </methodsynopsis>
     <para>Estilo orientado a objetos (propiedad):</para>
     <classsynopsis>
      <ooclass><classname>mysqli</classname></ooclass>
       <fieldsynopsis><type>mixto</type><varname>insert_id</varname></fieldsynopsis>
     </classsynopsis>
    <para>
     La funci&oacute;n <function>mysqli_insert_id</function> regresa el ID generado 
     por una consulta en una tabla con una columna que tiene el atributo 
     AUTO_INCREMENT. Si la &uacute;ltima consulta no fue un estatuto INSERT o UPDATE 
     o si la tabla modificada no tiene una columna con este atributo, est&aacute; 
     funci&oacute;n regresar&aacute; cero.
    </para>
    <note>
     <para>
      Ejecuta una sentencia INSERT o UPDATE usando la funci&oacute;n 
      LAST_INSERT_ID() tambi&eacute;n modificar&aacute; el valor regresado por la 
      funci&oacute;n <function>mysqli_insert_id</function>.
     </para>
    </note>
   </refsect1>
   <refsect1>
    &reftitle.returnvalues;
    <para>
      El valor de el campo <literal>AUTO_INCREMENT</literal> que fue actualizado 
      por la consulta previa. Regresa cero si no hubo una consulta previa en la 
      conexi&oacute;n o si la consulta no actualizo un valor <literal>AUTO_INCREMENT</literal>.
  </para>
  <note> 
   <para>
    Si el n&uacute;mero es mayor al entero m&aacute;ximo, 
    <function>mysqli_insert_id</function> regresar&aacute; una cadena. 
   </para>
  </note>
 </refsect1>
 <refsect1>
  &reftitle.examples;
  <example>
   <title>Estilo orientado a objetos</title>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* check connection */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$mysqli->query("CREATE TABLE myCity LIKE City");

$query = "INSERT INTO myCity VALUES (NULL, 'Stuttgart', 'DEU', 'Stuttgart', 617000)";
$mysqli->query($query);

printf ("New Record has id %d.\n", $mysqli->insert_id);

/* drop table */
$mysqli->query("DROP TABLE myCity");

/* close connection */
$mysqli->close();
?>
]]>
  </programlisting>
  </example>
  <example>
   <title>Estilo por procedimientos</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* check connection */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

mysqli_query($link, "CREATE TABLE myCity LIKE City");

$query = "INSERT INTO myCity VALUES (NULL, 'Stuttgart', 'DEU', 'Stuttgart', 617000)";
mysqli_query($link, $query);

printf ("New Record has id %d.\n", mysqli_insert_id($link));

/* drop table */
mysqli_query($link, "DROP TABLE myCity");

/* close connection */
mysqli_close($link);
?>
]]>
   </programlisting>
  </example>
  &example.outputs;
  <screen>
<![CDATA[
New Record has id 1.
]]>
  </screen>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
