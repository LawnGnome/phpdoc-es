<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 291194 Maintainer: yago Status: ready -->

<refentry xml:id="memcached.getbykey" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Memcached::getByKey</refname>
  <refpurpose>Obtiene un ítem de un servidor específico</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>Memcached::getByKey</methodname>
   <methodparam><type>string</type><parameter>server_key</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>callback</type><parameter>cache_cb</parameter></methodparam>
   <methodparam choice="opt"><type>float</type><parameter role="reference">cas_token</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Memcached::getByKey</function> su funcionalidad equivale a
   <methodname>Memcached::get</methodname>, excepto que
   <parameter>server_key</parameter> puede ser usado para apuntar la
   <parameter>key</parameter> a un servidor específico.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>server_key</parameter></term>
     <listitem>
      <para>
       &memcached.parameter.server_key;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       La clave del ítem a obtener.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cache_cb</parameter></term>
     <listitem>
      <para>
       Lectura caché de llamada de retorno o &null;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cas_token</parameter></term>
     <listitem>
      <para>
       La variable a guardar el CAS token.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el valor guardado en caché o &false; en caso contrario.
   <methodname>Memcached::getResultCode</methodname> devolverá
   <constant>Memcached::RES_NOTFOUND</constant> si la clave no existe.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Memcached::get</methodname></member>
    <member><methodname>Memcached::getMulti</methodname></member>
    <member><methodname>Memcached::getDelayed</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
