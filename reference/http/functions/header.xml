<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1.31 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/http.xml, last change in rev 1.2 -->
  <refentry xml:id="function.header" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>Enviar una cabecera HTTP pura</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
     <methodsynopsis>
      <type>void</type><methodname>header</methodname>
      <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>reemplazar</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>cod_respuesta_http</parameter></methodparam>
     </methodsynopsis>
    <para>
     La función <function>header</function> es usada para
     enviar una cabecera <acronym>HTTP</acronym> pura. Consulte la
     <link xlink:href="&url.rfc;2616">especificación HTTP/1.1</link>
     para más información sobre las cabeceras
     <acronym>HTTP</acronym>.
    </para>
    <note>
     <para>
      A partir de PHP 4.4.2 y PHP 5.1.2 esta función previene
      que sean enviadas más de una cabecera al mismo tiempo,
      como protección contra ataques de inyecci&oacute;n en
      cabeceras.
     </para>
    </note>
    <para>
     El parámetro opcional <parameter>reemplazar</parameter>
     indica si la cabecera debe reemplazar una cabecera previa
     semejante, o si debe agregar una segunda cabecera del mismo tipo.
     Por defecto esta función procede a reemplazar, pero si
     pasa &false; como el segundo argumento, puede obligar a que se
     envíen múltiples cabeceras del mismo tipo. Por
     ejemplo:
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
header('WWW-Authenticate: Negotiate');
header('WWW-Authenticate: NTLM', false);
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     El segundo parámetro opcional,
     <parameter>cod_respuesta_http</parameter>, obliga a que el
     código de respuesta HTTP sea el valor especificado. (Este
     parámetro se encuentra disponible a partir de PHP 4.3.0.)
    </para>
    <para>
     Existen dos llamadas de cabecera que son casos especiales. El
     primero es una cabecera que comience con la cadena
     "<literal>HTTP/</literal>" (no es importante la diferencia entre
     mayúsculas y min&uacute;sculas), la cual será usada
     para elegir el código de status HTTP a enviar. Por
     ejemplo, si ha configurado a Apache para que use un script PHP a
     la hora de gestionar peticiones por archivos inexistentes (usando
     la directiva <literal>ErrorDocument</literal>), puede que quiera
     asegurarse de que su script genere el código de status
     apropiado.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
header("HTTP/1.0 404 Not Found");
?>
]]>
     </programlisting>
    </informalexample>
   </para>
    <note>
     <para>
      La línea de cabecera con el status HTTP será
      siempre la primera en ser enviada al cliente, independientemente
      de que la llamada a <function>header</function> correspondiente
      sea la primera o no. El status puede ser sobrescrito llamando
      <function>header</function> con una nueva línea de status
      en cualquier momento, a menos que las cabeceras HTTP ya hayan
      sido enviadas.
     </para>
    </note>
    <para>
     El segundo caso especial es la cabecera "Location:". No solo
     envía esta cabecera de vuelta al navegador, sino que
     también devuelve un código de status
     <literal>REDIRECT</literal> (302) al navegador a menos que
     algún código de status <literal>3xx</literal> haya
     sido enviado ya.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
header("Location: http://www.example.com/"); /* Redirigir al navegador */

/* Asegurarse de que no se ejecute el codigo adicional cuando se redireccione. */
exit;
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      HTTP/1.1 requiere una <acronym>URI</acronym> absoluta como
      argumento a <link
      xlink:href="&spec.http1.1;-sec14.html#sec14.30">Location:</link>
      incluyendo el esquema, el nombre del host y una ruta absoluta,
      aunque algunos clientes aceptan URIs relativas. Usualmente puede
      usar <literal>$_SERVER['HTTP_HOST']</literal>,
      <literal>$_SERVER['PHP_SELF']</literal> y
      <function>dirname</function> para construir una URI absoluta a
      partir de una relativa:
      <informalexample>
       <programlisting role="php">
<![CDATA[
<?php
/* Redireccionar a una pagina diferente en el directorio actual de la peticion */
$host  = $_SERVER['HTTP_HOST'];
$uri   = rtrim(dirname($_SERVER['PHP_SELF']), '/\\');
$extra = 'mipagina.php';
header("Location: http://$host$uri/$extra");
exit;
?>
]]>
       </programlisting>
      </informalexample>
     </para>
    </note>
    <note>
     <para>
      El ID de sesión no es pasado con la cabecera Location
      incluso si <link
      linkend="ini.session.use-trans-sid">session.use_trans_sid</link>
      está habilitado. Debe ser pasado manualmente usando la
      constante <constant>SID</constant>.
     </para>
    </note>
    <para>
     Con frecuencia, los scripts PHP generan contenido dinámico
     que no debe ser almacenado en caché por el navegador del
     cliente o cualquier caché de proxy entre el servidor y el
     navegador del cliente. Muchos proxys y clientes pueden ser
     obligados a deshabilitar el uso de cachés con:
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1
header("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); // Fecha en el pasado
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      Puede que encuentre que sus páginas no son puestas en
      caché aun cuando no use todas las cabeceras
      enteriores. Existe un número de opciones que puede que se
      encuentren a disposición de los usuarios en sus
      navegadores para modificar sus comportamientos de caché
      predeterminados. Al enviar las anteriores cabeceras, usted
      debería sobrescribir cualquier parámetro de
      configuración que de otra forma podría estar
      causando que la salida de su script sea puesta en caché.
     </para>
     <para>
      Adicionalmente, <function>session_cache_limiter</function> y el
      parámetro de configuración
      <literal>session.cache_limiter</literal> pueden ser usados para
      generar automáticamente las cabeceras de uso de
      caché apropiadas cuando se están usando sesiones.
     </para>
    </note>
    <para>
     Recuerde que la función <function>header</function> debe
     ser llamada antes de que cualquier salida sea enviada, ya sea
     mediante etiquetas HTML normales, líneas en blanco de un
     archivo, o desde PHP. Es un error bastante común
     interpretar código extra con <function>include</function>,
     <function>require</function>, o alguna otra función de
     acceso de archivos, y terminar con espacios o líneas en
     blanco que son impresas antes de un llamado a
     <function>header</function>. El mismo problema existe cuando se
     usa un archivo PHP/HTML único.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<html>
<?php
/* Esto produce un error. Note la salida anterior, que se realiza
 * antes de llamar a header() */
header('Location: http://www.example.com/');
?>
]]>
      </programlisting>
     </informalexample>
    </para>    
    <note>
     <para>
      A partir de PHP 4, puede usar búferes de salida para
      evitar este problema, con el efecto lateral de que toda su
      salida al navegador es colocada en un búfer en el
      servidor hasta que usted la envíe. Puede lograr esto
      usando <function>ob_start</function> y
      <function>ob_end_flush</function> en su script, o al definir la
      directiva de configuración
      <literal>output_buffering</literal> en su &php.ini; u otros
      archivos de configuración.
     </para>
    </note>
    <para>
     Si desea que el usuario reciba un cuadro de diálogo para
     almacenar los datos que usted envía, como en el caso de un
     archivo PDF generado al vuelo, puede usar la cabecera <link
     xlink:href="&url.rfc;2183">Content-Disposition</link> para indicar un
     nombre de archivo recomendado y obligar a que el navegador
     despliegue un diálogo de guardado.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// Enviaremos un PDF
header('Content-type: application/pdf');

// Se va a llamar descarga.pdf
header('Content-Disposition: attachment; filename="descarga.pdf"');

// La fuente del PDF se encuentra en original.pdf
readfile('original.pdf');
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      Existe un problema en Microsoft Internet Explorer 4.01 que
      impide que esto funcione. No existe forma de evitar este
      inconveniente. Hay también un fallo en Microsoft Internet
      Explorer 5.5 que interfiere con esto, el cual puede ser resuelto
      al actualizarse a Service Pack 2 o superior.
     </para>
    </note>
    <note>
     <simpara>
      Si se encuentra habilitado el <link linkend="ini.safe-mode">modo
      seguro</link>, el uid del script es agregado a la sección
      <literal>realm</literal> de la cabecera
      <literal>WWW-Authenticate</literal> si define ésta
      cabecera (usada para Autenticación HTTP).
     </simpara>
    </note>
    <para>
     Vea también <function>headers_sent</function>,
     <function>setcookie</function>, y la sección sobre <link
     linkend="features.http-auth">autenticación HTTP</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
