<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/http.xml, last change in rev 1.1 -->
<!-- last change to 'header' in en/ tree in rev 1.2 -->
  <refentry id="function.header">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>Manda una cabecera HTTP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>int</type><methodname>header</methodname>
     <methodparam><type>string</type><parameter>string</parameter></methodparam>
     </methodsynopsis>
    <para>
     La funci&oacute;n <function>header</function> se utiliza al comienzo de un
     fichero <acronym>HTML</acronym> para enviar las cadenas de texto de la
     cabecera <acronym>HTTP</acronym>.  Consulte la
     <ulink url="&spec.http1.1;">Especificaci&oacute;n HTTP 1.1</ulink> para
     obtener m&aacute;s informaci&oacute;n sobre las cabeceras http.
     <emphasis>Nota:</emphasis> Recuerde que la funci&oacute;n
     <function>header</function> debe llamarse antes de que se genere
     salida alguna, bien con etiquetas HTML normales o con PHP.
     Un error muy frecuente consiste en leer c&oacute;digo con
     <function>include</function> o con auto_prepend, y que dicho c&oacute;digo
     inserte espacios o l&iacute;neas en blanco antes de llamar a
     <function>header</function>.</para>

	<para>
	 Hay dos casos especiales de llamadas a header.  La primera es la
         cabecera &quot;Location&quot;.  No s&oacute;lo env&iacute;a esta cabecera al
         navegador, sino que tambi&eacute;n devuelve un c&oacute;digo de estado REDIRECT
         a Apache.  Desde el punto de vista del programador de scripts esto
         no deber&iacute;a ser importante, pero para la gente que comprende las
         interioridades de Apache s&iacute; puede serlo.
     <informalexample><programlisting role="php">
header("Location: http://www.php.net");  /* Redirect browser to PHP web site */
exit;  /* Make sure that code below does not get executed when we redirect. */
</programlisting></informalexample></para>
	<para>
	 El segundo caso especial se produce con cualquier cabecera que
         comience con la cadena, &quot;HTTP/&quot; (las may&uacute;sculas no son
         significativas).
	 Por ejemplo, si tiene la directiva ErrorDocument 404 de Apache
         apuntando a un script PHP, es una buena idea asegurarse de que
         su script de PHP genera realmente un 404. La primera cosa que debe
         hacer en su script ser&iacute;a:
     <informalexample><programlisting role="php">
header("http/1.0 404 Not Found");
	 </programlisting></informalexample>
	</para>

    <para>
     Los scripts de PHP a menudo generan HTML din&aacute;mico que no debe almacenarse
     en la cach&eacute; del navegador cliente o en la cach&eacute; de cualquier proxy
     situado entre el servidor y el navegador cliente. Se puede obligar
     a muchos proxies y clientes a que deshabiliten el almacenamiento en
     cach&eacute; con <informalexample><programlisting role="php">
  header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");             // Date in the past
  header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT"); // always modified
  header("Cache-Control: no-cache, must-revalidate");           // HTTP/1.1
  header("Pragma: no-cache");                                   // HTTP/1.0
</programlisting></informalexample></para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
