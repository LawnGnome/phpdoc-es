<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.23 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/http.xml, last change in rev 1.2 -->
  <refentry id="function.header">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>Enviar una cabecera HTTP pura</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>void</type><methodname>header</methodname>
      <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>reemplazar</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>cod_respuesta_http</parameter></methodparam>
     </methodsynopsis>
    <para>
     La funci&oacute;n <function>header</function> es usada para
     enviar cabeceras <acronym>HTTP</acronym> puras. Consulte la
     <ulink url="&url.rfc;2616">especificaci&oacute;n HTTP/1.1</ulink>
     para m&aacute;s informaci&oacute;n sobre las cabeceras
     <acronym>HTTP</acronym>.
    </para>
    <para>
     El par&aacute;metro opcional <parameter>reemplazar</parameter>
     indica si la cabecera debe reemplazar una cabecera previa
     semejante, o si debe agregar una segunda cabecera del mismo tipo.
     Por defecto esta funci&oacute;n procede a reemplazar, pero si
     pasa &false; como el segundo argumento, puede obligar a que se
     env&iacute;en m&uacute;ltiples cabeceras del mismo tipo. Por
     ejemplo:
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
header('WWW-Authenticate: Negotiate');
header('WWW-Authenticate: NTLM', false);
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     El segundo par&aacute;metro opcional,
     <parameter>cod_respuesta_http</parameter>, obliga a que el
     c&oacute;digo de respuesta HTTP sea el valor especificado. (Este
     par&aacute;metro se encuentra disponible a partir de PHP 4.3.0.)
    </para>
    <para>
     Existen dos llamadas de cabecera que son casos especiales. El
     primero es una cabecera que comience con la cadena
     "<literal>HTTP/</literal>" (no es importante la diferencia entre
     may&uacute;sculas y min&uacute;sculas), la cual ser&aacute; usada
     para elegir el c&oacute;digo de status HTTP a enviar. Por
     ejemplo, si ha configurado a Apache para que use un script PHP a
     la hora de gestionar peticiones por archivos inexistentes (usando
     la directiva <literal>ErrorDocument</literal>), puede que quiera
     asegurarse de que su script genere el c&oacute;digo de status
     apropiado.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
header("HTTP/1.0 404 Not Found");
?>
]]>
     </programlisting>
    </informalexample>
   </para>
    <note>
     <para>
      La l&iacute;nea de cabecera con el status HTTP ser&aacute;
      siempre la primera en ser enviada al cliente, independientemente
      de que la llamada a <function>header</function> correspondiente
      sea la primera o no. El status puede ser sobrescrito llamando
      <function>header</function> con una nueva l&iacute;nea de status
      en cualquier momento, a menos que las cabeceras HTTP ya hayan
      sido enviadas.
     </para>
    </note>
    <note>
     <para>
      En PHP 3, esto funciona &uacute;nicamente cuando PHP ha sido
      compilado como un m&oacute;dulo de Apache. Puede conseguir el
      mismo efecto usando la cabecera <literal>Status</literal>.
      <informalexample>
       <programlisting role="php">
<![CDATA[
<?php
header("Status: 404 Not Found");
?>
]]>
       </programlisting>
      </informalexample>
     </para>
    </note>
    <para>
     El segundo caso especial es la cabecera "Location:". No solo
     env&iacute;a esta cabecera de vuelta al navegador, sino que
     tambi&eacute;n devuelve un c&oacute;digo de status
     <literal>REDIRECT</literal> (302) al navegador a menos que
     alg&uacute;n c&oacute;digo de status <literal>3xx</literal> haya
     sido enviado ya.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
header("Location: http://www.example.com/"); /* Redirigir al navegador */

/* Asegurarse de que no se ejecute el codigo adicional cuando se redireccione. */
exit;
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      HTTP/1.1 requiere una <acronym>URI</acronym> absoluta como
      argumento a <ulink
      url="&spec.http1.1;-sec14.html#sec14.30">Location:</ulink>
      incluyendo el esquema, el nombre del host y una ruta absoluta,
      aunque algunos clientes aceptan URIs relativas. Usualmente puede
      usar <literal>$_SERVER['HTTP_HOST']</literal>,
      <literal>$_SERVER['PHP_SELF']</literal> y
      <function>dirname</function> para construir una URI absoluta a
      partir de una relativa:
      <informalexample>
       <programlisting role="php">
<![CDATA[
<?php
header("Location: http://" . $_SERVER['HTTP_HOST']
                      . dirname($_SERVER['PHP_SELF'])
                      . "/" . $url_relativa);
?>
]]>
       </programlisting>
      </informalexample>
     </para>
    </note>
    <para>
     Con frecuencia, los scripts PHP generan contenido din&aacute;mico
     que no debe ser almacenado en cach&eacute; por el navegador del
     cliente o cualquier cach&eacute; de proxy entre el servidor y el
     navegador del cliente. Muchos proxys y clientes pueden ser
     obligados a deshabilitar el uso de cach&eacute;s con:
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// Fecha en el pasado
header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");

// siempre modificado
header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
 
// HTTP/1.1
header("Cache-Control: no-store, no-cache, must-revalidate");
header("Cache-Control: post-check=0, pre-check=0", false);

// HTTP/1.0
header("Pragma: no-cache");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      Puede que encuentre que sus p&aacute;ginas no son puestas en
      cach&eacute; aun cuando no use todas las cabeceras
      enteriores. Existe un n&uacute;mero de opciones que puede que se
      encuentren a disposici&oacute;n de los usuarios en sus
      navegadores para modificar sus comportamientos de cach&eacute;
      predeterminados. Al enviar las anteriores cabeceras, usted
      deber&iacute;a sobrescribir cualquier par&aacute;metro de
      configuraci&oacute;n que de otra forma podr&iacute;a estar
      causando que la salida de su script sea puesta en cach&eacute;.
     </para>
     <para>
      Adicionalmente, <function>session_cache_limiter</function> y el
      par&aacute;metro de configuraci&oacute;n
      <literal>session.cache_limiter</literal> pueden ser usados para
      generar autom&aacute;ticamente las cabeceras de uso de
      cach&eacute; apropiadas cuando se est&aacute;n usando sesiones.
     </para>
    </note>
    <para>
     Recuerde que la funci&oacute;n <function>header</function> debe
     ser llamada antes de que cualquier salida sea enviada, ya sea
     mediante etiquetas HTML normales, l&iacute;neas en blanco de un
     archivo, o desde PHP. Es un error bastante com&uacute;n
     interpretar c&oacute;digo extra con <function>include</function>,
     <function>require</function>, o alguna otra funci&oacute;n de
     acceso de archivos, y terminar con espacios o l&iacute;neas en
     blanco que son impresas antes de un llamado a
     <function>header</function>. El mismo problema existe cuando se
     usa un archivo PHP/HTML &uacute;nico.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<html>
<?php
/* Esto produce un error. Note la salida anterior, que se realiza
 * antes de llamar a header() */
header('Location: http://www.example.com/');
?>
]]>
      </programlisting>
     </informalexample>
    </para>    
    <note>
     <para>
      En PHP 4, puede usar b&uacute;feres de salida para evitar este
      problema, con el efecto lateral de que toda su salida al
      navegador es colocada en un b&uacute;fer en el servidor hasta
      que usted la env&iacute;e. Puede lograr esto usando
      <function>ob_start</function> y
      <function>ob_end_flush</function> en su script, o al definir la
      directiva de configuraci&oacute;n
      <literal>output_buffering</literal> en su &php.ini; u otros
      archivos de configuraci&oacute;n.
     </para>
    </note>
    <para>
     Si desea que el usuario reciba un cuadro de di&aacute;logo para
     almacenar los datos que usted env&iacute;a, como en el caso de un
     archivo PDF generado al vuelo, puede usar la cabecera <ulink
     url="&url.rfc;2183">Content-Disposition</ulink> para indicar un
     nombre de archivo recomendado y obligar a que el navegador
     despliegue un di&aacute;logo de guardado.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// Enviaremos un PDF
header('Content-type: application/pdf');

// Se va a llamar descarga.pdf
header('Content-Disposition: attachment; filename="descarga.pdf"');

// La fuente del PDF se encuentra en original.pdf
readfile('original.pdf');
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      Existe un problema en Microsoft Internet Explorer 4.01 que
      impide que esto funcione. No existe forma de evitar este
      inconveniente. Hay tambi&eacute;n un fallo en Microsoft Internet
      Explorer 5.5 que interfiere con esto, el cual puede ser resuelto
      al actualizarse a Service Pack 2 o superior.
     </para>
    </note>
    <note>
     <simpara>
      Si se encuentra habilitado el <link linkend="ini.safe-mode">modo
      seguro</link>, el uid del script es agregado a la secci&oacute;n
      <literal>realm</literal> de la cabecera
      <literal>WWW-Authenticate</literal> si define &eacute;sta
      cabecera (usada para Autenticaci&oacute;n HTTP).
     </simpara>
    </note>
    <para>
     Vea tambi&eacute;n <function>headers_sent</function>,
     <function>setcookie</function>, y la secci&oacute;n sobre <link
     linkend="features.http-auth">autenticaci&oacute;n HTTP</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
