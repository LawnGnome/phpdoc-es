<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: chuso Status: ready -->
<!-- Generated by xml_proto.php v2.4. Found in /scripts directory of phpdoc. -->
<refentry xml:id="function.http-cache-last-modified" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>http_cache_last_modified</refname>
  <refpurpose>Guardando en caché por última modificación</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>http_cache_last_modified</methodname>
   <methodparam choice="opt"><type>int</type><parameter>timestamp_or_expires</parameter></methodparam>
  </methodsynopsis>
  <para>
   Trata de guardar en caché la entidad enviada a partir de la fecha de última modificación.
  </para>
  <para>
   Si el parámetro proporcionado es mayor que 0, se considerará que es una fecha Unix
   y se enviará ésta como fecha de última modificación. Si fuera 0 o se omitiera,
   se enviaría la fecha actual como fecha <literal>Last-Modified</literal>.
   Si fuera negativo, se consideraría el tiempo de expiración en segundos, es decir,
   si la la fecha de última modificación de la petición no entrara dentro de la fecha
   Unix que se calculó, se actualizaría la cabecera <literal>Last-Modified</literal>
   y se enviaría el contenido definitivo.
  </para>
  <para>
   Si la &link.http.configuration; <link linkend="http.configuration.log.cache">http.log.cache</link>
   estutivera habilitada y el intento de caché tuviera éxito, se escribiría una entrada
   en el registro de la caché.
  </para>
  &note.http.send.API.mayuse;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>timestamp_or_expires</parameter></term>
     <listitem>
      <para>
       Fecha Unix
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &returns.http.false.orexits; devolviendo el código de estado
   <literal>304 Not Modified</literal> si la entidad estuviera cacheada.
   &see.http.configuration.force_exit;
  </para>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->


 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here</entry>
       <entry>Description of change</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->


 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>http_cache_last_modified</function></title>
    <para>
     Guardando en caché 5 segundos.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
http_cache_last_modified(-5);
printf("%s\n", http_date());
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>http_cache_etag</function></member>
    <member>&http.response.class.php51;</member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
