<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.14 Maintainer: lboshell Status: ready -->
 <reference id="ref.zlib">
  <title>Funciones de Compresi&oacute;n Zlib</title>
  <titleabbrev>Zlib</titleabbrev>

  <partintro>
   <section id="zlib.intro">
    &reftitle.intro;
    <para>
     Este m&oacute;dulo le permite leer y escribir de forma
     transparente sobre archivos gzip (.gz) comprimidos, a
     trav&eacute;s de algunas versiones de la mayor&iacute;a de
     funciones del <link linkend="ref.filesystem">sistema de
     archivos</link> que trabajen con archivos comprimidos-gzip (y
     archivos sin comprimir tambi&eacute;n, pero no con sockets).
    </para>
    <note>
     <para>
      La versi&oacute;n 4.0.4 introdujo una envoltura fopen para
      archivos-.gz, de modo que puede usar una URL especial 'zlib:'
      para acceder a archivos comprimidos de forma transparente usando
      las funciones de acceso normales f*() si precede el nombre o
      ruta de archivo con un prefijo 'zlib:' al llamar a
      <function>fopen</function>.
     </para>
     <para>
      En la versi&oacute;n 4.3.0, este prefijo especial ha cambiado a
      'zlib://' para prevenir ambig&uuml;edades con nombres de archivo
      que contengan ':'.
     </para>
     <para>
      Esta caracter&iacute;stica requiere una biblioteca C de tiempo
      de ejecuci&oacute;n que provee la funci&oacute;n
      <literal>fopencookie()</literal>. Hasta donde se conoce, la
      biblioteca de C GNU es la &uacute;nica que ofrece esta
      caracter&iacute;stica.
     </para>
    </note>
   </section>

   <section id="zlib.requirements">
    &reftitle.required;
    <para>
     Este m&oacute;dulo usa las funciones de <ulink
     url="&url.zlib;">zlib</ulink>, por Jean-loup Gailly y Mark
     Adler. Debe usar una versi&oacute;n de zlib &gt;= 1.0.9 con
     &eacute;ste m&oacute;dulo.
    </para>
   </section>

   &reference.zlib.configure;

   &reference.zlib.ini;

   <section id="zlib.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   &reference.zlib.constants;

   <section id="zlib.examples">
    &reftitle.examples;
    <para>
     Este ejemplo abre un archivo temporal y escribe una cadena de
     prueba en &eacute;l, luego imprime el contenido de este archivo
     dos veces.
    </para>
    <example>
     <title>Peque&ntilde;o Ejemplo de Zlib</title>
     <programlisting role="php">
<![CDATA[
<?php

$nombre_archivo = tempnam('/tmp', 'zlibtest') . '.gz';
echo "<html>\n<head></head>\n<body>\n<pre>\n";
$s = "&iexcl;Tan solo una prueba, prueba, prueba, prueba, prueba, prueba!\n";

// abrir el archivo para escritura con maxima compresion
$zp = gzopen($nombre_archivo, "w9");

// escribir la cadena en el archivo
gzwrite($zp, $s);

// cerrar el archivo
gzclose($zp);

// abrir el archivo para lectura
$zp = gzopen($nombre_archivo, "r");

// leer 3 caracteres
echo gzread($zp, 3);

// mostrar la salida hasta el final de archivo y cerrarlo.
gzpassthru($zp);
gzclose($zp);

echo "\n";

// abrir el archivo e imprimir su contenido (por segunda vez).
if (readgzfile($nombre_archivo) != strlen($s)) {
        echo "&iexcl;Error con las funciones zlib!";
}
unlink($nombre_archivo);
echo "</pre>\n</body>\n</html>\n";

?>
]]>
     </programlisting>
    </example>
   </section>
  </partintro>

&reference.zlib.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
