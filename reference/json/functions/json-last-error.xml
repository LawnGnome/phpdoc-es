<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 288721 $ -->
<!-- EN-Revision: 288721 Maintainer: tatai Status: ready -->

<refentry xml:id="function.json-last-error" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>json_last_error</refname>
  <refpurpose>Retorna el último error ocurrido</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>json_last_error</methodname>
   <void />
  </methodsynopsis>
  <para>
   Retorna el último error (si existe) ocurrido en el último análisis JSON.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna un integer, el valor puede ser una de las siguientes constantes: 
  </para>
  <table>
   <title>Códigos de error de JSON</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Constant</entry>
      <entry>Meaning</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><constant>JSON_ERROR_NONE</constant></entry>
      <entry>No hay error</entry>
     </row>
     <row>
      <entry><constant>JSON_ERROR_DEPTH</constant></entry>
      <entry>Se ha excedido la profundidad máxima de la pila</entry>
     </row>
     <row>
      <entry><constant>JSON_ERROR_CTRL_CHAR</constant></entry>
      <entry>Error del carácter de control, posiblemente se ha codificado de forma incorrecta</entry>
     </row>
     <row>
      <entry><constant>JSON_ERROR_SYNTAX</constant></entry>
      <entry>Error de sintaxis</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>json_last_error</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Un string json válido
$json[] = '{"Organización": "Equipo de documentación PHP"}';

// Un string json no válido que causa un error de sintaxis, en este caso, se ha
// usado ' en vez de " para entrecomillar
$json[] = "{'Organización': 'Equipo de documentación PHP'}";


foreach($json as $string)
{
 echo 'Decodificando: ' . $string;
 json_decode($string);

 switch(json_last_error())
 {
  case JSON_ERROR_DEPTH:
   echo ' - Excedido tamaño máximo de la pila';
  break;
  case JSON_ERROR_CTRL_CHAR:
   echo ' - Encontrado carácter de control no esperado';
  break;
  case JSON_ERROR_SYNTAX:
   echo ' - Error de sintaxis, JSON mal formado';
  break;
  case JSON_ERROR_NONE:
   echo ' - Sin errores';
  break;
 }

 echo PHP_EOL;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Decoding: {"Organización": "Equipo de documentación PHP"} - Sin errores
Decoding: {'Organización': 'Equipo de documentación PHP'} - Error de sintaxis, JSON mal formado
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>json_decode</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
