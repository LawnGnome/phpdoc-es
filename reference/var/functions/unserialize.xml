<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.14 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/var.xml, last change in rev 1.2 -->
  <refentry id="function.unserialize">
   <refnamediv>
    <refname>unserialize</refname>
    <refpurpose>
      Crea un valor PHP a partir de una representaci&oacute;n
      almacenada
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>mixed</type><methodname>unserialize</methodname>
      <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
     </methodsynopsis>
    <simpara>
<function>unserialize</function> toma una variable sencilla seriada
(vea <function>serialize</function>) y la convierte de vuelta a su
valor PHP. El valor convertido es retornado, y puede ser
un <type>integer</type>, <type>float</type>, <type>string</type>,
<type>array</type> u <type>object</type>. En caso de que la cadena
pasada no pueda ser procesada para revertir la seriaci&oacute;n, se
devuelve &false;.
    </simpara>
    <note>
     <title>Directiva unserialize_callback_func</title>
     <para>
Es posible establecer una funci&oacute;n-llamada de retorno la cual
ser&aacute; llamada si una clase no definida deber&iacute;a ser
instanciada durante el proceso de revertir la seriaci&oacute;n. (para
prevenir que se reciba un <type>object</type> incompleto
"__PHP_Incomplete_Class".) Use su
&php.ini;, <function>ini_set</function> o &htaccess; para definir
'unserialize_callback_func'. Cada vez que una clase no definida deba
ser instanciada, &eacute;sta funci&oacute;n ser&aacute; llamada. Para
deshabilitar esta caracter&iacute;stica simplemente asigne un valor
vac&iacute;o a este par&aacute;metro. Tambi&eacute;n note que la
directiva unserialize_callback_func se hizo disponible en PHP 4.2.0.
     </para>
    </note>
    <para>
Si la variable que est&aacute; siendo convertida de vuelta es un
objeto, PHP intentar&aacute; llamar la funci&oacute;n
miembro <function>__wakeup</function> (si existe)
autom&aacute;ticamente luego de haber recontruido satisfactoriamente
el objeto.
     <example>
      <title>Ejemplo de unserialize_callback_func</title>
      <programlisting role="php">
<![CDATA[
<?php
$objeto_seriado='O:1:"a":1:{s:5:"valor";s:3:"100";}';

// la directiva unserialize_callback_func esta disponible a partir de PHP 4.2.0
ini_set('unserialize_callback_func', 'mi_llamada_de_retorno'); // defina su callback_function

function mi_llamada_de_retorno($nombre_clase) {
    // tan solo incluya un archivo que contenga su definicion de clase

    // usted recibe $nombre_clase para determinar que definicion de
    // clase requiere
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
En PHP 3, los m&eacute;todos no se preservan cuando se revierte un
objeto seriado. PHP 4 elimina esta limitaci&oacute;n y recupera tanto
propiedades como m&eacute;todos. Por favor consulte la
secci&oacute;n <link
linkend="language.oop.serialization">Seriaci&oacute;n de
Objetos</link> de <link linkend="language.oop">Clases y Objetos</link>
para m&aacute;s informaci&oacute;n.
     </para>
    </note>
    <para>
     <example>
      <title>Ejemplo de <function>unserialize</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// Aqui usamos unserialize() para cargar los datos de sesion
// provenientes de la cadena seleccionada desde la base de datos en la
// matriz $datos_sesion. Este ejemplo complementa aquel descrito con
// serialize().

$con  = odbc_connect("bd_web", "php", "gallina");
$sent = odbc_prepare($con, "SELECT datos FROM sesiones WHERE id = ?");
$datos_sql = array ($PHP_AUTH_USER);

if (!odbc_execute($sent, &$datos_sql) || !odbc_fetch_into($sent, &$tmp)) {
    // si la ejecucion del comando o la recuperacion de datos falla,
    // inicializar una matriz vacia
    $datos_sesion = array();
} else {
    // ahora deberiamos tener los datos seriados en $tmp[0].
    $datos_sesion = unserialize($tmp[0]);
    if (!is_array($datos_sesion)) {
        // algo ha fallado, inicializar una matriz vacia
        $datos_sesion = array();
    }
}
?>
]]>
      </programlisting>
     </example>
    </para>
   <para>
    Vea tambi&eacute;n <function>serialize</function>.
   </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
