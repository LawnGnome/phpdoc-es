<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.14 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/var.xml, last change in rev 1.2 -->
  <refentry xml:id="function.isset" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>isset</refname>
    <refpurpose>Determinar si una variable est&aacute;
    definida</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>bool</type><methodname>isset</methodname>
      <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>var</parameter></methodparam>
      <methodparam choice="opt"><parameter>...</parameter></methodparam>
     </methodsynopsis>

    <simpara>
     Devuelve &true; si <parameter>var</parameter> existe; &false; de
     lo contrario.
    </simpara>
    <para>
     Si una variable ha sido removida con <function>unset</function>,
     ya no estar&aacute; definida. <function>isset</function>
     devolver&aacute; &false; si prueba una variable que ha sido
     definida como &null;. Tambi&eacute;n note que un byte &null;
     (<literal>"\0"</literal>) no es equivalente a la constante &null;
     de PHP.
    </para>
    <note>
     <title>Advertencia</title>
     <para>
      <function>isset</function> s&oacute;lo trabaja con variables, ya
      que pasar cualquier otra cosa resultar&aacute; en un error de
      int&eacute;rprete. Para chequear si se han definido <link
      linkend="language.constants">constantes</link>, use la
      funci&oacute;n <function>defined</function>.
     </para>
    </note>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$var = '';

// Esto evaluara a TRUE asi que el texto se imprimira.
if (isset($var)) {
    echo "Esta variable esta definida, asi que se imprimira esto.";
}

// En los siguientes ejemplo usaremos var_dump para imprimir
// el valor devuelto por isset().

$a = "prueba";
$b = "otraprueba";

var_dump(isset($a));      // TRUE
var_dump(isset($a, $b));  // TRUE

unset ($a);

var_dump(isset($a));     // FALSE
var_dump(isset($a, $b)); // FALSE

$foo = NULL;
var_dump(isset($foo));   // FALSE

?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Tambi&eacute;n trabaja con elementos en matrices:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$a = array ('prueba' => 1, 'hola' => NULL);

var_dump(isset($a['prueba']));         // TRUE
var_dump(isset($a['foo']));            // FALSE
var_dump(isset($a['hola']));           // FALSE

// La clave 'hola' es igual a NULL asi que no se considera definida
// Si desea probar por valores NULL en claves, intente:
var_dump(array_key_exists('hola', $a)); // TRUE

?>
]]>
      </programlisting>
     </informalexample>
    </para>

    &note.language-construct;

    <simpara>
     Vea tambi&eacute;n <function>empty</function>,
     <function>unset</function>, <function>defined</function>, <link
     linkend="types.comparisons">las tablas de comparaci&oacute;n de
     tipos</link>, <function>array_key_exists</function>, y el
     operador de control de errores <link
     linkend="language.operators.errorcontrol">@</link>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
