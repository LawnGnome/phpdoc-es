<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.4 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/var.xml, last change in rev 1.35 -->
  <refentry id="function.is-scalar">
   <refnamediv>
    <refname>is_scalar</refname>
    <refpurpose>
     Encuentra si una variable es un escalar
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>bool</type><methodname>is_scalar</methodname>
      <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
     </methodsynopsis>
    <para>
<function>is_scalar</function> devuelve &true; si la variable dada por
el par&aacute;metro <parameter>var</parameter> es un escalar, o de lo
contrario devuelve &false;.
    </para>
    <para>
Las variables escalares son aquellas que contienen
un <type>integer</type>, <type>float</type>, <type>string</type>
o <type>boolean</type>. Los
tipos <type>array</type>, <type>object</type> y <type>resource</type>
no son escalares.
     <informalexample>
      <programlisting role="php">
<!-- TODO: better example, this one can be quite misleading for unexperienced
           programmers.  -->
<![CDATA[
<?php
function mostrar_var($var) {
    if (is_scalar($var)) {
        echo $var;
    } else {
        var_dump($var);
    }
}
$pi = 3.1416;
$proteinas = array("hemoglobina", "citocromo c oxidasa", "ferredoxin");

mostrar_var($pi);
// imprime: 3.1416

mostrar_var($proteinas)
// imprime:
// array(3) {
//   [0]=>
//   string(10) "hemoglobina"
//   [1]=>
//   string(20) "citocromo c oxidasa"
//   [2]=>
//   string(10) "ferredoxin"
// }
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
<function>is_scalar</function> no considera los valores de
tipo <type>resource</type> como escalares dado que los recursos son
tipos de datos abstractos que por el momento est&aacute;n basados en
enteros. Este detalle de implementaci&oacute;n no deber&iacute;a ser
considerado confiable, ya que puede cambiar.
     </para>
    </note>
    <para>
     Vea tambi&eacute;n <function>is_bool</function>,
     <function>is_numeric</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_real</function>,
     <function>is_string</function>,
     <function>is_object</function>,
     <function>is_array</function>, y
     <function>is_integer</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
