<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.6 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/var.xml, last change in rev 1.28 -->
  <refentry id="function.serialize">
   <refnamediv>
    <refname>serialize</refname>
    <refpurpose>
Genera una representaci&oacute;n apta para almacenamiento de un valor
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>string</type><methodname>serialize</methodname>
      <methodparam><type>mixed</type><parameter>valor</parameter></methodparam>
     </methodsynopsis>
    <simpara>

<function>serialize</function> devuelve una cadena que contiene una
representaci&oacute;n de flujo de bytes
del <parameter>valor</parameter> que puede ser almacenada en cualquier
parte.
    </simpara>
    <simpara>
Esto es &uacute;til para el almacenamiento de valores en PHP sin
perder su tipo y estructura.
    </simpara>
   <simpara>
Para recuperar el valor PHP a partir de la cadena seriada,
use <function>unserialize</function>. <function>serialize</function>
maneja todos los tipos, excepto <type>resource</type>. Usted puede
incluso usar <function>serialize</function> sobre matrices que
contienen referencias a ellas mismas. Las referencias encontradas en
la matriz/objeto que procede a seriar
con <function>serialize</function> tambi&eacute;n ser&aacute;n
almacenadas.
   </simpara>
   <simpara>
Cuando seria objetos, PHP intentar&aacute; llamar la funci&oacute;n
miembro <function>__sleep</function> antes de la
seriaci&oacute;n. Esto permite que el objeto efect&uacute;e limpiezas
de &uacute;ltimo minuto, etc. antes de ser seriado. De forma
semejante, cuando un objeto es recuperado
usando <function>unserialize</function>, la funci&oacute;n
miembro <function>__wakeup</function> es llamada.
   </simpara>
   <!-- TODO
        in 4.0.4pl1 this didn't work properly, however, there
        been some fixes. I don't know whether this all
        works correctly now, and if so, whether it is since 405
        or 406
   <note>
    <simpara>
     This didn't work correctly until 4.0.?
    </simpara>
   </note>
   </simpara>
   -->
   <note>
    <para>
En PHP 3, las propiedades de los objetos ser&aacute;n seriados, pero
los m&eacute;todos se pierden. PHP 4 elimina esa limitaci&oacute;n y
recupera tanto propiedades como m&eacute;todos. Por favor consulte la
secci&oacute;n <link
linkend="language.oop.serialization">Seriaci&oacute;n de
Objetos</link> de <link linkend="language.oop">Clases y Objetos</link>
para m&aacute;s informaci&oacute;n.
    </para>
   </note>
    <para>
     <example>
      <title>Ejemplo de <function>serialize</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// $datos_sesion contiene una matriz multi-dimensional con
// informacion del usuario actual. Usamos serialize() para
// almacenarla en una base de datos al final de la peticion.


$con  = odbc_connect ("bd_web", "php", "gallina");
$sent = odbc_prepare ($con,
      "UPDATE sesiones SET datos = ? WHERE id = ?");
$datos_sql = array (serialize($datos_sesion), $PHP_AUTH_USER);

if (!odbc_execute ($sent, &$datos_sql)) {
    $sent = odbc_prepare($con,
     "INSERT INTO sesiones (id, datos) VALUES(?, ?)");
    if (!odbc_execute($sent, &$datos_sql)) {
    /* Algo ha fallado.  Insulte, quejese y moleste. */
    }
}
?>
]]>
      </programlisting>
     </example>
    </para>
   <para>
    Vea Tambi&eacute;n: <function>unserialize</function>.
   </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
