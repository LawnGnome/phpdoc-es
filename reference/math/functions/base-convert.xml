<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.11 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.base-convert" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>base_convert</refname>
  <refpurpose>Convertir un número entre bases
  arbitrarias</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>base_convert</methodname>
   <methodparam><type>string</type><parameter>numero</parameter></methodparam>
   <methodparam><type>int</type><parameter>desde_base</parameter></methodparam>
   <methodparam><type>int</type><parameter>a_base</parameter></methodparam>
  </methodsynopsis>
  <para>
   Devuelve una cadena que contiene el <parameter>numero</parameter> dado
   representado en base <parameter>a_base</parameter>. La base en la cual es
   dado el valor <parameter>numero</parameter> es especificado en
   <parameter>desde_base</parameter>. Tanto
   <parameter>desde_base</parameter> como <parameter>a_base</parameter>
   tienen que ser valores entre 2 y 36, inclusive. Los dígitos en números
   con una base mayor que 10 serán representados con las letras a-z, en
   donde a significa 10, b significa 11 y z significa 35.
  </para>
  <warning>
   <simpara>
    <function>base_convert</function> puede perder precisión en números
    grandes debido a las propiedades relacionadas al tipo interno "doble" o
    "flotante" usado. Por favor consulte la sección sobre <link
    linkend="language.types.float">Números de punto flotante</link> en el
    manual para más información específica sobre las limitaciones.
   </simpara>
  </warning>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>numero</parameter></term>
     <listitem>
      <para>
       El número a convertir
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>desde_base</parameter></term>
     <listitem>
      <para>
       La base en que se encuentra <parameter>numero</parameter>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>a_base</parameter></term>
     <listitem>
      <para>
       La base a la cual convertir <parameter>numero</parameter>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>numero</parameter> convertido a base
   <parameter>a_base</parameter>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>base_convert</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$hexadecimal = 'A37334';
echo base_convert($hexadecimal, 16, 2);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
101000110111001100110100
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>intval</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
