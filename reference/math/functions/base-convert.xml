<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/math.xml, last change in rev 1.1 -->
<!-- last change to 'base-convert' in en/ tree in rev 1.2 -->
  <refentry id="function.base-convert">
   <refnamediv>
    <refname>base_convert</refname>
    <refpurpose>Convierte un n&uacute;mero entre bases arbitrarias</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>strin</type><methodname>base_convert</methodname>
     <methodparam><type>string</type><parameter>number</parameter></methodparam>
     <methodparam><type>int</type><parameter>frombase</parameter></methodparam>
     <methodparam><type>int</type><parameter>tobase</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve una cadena conteniendo el <parameter>number</parameter>
     representado en base <parameter>tobase</parameter>.  La base en la
     cual <parameter>number</parameter> es dado viene especificada en
     <parameter>frombase</parameter>.  Tanto
     <parameter>frombase</parameter> y <parameter>tobase</parameter>
     tienen que estar entre 2 y 36, inclusive. Los d&iacute;gitos en n&uacute;meros
     con una base mayor que 10 ser&aacute;n representados con las letras a-z,
     a vale 10, b vale 11 y z vale 36.
     <example>
      <title>base_convert()</title>
      <programlisting role="php">
$binary = base_convert($hexadecimal, 16, 2);
</programlisting>
     </example></para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
