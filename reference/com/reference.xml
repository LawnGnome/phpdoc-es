<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.14 Maintainer: lboshell Status: ready -->
<!-- Purpose: utilspec.windows -->
<!-- Membership: bundled -->

<reference xml:id="ref.com" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Funciones COM y .Net (Windows)</title>
  <titleabbrev>COM</titleabbrev>
  <partintro>

   <section xml:id="com.intro">
    &reftitle.intro;
    <para>
     COM es un acrónimo para Component Object Model (Modelo de Objetos por
     Componentes); es una capa orientada a objetos (asi como servicios
     asociados) que cubre la especificación DCE RPC (un estándar abierto) y
     define una convención común de llamado que permite que código escrito
     en cualquier lenguaje pueda llamar e inter-operar con código escrito en
     cualquier otro lenguaje (provisto que ambos lenguajes hagan uso de
     COM). No solo es posible escribir el código en cualquier lenguaje,
     también es cierto que no necesita ser parte del mismo ejecutable; el
     código puede ser cargado desde un recurso DLL, encontrarse en otro
     proceso corriendo en la misma máquina, o, mediante DCOM (COM
     Distribuido), encontrarse en otro proceso en una máquina remota, todo
     esto sin requerir que su código sepa siquiera en dónde reside el
     componente.
    </para>
    <para>
     Existe un sub-conjunto de COM conocido como Automatización OLE que se
     compone de un grupo de interfaces OLE que permiten los enlaces
     flexibles con objetos COM, de modo que puedan ser susceptibles a
     introspección y llamados en tiempo de ejecución sin conocimientos en
     tiempo de compilación sobre el modo de operación del objeto. La
     extensión COM de PHP utiliza las interfaces de Automatización OLE para
     permitirle crear y llamar objetos compatibles desde sus scripts.
     Técnicamente hablando, ésta debería ser llamada la "Extensión de
     Automatización OLE para PHP", ya que no todos los objetos COM son
     compatibles con OLE.
    </para>
    <para>
     Ahora bien, ¿porqué querría o debería usar COM? COM es una de las
     formas principales de unir aplicaciones y componentes en la plataforma
     Windows; mediante el usa de COM usted puede iniciar Microsoft Word,
     llenar una plantilla de documento y guardar el resultado como un
     documento Word y enviarlo a un visitante de su sitio web. También puede
     usar COM para realizar tareas administrativas para su red y para
     configurar su servidor web (IIS); tales son apenas los usos más
     comunes; usted puede hacer mucho más con COM.
    </para>
    <para>
     A partir de PHP 5, esta extensión (y su documentación) fue re-escrita
     por completo y se ha eliminado gran parte del material confuso e
     inútil. Adicionalmente, se ofrece soporte para la creación de
     instancias y ensambles .Net usando la capa de interoperabilidad COM
     ofrecida por Microsoft.
    </para>
    <para>
     Por favor lea <link xlink:href="&url.zend.comdotnet;">este artículo</link>
     para una vista general de los cambios en ésta extensión en PHP 5.
    </para>
   </section>

   <section xml:id="com.requirements">
    &reftitle.required;
    <para>
     Las funciones COM se encuentran disponibles únicamente para la versión
     Windows de PHP.
    </para>
    <para>
     El soporte para .Net requiere PHP 5 y el entorno de desarrollo .Net.
    </para>
   </section>

   <section xml:id="com.installation">
    &reftitle.install;
    &no.install;
    &windows.builtin;
    <para>
     Usted es responsable de la instalación del soporte para los varios
     objetos COM que piensa usar (tales como MS Word); nosotros no incluimos
     todos éstos con PHP, ni podemos hacerlo.
    </para>
   </section>

   <section xml:id="com.foreach">
    <title>For Each</title>

    <para>
     A partir de PHP 5, es posible usar la sentencia <link
     linkend="control-structures.foreach">foreach</link> de PHP para iterar
     sobre los contenidos de un IEnumVariant COM/OLE estándar. En términos
     más simples, esto quiere decir que puede usar foreach en aquellas
     situaciones en donde podría haber usado <literal>For Each</literal> en
     código VB/ASP.
    </para>

   <para>
    <example>
     <title>For Each en ASP</title>
     <programlisting role="asp">
<![CDATA[
<%
Set objetoDominio = GetObject("WinNT://Domain")
For Each obj in objetoDominio
  Response.Write obj.Name & "<br />"
Next
%>
]]>
     </programlisting>
    </example>
   </para>

   <para>
    <example>
     <title>while() ... Next() en PHP 4</title>
     <programlisting role="php">
<![CDATA[
<?php
$objetoDominio = new COM("WinNT://Domain");
while ($obj = $objetoDominio->Next()) {
   echo $obj->Name . "<br />";
}
?>
]]>
     </programlisting>
    </example>
   </para>

   <para>
    <example>
     <title>foreach en PHP 5</title>
     <programlisting role="php">
<![CDATA[
<?php
$objetoDominio = new COM("WinNT://Domain");
foreach ($objetoDominio as $obj) {
   echo $obj->Name . "<br />";
}
?>
]]>
     </programlisting>
    </example>
   </para>
   </section>

   <section xml:id="com.arrays">
    <title>Matrices y propiedades COM tipo-matriz</title>

    <para>
     Muchos objetos COM exponen sus propiedades como matrices, o usando un
     acceso estilo-matriz. En PHP 4, es posible usar la sintaxis de matrices
     de PHP para leer/escribir tales propiedades, pero sólo es posible
     manipular una dimensión. Si desea leer una propiedad multi-dimensional,
     puede crear el acceso en forma de un llamado de función, en donde cada
     parámetro representa cada parámetro del acceso a la matriz, aunque no
     hay forma de escribir tal tipo de propiedad.
    </para>

    <para>
     PHP 5 introduce las siguientes características nuevas para facilitar su
     vida:

     <itemizedlist>
      <listitem>
       <para>
        Acceso a matrices multi-dimensionales, o propiedades COM que
        requieren múltiples parámetros usando la sintaxis de matrices de
        PHP. También puede escribir o definir propiedades usando esta
        técnica.
       </para>
      </listitem>

      <listitem>
       <para>
        Iterar a través de SafeArrays ("verdaderas" matrices) usando la
        estructura de control <xref linkend="control-structures.foreach"/>.
        Esto funciona ya que los SafeArrays incluyen información sobre su
        tamaño. Si una propiedad estilo-matriz implementa IEnumVariant,
        entonces también puede usar foreach para tales propiedades; eche un
        vistazo a <xref linkend="com.foreach"/> para más información sobre
        este tema.
       </para>
      </listitem>
     </itemizedlist>
    </para>

   </section>

   <section xml:id="com.exceptions">
    <title>Excepciones (PHP 5)</title>

    <para>
     Esta extensión arroja instancias de la clase
     <literal>com_exception</literal> siempre que se presente un error
     potencialmente fatal reportado por COM. Todas las excepciones COM
     tienen una propiedad <literal>code</literal> bien definida que
     corresponde con el valor de retorno HRESULT proveniente de las varias
     operaciones COM. Es posible usar este código para tomar decisiones
     programáticas sobre cómo manejar la excepción.
    </para>

   </section>

   &reference.com.ini;

   <section xml:id="com.resources">
    &reftitle.resources;
    <para>
     Esta extensión define una referencia a un componente COM devuelto por
     la obsoleta <function>com_load</function> (esta función no existe en
     PHP 5; use la clase <xref linkend="class.com"/> en su lugar).
    </para>
   </section>

   &reference.com.constants;

   <section xml:id="com.seealso">
    &reftitle.seealso;
    <para>
     Para más información sobre COM, lea la <link
     xlink:href="&url.comspecs;">especificación COM</link> o quizás eche un
     vistazo a la <link xlink:href="&url.yacl;">Otra Biblioteca COM Más (YACL por
     sus siglas en inglés)</link> de Don Box. Puede encontrar información
     adicional en nuestro FAQ sobre <xref linkend="faq.com"/>. Si está
     pensando en usar aplicaciones MS Office en el lado del servidor, es
     buena idea que lea la información encontrada aquí: <link
     xlink:href="&url.msoffice.serverside;">Consideraciones para la Automatización
     de Office en el Lado del Servidor</link>.
    </para>
   </section>

  </partintro>

 &reference.com.functions;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
