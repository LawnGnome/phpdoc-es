<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 297028 $ -->
<!-- EN-Revision: 297028 Maintainer: seros Status: ready -->
<refentry xml:id="class.dotnet" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOTNET</refname>
  <refpurpose>La clase DOTNET</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <synopsis>$obj = new <classname>DOTNET</classname>("assembly", "classname")</synopsis>
 </refsynopsisdiv>
 <refsect1 xml:id="class.dotnet.class">
  <title>Descripción</title>
  <simpara>
   La clase DOTNET permite instanciar una clase desde un montaje .Net y
   llamar a sus métodos y acceder a sus propiedades.
  </simpara>
 </refsect1>
 <refsect1 xml:id="class.dotnet.constructor">
  <title>Métodos</title>
  <methodsynopsis>
   <type>string</type><methodname>DOTNET::DOTNET</methodname>
   <methodparam><type>string</type><parameter>assembly_name</parameter></methodparam>
   <methodparam><type>string</type><parameter>class_name</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>codepage</parameter></methodparam>
  </methodsynopsis>
  <para>
   Constructor de la clase DOTNET.  <parameter>assembly_name</parameter> especifica
   el montaje que debería ser cargado, y <parameter>class_name</parameter>
   especifica la clase que instanciar en ese montaje. Opcionalmente se
   puede especificar <parameter>codepage</parameter> para usarlo en transformaciones
   de cadenas a unicode; véase la clase <xref linkend="class.com"/>
   para más detalles sobre páginas de código.
  </para>
  <para>
   El objeto devuelto es un objeto sobrecargado, lo que significa que PHP no
   ve ningún método fijo y sí ve clases regulares; en su lugar, cualquier
   acceso a una propiedad o método es pasado a través de COM y de aquí a
   DOTNET. En otras palabras, el objeto .Net es mapeado a través de la capa de
   interoperabilidad de COM proporcionada por .Net runtime.
  </para>
  <para>
   Una vez que se ha creado un objeto DOTNET, PHP lo trata de forma idéntica a cualquier
   otro objeto COM; se aplican las mismas reglas.
  </para>
  <para>
   <example xml:id="example.dotnet">
    <title>Ejemplo de DOTNET</title>
    <programlisting role="php">
<![CDATA[
<?php
 $stack = new DOTNET("mscorlib", "System.Collections.Stack");
 $stack->Push(".Net");
 $stack->Push("Hello ");
 echo $stack->Pop() . $stack->Pop();
?>
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <para>
    Necesita instanlar .Net runtime en su servidor web para tomar ventaja
    de esta característica.
   </para>
  </note>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
