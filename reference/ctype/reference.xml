<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.12 Maintainer: lboshell Status: ready -->
 <reference id="ref.ctype">
  <title>Funciones de Tipo de Caracter</title>
  <titleabbrev>ctype</titleabbrev>

  <partintro>
   <section id="ctype.intro">
    &reftitle.intro;
    <para>
     Las funciones que ofrece esta extensi&oacute;n chequean si un
     caracter o cadena se ubica dentro de una determinada clase de
     caracteres, de acuerdo a la localidad actual (vea tambi&eacute;n
     <function>setlocale</function>).
    </para>
    <para>
     Cuando son llamadas con un argumento entero, estas funciones se
     comportan exactamente como sus hom&oacute;logos de C provenientes
     de <filename>ctype.h</filename>. Esto quiere decir que si pasa un
     entero menor que 256, usar&aacute; su valor ASCII para verificar
     si se ajusta al rango especificado (los d&iacute;gitos
     est&aacute;n entre 0x30-0x39). Si el n&uacute;mero se encuentra
     entre -128 (inclusive) y 0 entonces se le sumar&aacute; 256 y el
     chequeo se realizar&aacute; sobre ese valor.
    </para>
    <para>
    Cuando son llamadas con un argumento de tipo cadena,
    chequear&aacute;n cada caracter de la cadena y solo
    devolver&aacute;n &true; si cada caracter de la cadena coincide
    con el criterio solicitado. Cuando son llamadas con una cadena
    vac&iacute;a, el resultado ser&aacute; siempre &true;.
    </para>
    <para>
     Al pasar cualquier cosa diferente a una cadena o un entero, se
     devolver&aacute; &false; inmediatamente.
    </para>
    <para>
     Debe notarse que se prefieren siempre las funciones ctype sobre
     las expresiones regulares, e incluso sobre algunas funciones
     str_* e is_* equivalentes. Esto se debe a que ctype usa una
     biblioteca C nativa y por lo tanto realiza sus procesos
     significativamente m&aacute;s r&aacute;pido.
    </para>
   </section>

   <section id="ctype.requirements">
    &reftitle.required;
    <para>
     Ninguno aparte de las funciones de la biblioteca de C
     est&aacute;ndar, la cual se encuentra disponible siempre.
    </para>
   </section>

   &reference.ctype.configure;

   <section id="ctype.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="ctype.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section id="ctype.constants">
    &reftitle.constants;
    &no.constants;
   </section>

  </partintro>

&reference.ctype.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

