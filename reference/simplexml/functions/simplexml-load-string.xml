<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.9 Maintainer: soywiz Status: revise -->
  <refentry xml:id='function.simplexml-load-string' xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>simplexml_load_string</refname>
    <refpurpose>
     Interpreta una cadena XML en un objeto
    </refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
    <methodsynopsis>
     <type>object</type><methodname>simplexml_load_string</methodname>
     <methodparam><type>string</type><parameter>data</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>class_name</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>options</parameter></methodparam>
    </methodsynopsis>
    <para>
     Esta funci&oacute;n tomar&aacute; una cadena xml v&aacute;lida 
     <parameter>data</parameter> y devolver&aacute; un <type>object</type> de clase
     <type>SimpleXMLElement</type> con propiedades conteniendo la informaci&oacute;n del
     documento xml. Si ocurre cualquier error, se devolver&aacute; &false;.
    </para>
    <para>
     Tambi&eacute;n puedes usar el par&aacute;metro opcional <parameter>class_name</parameter> de forma
     que <function>simplexml_load_string</function> devolver&aacute; un objeto de la clase
     especificada. Esa clase debe extender la clase
      <type>SimpleXMLElement</type>.
    </para>
    <para>
     Desde PHP 5.1.0 y Libxml 2.6.0, tambi&eacute;n puedes usar el par&aacute;metro
     <parameter>options</parameter> para especificar <link
      linkend="libxml.constants">par&aacute;metros de Libxml adicionales</link>.
    </para>
    <para>
     <example>
      <title>Interpreta una cadena XML</title>
      <programlisting role="php">
<![CDATA[
<?php
$string = <<<XML
<?xml version='1.0'?> 
<document>
 <title>Forty What?</title>
 <from>Joe</from>
 <to>Jane</to>
 <body>
  I know that's the answer -- but what's the question?
 </body>
</document>
XML;

$xml = simplexml_load_string($string);

var_dump($xml);
?>
]]>
      </programlisting>
      <para>
       This script will display:
      </para>
      <screen>
<![CDATA[
SimpleXMLElement Object
(
  [title] => Forty What?
  [from] => Joe
  [to] => Jane
  [body] =>
   I know that's the answer -- but what's the question?
)
]]>
      </screen>
      <simpara>
       A partir de aqu&iacute;, puedes puedes acceder al nodo <literal>body</literal> mediante <literal>$xml->body</literal>
       y a cualquier otro elemento.
      </simpara>
     </example>
    </para>
    <para>
     Vea tambi&eacute;n: <function>simplexml_load_file</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
