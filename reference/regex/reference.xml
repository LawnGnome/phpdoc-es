<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.regex">
  <title>Funciones para expresiones regulares</title>
  <titleabbrev>Regexps</titleabbrev>
  <partintro>
   <para>
    Las expresiones regulares se usan en PHP para manipular cadenas
	complejas. Las funciones que soportan expresiones regulares son:

    <itemizedlist>
     <listitem>
      <simpara><function>ereg</function></simpara>
     </listitem>
     <listitem>
      <simpara><function>ereg_replace</function></simpara>
     </listitem>
     <listitem>
      <simpara><function>eregi</function></simpara>
     </listitem>
     <listitem>
      <simpara><function>eregi_replace</function></simpara>
     </listitem>
     <listitem>
      <simpara><function>split</function></simpara>
     </listitem>
    </itemizedlist>

	En todas estas funciones, el primer argumento es una expresi&oacute;n
	regular.  PHP utiliza las expresiones regulares extendidas de
	POSIX, definidas en POSIX 1003.2.  Para una descripci&oacute;n completa
	de las expresiones regulares POSIX, ver las p&aacute;ginas de manual de
	regex incluidas en el directorio regex de la distribuci&oacute;n de PHP.
	Est&aacute;n en formato de p&aacute;gina de manual, por lo que se deben leer con
	una orden como <command>man /usr/local/src/regex/regex.7</command>.

   <!-- Should add discussion of PCRE functions here. --></para>

   <para>
    <example>
     <title>Ejemplos de expresiones regulares</title>
     <programlisting>
ereg(&quot;abc&quot;,$string);            
/* Devuelve true si &quot;abc&quot;
   se encuentra en $string. */

ereg(&quot;^abc&quot;,$string);
/* Devuelve true si &quot;abc&quot;
   se encuentra al comienzo de $string. */

ereg("abc$",$string);
/* Devuelve true si &quot;abc&quot;
   se encuentra al final de $string. */

eregi("(ozilla.[23]|MSIE.3)",$HTTP_USER_AGENT);  
/* Devuelve true si el navegador cliente
   es Netscape 2, 3 o MSIE 3. */

ereg("([[:alnum:]]+) ([[:alnum:]]+) ([[:alnum:]]+)",
     $string,$regs); 
/* Pone tres palabras separadas por espacios
   en $regs[1], $regs[2] y $regs[3]. */

$string = ereg_replace("^","&lt;BR&gt;",$string); 
/* Coloca la etiqueta &lt;BR&gt; al comienzo de $string. */
 
$string = ereg_replace("$","&lt;BR&gt;",$string); 
/* Coloca la etiqueta &lt;BR&gt; al final de $string. */

$string = ereg_replace("\n","",$string);
/* Elimina los caracteres fin-de-l&iacute;nea de $string. */
     </programlisting>
    </example></para>

  </partintro>

&reference.regex.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

