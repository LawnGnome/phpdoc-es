<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.14 Maintainer: lboshell Status: ready -->
<!-- Purpose: basic.text -->
<!-- Membership: core -->

 <reference xml:id="ref.regex" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Funciones de Expresiones Regulares (POSIX Extendido)</title>
  <titleabbrev>Regex POSIX</titleabbrev>

  <partintro>
   <section xml:id="regex.intro">
    &reftitle.intro;
    <tip>
     <para>
      PHP ofrece también soporte de expresiones regulares usando una
      sintaxis compatible con Perl usando las <link
      linkend="ref.pcre">Funciones PCRE</link>. Tales funciones soportan
      coincidencias no-ambiciosas, aserciones, subpatrones condicionales, y
      un número de características adicionales que no son soportadas por las
      sintaxis de expresiones regulares POSIX-extendido.
     </para>
    </tip>
    <warning>
     <para>
      Estas expresiones regulares no son seguras con material binario. Las
      <link linkend="ref.pcre">Funciones PCRE</link> lo son.
     </para>
    </warning>
    <para>
     Las expresiones regulares son usadas para la manipulación compleja de
     cadenas. PHP usa expresiones regulares POSIX extendidas, tal y como se
     definen por POSIX 1003.2. Para una descripción completa de las
     expresiones regulares POSIX, vea las <link
     xlink:href="&url.regex.man;">páginas de manual de regex</link>
     incluidas en el directorio regex en la distribución de PHP. Se
     encuentran en formato manpage, así que querrá hacer algo del estilo de
     <command>man /usr/local/src/regex/regex.7</command> para leerlas.
    </para>
   </section>

   <section xml:id="regex.requirements">
    &reftitle.required;
    &no.requirement;
   </section>

   &reference.regex.configure;

   <section xml:id="regex.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section xml:id="regex.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   <section xml:id="regex.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section xml:id="regex.examples">
    &reftitle.examples;
    <para>
     <example>
     <title>Ejemplos de Expresiones Regulares</title>
      <programlisting role="php">
<![CDATA[
<?php
// Devuelve true si "abc" se encuentra en cualquier lugar de $cadena.
ereg("abc", $cadena);

// Devuelve true si "abc" es encontrado al comienzo de $cadena
ereg("^abc", $cadena);

// Devuelve true si "abc" es encontrado al final de $cadena.
ereg("abc$", $cadena);

// Devuelve true si el navegador del cliente es Netscape 2, 3 or MSIE 3.
eregi("(ozilla.[23]|MSIE.3)", $_SERVER["HTTP_USER_AGENT"]);

// Coloca tres palabras separadas por espacios en $regs[1], $regs[2] y $regs[3].
ereg("([[:alnum:]]+) ([[:alnum:]]+) ([[:alnum:]]+)", $cadena, $regs);

// Coloca una etiqueta <br /> al comienzo de $cadena.
$cadena = ereg_replace("^", "<br />", $cadena);

// Coloca una etiqueta <br /> al final de $cadena.
$cadena = ereg_replace("$", "<br />", $cadena);

// Se deshace de cualquier caracter de salto de línea en $cadena.
$cadena = ereg_replace("\n", "", $cadena);
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>

   <section xml:id="regex.seealso">
    &reftitle.seealso;
    <para>
     Para consultar sobre expresiones regulares en una sintaxis compatible
     con Perl, eche un vistazo a las <link linkend="ref.pcre">Funciones
     PCRE</link>. Las coincidencias más simples de comodines tipo intérprete
     de comandos son ofrecidas por <function>fnmatch</function>.
    </para>
   </section>
  </partintro>

  &reference.regex.entities.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

