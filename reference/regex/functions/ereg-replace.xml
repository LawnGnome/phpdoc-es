<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/regex.xml, last change in rev 1.1 -->
<!-- last change to 'ereg-replace' in en/ tree in rev 1.2 -->
  <refentry id="function.ereg-replace">
   <refnamediv>
    <refname>ereg_replace</refname>
    <refpurpose>reemplaza expresiones regulares</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>string</type><methodname>ereg_replace</methodname>
     <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
     <methodparam><type>string</type><parameter>replacement</parameter></methodparam>
     <methodparam><type>string</type><parameter>string</parameter></methodparam>
     </methodsynopsis>
    <para>
	 Esta funci&oacute;n examina <parameter>string</parameter> buscando
	 coincidencias de <parameter>pattern</parameter>, y reemplaza el
	 texto encontrado con <parameter>replacement</parameter>.</para>

    <para>
	 Devuelve la cadena modificada. Si no hay coincidencias que
	 reemplazar, devuelve la cadena original.</para>

    <para>
	 Si <parameter>pattern</parameter> contiene subcadenas entre
	 par&eacute;ntesis, <parameter>replacement</parameter> puede contener
	 subcadenas de la forma
	 <literal>\\<replaceable>cifra</replaceable></literal>, que ser&aacute;n
	 reemplazadas por el texto que coincide con la subcadena entre
	 par&eacute;ntesis que ocupa el lugar indicado por la cifra;
	 <literal>\\0</literal> produce el contenido total de la cadena.
	 Se pueden usar hasta nueve subcadenas. Los par&eacute;ntesis pueden
	 anidarse; en este caso se cuentan los par&eacute;ntesis de
	 apertura.</para>

    <para>
	 Si no se encuentran coincidencias en
	 <parameter>string</parameter>, se devuelve
	 <parameter>string</parameter> sin cambios.</para>

    <para>
	 Por ejemplo, el siguiente fragmento de c&oacute;digo imprime "This was a
	 test" tres veces:
     <example>
      <title>ereg_replace() example</title>
      <programlisting>
$string = "This is a test";
echo ereg_replace( " is", " was", $string );
echo ereg_replace( "( )is", "\\1was", $string );
echo ereg_replace( "(( )is)", "\\2was", $string );
      </programlisting>
     </example></para>

    <para>
	 Ver tambi&eacute;n <function>ereg</function>, <function>eregi</function>,
     y <function>eregi_replace</function>.</para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
