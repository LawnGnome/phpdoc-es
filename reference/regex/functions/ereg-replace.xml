<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 288721 $ -->
<!-- EN-Revision: 288721 Maintainer: seros Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.ereg-replace">
 <refnamediv>
  <refname>ereg_replace</refname>
  <refpurpose>Sustituye una expresión regular</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>ereg_replace</methodname>
   <methodparam><type>string</type><parameter>patrón</parameter></methodparam>
   <methodparam><type>string</type><parameter>sustitución</parameter></methodparam>
   <methodparam><type>string</type><parameter>cadena</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Esta función busca en <parameter>cadena</parameter> coincidencias de
   <parameter>patrón</parameter>, después reemplaza el texto coincidido
   con <parameter>sustitución</parameter>.
  </simpara>
  &warn.deprecated.function-5-3-0.removed-6-0-0;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>patrón</parameter></term>
     <listitem>
      <para>
       Una expresión regular POSIX extendido.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sustitución</parameter></term>
     <listitem>
      <para>
       Si <parameter>patrón</parameter> contiene sub-cadenas entre paréntesis,
       <parameter>sustitución</parameter> puede contener sub-cadenas de la forma
       <literal>\\<replaceable>dígito</replaceable></literal>, las cuales serán
       sustituidas por el texto que coincida con la sub-cadena entre paréntesis que
       que coincida con el número marcado por dígito; <literal>\\0</literal> producirá
       el contenido completo de la cadena. Se pueden usar hasta nueve sub-cadenas.
       Los paréntesis se pueden anidar, en cuyo caso son contados por los paréntesis de apertura.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cadena</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Se devuelve la cadena modificada. Si no se encontraron coincidencias en
   <parameter>cadena</parameter>, ésta será devuelta sin cambios.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Por ejemplo, el siguiente trozo de código imprime "This was a test"
   tres veces:
  </para>
  <para>
   <example>
    <title><function>ereg_replace</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php

$string = "This is a test";
echo str_replace(" is", " was", $string);
echo ereg_replace("( )is", "\\1was", $string);
echo ereg_replace("(( )is)", "\\2was", $string);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Una cosa a tener en cuenta es que si usa un valor integer como
   el parámetro <parameter>sustitución</parameter>, puede que no obtenga
   los resultados que esperaba. Esto es a causa de que
   <function>ereg_replace</function> interpretará el número como
   el valor ordinal de un carácter, y lo aplica. Por ejemplo:
  </para>
  <para>
   <example>
    <title>Ejemplo de <function>ereg_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Esto no funcionará como se esperaba. */
$num = 4;
$string = "This string has four words.";
$string = ereg_replace('four', $num, $string);
echo $string;   /* Salida: 'This string has   words.' */

/* Estó funcionará. */
$num = '4';
$string = "This string has four words.";
$string = ereg_replace('four', $num, $string);
echo $string;   /* Salida: 'This string has 4 words.' */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Sustituye URLs por vínculos</title>
    <programlisting role="php">
<![CDATA[
<?php
$text = ereg_replace("[[:alpha:]]+://[^<>[:space:]]+[[:alnum:]/]",
                     "<a href=\"\\0\">\\0</a>", $text);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.regex.deprecated;
  <tip>
   <para>
    <function>preg_replace</function>, la cual usa una sintaxis de expresiones
    regulares compatibles con Perl, es a menudo una alternativa más rápida que
    <function>ereg_replace</function>.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ereg</function></member>
    <member><function>eregi</function></member>
    <member><function>eregi_replace</function></member>
    <member><function>str_replace</function></member>
    <member><function>preg_match</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
