<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.7 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.filter-var-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>filter_var_array</refname>
  <refpurpose>Obtiene múltiples variables y opcionalmente las
  filtra</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>filter_var_array</methodname>
   <methodparam><type>array</type><parameter>datos</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>definicion</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función es útil para recuperar varios valores sin llamar
   <function>filter_var</function> repetitivamente.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>datos</parameter></term>
     <listitem>
      <para>
       Una matriz con claves tipo cadena, que contiene los datos a filtrar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>definicion</parameter></term>
     <listitem>
      <para>
       Una matriz que define los argumentos. Una clave válida es un valor
       tipo <type>string</type> que contenga un nombre de variable, y un
       valor válido es un tipo de filtro, o un valor tipo <type>array</type>
       que especifique el filtro, las banderas y las opciones. Si el valor
       es una matriz, las claves válidas son <literal>filter</literal>, que
       especifica el tipo de filtro, <literal>flags</literal> que especifica
       las banderas que se apliquen al filtro, y <literal>options</literal>
       que especifica las opciones del filtro.  Vea el ejemplo a
       continuación para más detalles.
      </para>
      <para>
       Este parámetro puede ser también un entero que contenga una <link
       linkend="filter.intro">constante de filtro</link>. Entonces todos los
       valores en la matriz de entrada son filtrados por este filtro.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Una matriz que contiene los valores de las variables solicitadas en caso
   de éxito, o &false; si ocurre un error. Un valor de matriz será &false;
   si el filtro falla, o &null; si la variable no es establecida.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>filter_var_array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
error_reporting(E_ALL | E_STRICT);
$datos = array(
    'id_producto'    => 'libgd<script>',
    'componente'     => '10',
    'versiones'      => '2.0.33',
    'prueba_escalar' => array('2', '23', '10', '12'),
    'prueba_matriz'  => '2',
);

$args = array(
    'id_producto'    => FILTER_SANITIZE_ENCODED,
    'componente'     => array('filter'    => FILTER_VALIDATE_INT,
                            'flags'     => FILTER_FORCE_ARRAY,
                            'options'   => array('min_range' => 1, 'max_range' => 10)
                           ),
    'versiones'      => FILTER_SANITIZE_ENCODED,
    'no_existe'      => FILTER_VALIDATE_INT,
    'prueba_escalar' => array(
                              'filter' => FILTER_VALIDATE_INT,
                              'flags'  => FILTER_REQUIRE_SCALAR,
                             ),
    'prueba_matriz'  => array(
                              'filter' => FILTER_VALIDATE_INT,
                              'flags'  => FILTER_FORCE_ARRAY,
                             )

);

$mis_entradas = filter_var_array($datos, $args);

var_dump($mis_entradas);
echo "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(6) {
  ["id_producto"]=>
  string(17) "libgd%3Cscript%3E"
  ["componente"]=>
  array(1) {
    [0]=>
    int(10)
  }
  ["versiones"]=>
  string(6) "2.0.33"
  ["no_existe"]=>
  NULL
  ["prueba_escalar"]=>
  bool(false)
  ["prueba_matriz"]=>
  array(1) {
    [0]=>
    int(2)
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>filter_input_array</function></member>
    <member><function>filter_var</function></member>
    <member><function>filter_input</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
