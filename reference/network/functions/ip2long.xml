<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.13 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/network.xml, last change in rev 1.18 -->
  <refentry id="function.ip2long">
   <refnamediv>
    <refname>ip2long</refname>
    <refpurpose>
      Convierte una cadena que contiene una direcci&oacute;n con
      puntos del Protocolo de Internet (IPv4) en una direcci&oacute;n
      apropiada
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>int</type><methodname>ip2long</methodname>
      <methodparam><type>string</type><parameter>direccion_ip</parameter></methodparam>
     </methodsynopsis>
    <para>
     La funci&oacute;n <function>ip2long</function> genera una
     direcci&oacute;n de red Internet IPv4 desde su
     representaci&oacute;n en formato est&aacute;ndar de Internet
     (cadena con puntos). Si <parameter>direccion_ip</parameter> es
     inv&aacute;lida, entonces se devuelve <literal>-1</literal>.
     Note que <literal>-1</literal> no eval&uacute;a a &false; en PHP.
    </para>
    <note>
     <para>
      A partir de PHP 5.0.0, <function>ip2long</function> devuelve
      &false; cuando <parameter>ip_address</parameter> es
      inv&aacute;lido.
     </para>
    </note>
    <example>
     <title>Ejemplo de <function>ip2long</function></title>
     <programlisting role="php">
<![CDATA[
<?php
$ip = gethostbyname('www.example.com');
$salida = "Las siguientes URLs son equivalentes:<br />\n";
$salida .= 'http://www.example.com/, http://' . $ip . '/, y http://' . sprintf("%u", ip2long($ip)) . "/<br />\n";
echo $salida;
?>
]]>
     </programlisting>
    </example>
    <para>
     <note>
      <para>
       Ya que el tipo entero de PHP tiene signo, y muchas direcciones
       IP resultar&aacute;n en enteros negativos, necesita usar el
       especificador de formato "%u" de <function>sprintf</function> o
       <function>printf</function> para obtener la
       representaci&oacute;n de cadena de la direcci&oacute;n IP sin
       signo.
      </para>
     </note>
    </para>
    <para>
     Este segundo ejemplo muestra c&oacute;mo imprimir una
     direcci&oacute;n convertida con la funci&oacute;n
     <function>printf</function> tanto en PHP 4 como en PHP 5:
    </para>
    <example>
     <title>Desplegar una direcci&oacute;n IP (PHP 4)</title>
     <programlisting role="php">
<![CDATA[
<?php
$ip   = gethostbyname('www.example.com');
$long = ip2long($ip);

if ($long == -1 || $long === FALSE) {
    echo 'IP inv&aacute;lida, por favor intente de nuevo';
} else {
    echo $ip   . "\n";           // 192.0.34.166
    echo $long . "\n";           // -1073732954
    printf("%u\n", ip2long($ip)); // 3221234342
}
?>
]]>
     </programlisting>
    </example>
    <para>
     <function>ip2long</function> no deber&iacute;a usarse como la
     &uacute;nica forma de validaci&oacute;n de IP. Comb&iacute;nela
     con <function>long2ip</function>:
    </para>
    <example>
     <title>Validaci&oacute;n de IP</title>
     <programlisting role="php">
<![CDATA[
<?php
// asegurarse de que las IP son validas. tambien convierte una IP
// no-completa en un cuarteto debidamente separado con puntos, como
// se explica mas adelante.
$ip = long2ip(ip2long("127.0.0.1")); // "127.0.0.1"
$ip = long2ip(ip2long("10.0.0")); // "10.0.0.0"
$ip = long2ip(ip2long("10.0.256")); // "10.0.1.0"
?>
]]>
     </programlisting>
    </example>
    <para>
     <function>ip2long</function> trabajar&aacute; tambi&eacute;n con
     direcciones IP no-completas. Lea <ulink
     url="&url.ip2long.tech;">&url.ip2long.tech;</ulink> para
     m&aacute;s informaci&oacute;n.
    </para>
    <note>
     <para>
      <function>ip2long</function> devolver&aacute;
      <literal>-1</literal> (PHP 4) o &false; (PHP 5) para la IP
      <literal>255.255.255.255</literal>.
     </para>
    </note>
    <para>
     Vea tambi&eacute;n <function>long2ip</function> y
     <function>sprintf</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
