<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.17 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/network.xml, last change in rev 1.2 -->
  <refentry id="function.fsockopen">
   <refnamediv>
    <refname>fsockopen</refname>
    <refpurpose>
     Abrir una conexi&oacute;n de sockets de dominio de Internet o
     Unix
    </refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>resource</type><methodname>fsockopen</methodname>
      <methodparam><type>string</type><parameter>destino</parameter></methodparam>
      <methodparam><type>int</type><parameter>puerto</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>&amp;errno</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>&amp;errstr</parameter></methodparam>
      <methodparam choice="opt"><type>float</type><parameter>tiempo_espera</parameter></methodparam>
     </methodsynopsis>
    <para>
     Inicia una conexi&oacute;n a trav&eacute;s de sockets con el
     recurso especificado por <parameter>destino</parameter>. PHP
     soporta el uso de destinos en los dominios de Internet y Unix,
     tal y como se describe en <xref linkend="transports"/>. Una lista
     de transportes soportados puede recuperarse usando
     <function>stream_get_transports</function>.
    </para>
    <note>
     <simpara>
      Si necesita establecer un tiempo de espera para la
      lectura/escritura de datos a trav&eacute;s del socket, use
      <function>stream_set_timeout</function>, dado que el
      par&aacute;metro <parameter>tiempo_espera</parameter> de
      <function>fsockopen</function> s&oacute;lo se aplica cuando se
      conecta con el socket.
     </simpara>
    </note>
    <para>
     A partir de PHP 4.3.0, si ha compilado el soporte para OpenSSL,
     usted puede usar un prefijo sobre el
     <parameter>nombre_host</parameter>, ya sea
     '<literal>ssl://</literal>' o '<literal>tls://</literal>' para
     usar una conexi&oacute;n de cliente SSL o TLS sobre TCP/IP para
     conectarse con el host remoto.
    </para>
    <para>
     <function>fsockopen</function> devuelve un apuntador de archivo
     el cual puede ser usado junto con otras funciones de archivos
     (como <function>fgets</function>, <function>fgetss</function>,
     <function>fwrite</function>, <function>fclose</function>, y
     <function>feof</function>).
    </para>
    <para>
     Si la llamada falla, devolver&aacute; &false;, y si los
     argumentos opcionales <parameter>errno</parameter> y
     <parameter>errstr</parameter> est&aacute;n presentes,
     ser&aacute;n modificados para indicar el error de nivel de
     sistema real que ocurri&oacute; en la llamada de sistema
     <literal>connect()</literal>. Si el valor devuelto en
     <parameter>errno</parameter> es <literal>0</literal> y la
     funci&oacute;n devolvi&oacute; &false;, es un indicio de que el
     error ocurri&oacute; antes de la llamada a
     <literal>connect()</literal>. Lo m&aacute;s probable es que esto
     se deba a un problema con la inicializaci&oacute;n del
     socket. Note que los argumentos <parameter>errno</parameter> y
     <parameter>errstr</parameter> siempre ser&aacute;n pasados por
     referencia.
    </para>
    <para>
     Dependiendo del entorno, el dominio Unix o el tiempo de espera de
     conexi&oacute;n opcional pueden no estar disponibles.
    </para>
    <para>
     El socket ser&aacute; abierto por defecto en modo de
     bloqueo. Puede cambiar a modo de no-bloqueo usando
     <function>stream_set_blocking</function>.
     <example>
      <title>Ejemplo de <function>fsockopen</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$da = fsockopen("www.example.com", 80, $errno, $errstr, 30);
if (!$da) {
    echo "$errstr ($errno)<br />\n";
} else {
    $salida = "GET / HTTP/1.1\r\n";
    $salida .= "Host: www.example.com\r\n";
    $salida .= "Connection: Close\r\n\r\n";

    fwrite($da, $salida);
    while (!feof($da)) {
        echo fgets($da, 128);
    }
    fclose($da);
}
?>
]]>
      </programlisting>
     </example>
     El ejemplo a continuaci&oacute;n presenta la forma de recuperar
     la fecha y hora desde el servicio UDP "daytime" (puerto 13) en su
     propia m&aacute;quina.
     <example>
     <title>Uso de una conexi&oacute;n UDP</title>
     <programlisting role="php">
<![CDATA[
<?php
$da = fsockopen("udp://127.0.0.1", 13, $errno, $errstr);
if (!$da) {
    echo "ERROR: $errno - $errstr<br />\n";
} else {
    fwrite($da, "\n");
    echo fread($da, 26);
    fclose($da);
}
?>
]]>
     </programlisting>
     </example>
     <warning>
      <simpara>
       En ocasiones, los sockets UDP parecer&aacute;n haber sido
       abiertos sin errores, incluso si el host remoto no puede ser
       contactado. El error s&oacute;lo se percibir&aacute; cuando lea
       o escriba datos hacia/desde el socket. La raz&oacute;n es que
       UDP es un protocolo "sin conexi&oacute;n", lo que quiere decir
       que el sistema operativo no intenta establecer un enlace con el
       socket hasta que necesite realmente enviar o recibir datos.
      </simpara>
     </warning>
     &ipv6.brackets;
     <note>
      <para>
       El par&aacute;metro de tiempo de espera fue introducido en PHP
       3.0.9 y el soporte para UDP fue a&ntilde;adido en PHP 4.
      </para>
     </note>
     Vea tambi&eacute;n <function>pfsockopen</function>, 
     <function>stream_set_blocking</function>,
     <function>stream_set_timeout</function>, <function>fgets</function>,
     <function>fgetss</function>, <function>fwrite</function>,
     <function>fclose</function>, <function>feof</function>, y
     la <link linkend="ref.curl">extensi&oacute;n Curl</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
