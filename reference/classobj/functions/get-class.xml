<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.8 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/classobj.xml, last change in rev 1.4 -->
  <refentry id="function.get-class">
   <refnamediv>
    <refname>get_class</refname>
    <refpurpose>Devuelve el nombre de la clase de un
    objeto</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>string</type><methodname>get_class</methodname>
      <methodparam choice="opt"><type>object</type><parameter>obj</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esta funci&oacute;n devuelve el nombre de la clase de la cual el
     objeto <parameter>obj</parameter> es una instancia. Devuelve
     &false; si <parameter>obj</parameter> no es un objeto.
    </para>
    <note>
     <simpara>
      Una clase definida en una extensi&oacute;n PHP es devuelta en su
      notaci&oacute;n original. En PHP 4
      <function>get_class</function> devuelve un nombre de clase
      definido por el usuario en min&uacute;sculas, pero en PHP
      devolver&aacute; el nombre de la clase en su notaci&oacute;n
      original tambi&eacute;n, al igual que con los nombres de clase
      de las extensiones PHP.
     </simpara>
    </note>
    <note>
     <para>
      A partir de PHP 5, <parameter>obj</parameter> es opcional si se
      llama desde el m&eacute;todo del objeto.
     </para>
    </note>
    <para>
     <example>
      <title>Uso de <function>get_class</function></title>
      <programlisting role="php">
<![CDATA[
<?php

class foo {
    function foo()
    {
    // implementa alguna logica
    }

    function nombre()
    {
        echo "Mi nombre es " , get_class($this) , "\n";
    }
}

// crear un objeto
$bar = new foo();

// llamada externa
echo "Su nombre es " , get_class($bar) , "\n";

// llamada interna
$bar->nombre();

?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
Su nombre es foo
Mi nombre es foo
]]>
      </screen>
     </example>
    </para>
    <para>
     Vea tambi&eacute;n <function>get_parent_class</function>,
     <function>gettype</function>, e
     <function>is_subclass_of</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
