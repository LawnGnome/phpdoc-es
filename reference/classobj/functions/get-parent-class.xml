<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.10 Maintainer: lboshell Status: ready -->
<refentry id="function.get-parent-class">
 <refnamediv>
  <refname>get_parent_class</refname>
  <refpurpose>Recupera el nombre de la clase padre para un objeto o
  clase</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>get_parent_class</methodname>
   <methodparam choice="opt"><type>mixed</type><parameter>objeto</parameter></methodparam>
  </methodsynopsis>
  <para>
   Recupera el nombre de la clase padre para el objeto o clase.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>objeto</parameter></term>
     <listitem>
      <para>
       El objeto a probar o el nombre de clase
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el nombre de la clase padre de la clase de la cual
   <parameter>objeto</parameter> es una instancia o nombre.
  </para>
  <para>
   Si es llamada sin un parámetro desde afuera de un objeto, esta función
   devuelve &false;.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Antes de 5.1.0</entry>
       <entry>
        Si es llamada sin un parámetro desde afuera de un objeto, esta
        función hubiera devuelto &null; sin una advertencia.
       </entry>
      </row>
      <row>
       <entry>A partir de 5.0.0</entry>
       <entry>
        El parámetro <parameter>objeto</parameter> es opcional si es llamado
        desde el método del objeto.
       </entry>
      </row>
      <row>
       <entry>A partir de 4.0.5</entry>
       <entry>
        Si <parameter>objeto</parameter> es una cadena, devuelve el nombre
        de la clase padre de la clase con ese nombre.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Uso de <function>get_parent_class</function></title>
    <programlisting role="php">
<![CDATA[
<?php

class padre {
    function padre()
    {
    // implementa alguna lógica
    }
}

class hijo extends padre {
    function hijo()
    {
        echo "Soy el hijo de " , get_parent_class($this) , "\n";
    }
}

class hijo2 extends padre {
    function hijo2()
    {
        echo "Soy el hijo de " , get_parent_class('hijo2') , " también\n";
    }
}

$foo = new hijo();
$bar = new hijo2();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Soy el hijo de padre
Soy el hijo de padre también
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_class</function></member>
    <member><function>is_subclass_of</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
