<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/ifx.xml, last change in rev 1.1 -->
<!-- last change to 'ifx-prepare' in en/ tree in rev 1.2 -->
  <refentry id="function.ifx-prepare">
   <refnamediv>
    <refname>ifx_prepare</refname>
    <refpurpose>Prepara una sentencia SQL para su ejecuci&oacute;n</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>int</type><methodname>ifx_prepare</methodname>
     <methodparam><type>string</type><parameter>query</parameter></methodparam>
     <methodparam><type>int</type><parameter>conn_id</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>cursor_def</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>blobidarray</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve un entero (integer) <parameter>result_id</parameter> para usarlo con
     <function>ifx_do</function>. Es definido "affected_rows" (registros procesados) y
     se puede obtener mediante la funci&oacute;n <function>ifx_affected_rows</function>.
    </para><para>
     Prepara una consulta (<parameter>query</parameter>) sobre una conexi&oacute;n
     (<parameter>link_identifier</parameter>). Un cursor es definido y abierto
     para las consultas de selecci&oacute;n. El par&aacute;metro opcional tipo de cursor
     (<parameter>cursor_type</parameter>) te permite que sea un cursor de tipo
     "scroll" y/o "hold". Es una m&aacute;scara y puede ser IFX_SCROLL, IFX_HOLD o ambos.
    </para><para>
     Para cualquier tipo de consulta el n&uacute;mero estimado de registros afectados (procesados) es
     guardado y puede ser obtenido mediante <function>ifx_affected_rows</function>.
    </para><para>
     Si tienes columnas BLOB (BYTE o TEXT) en una consulta, puedes
     a&ntilde;adir un par&aacute;metro <parameter>blobidarray</parameter> conteniendo los
     identificadores de blob y sustituir los valores de esas columnas por una "?" en
     el texto de la consulta.
    </para><para>
     Si el contenido de la columna de tipo TEXT (o BYTE) lo permite, puedes tambi&eacute;n
     usar "ifx_textasvarchar(1)" y "ifx_byteasvarchar(1)". Esto supone manejar
     columnas de tipo TEXT (o BYTE) como si fueran columnas normales de tipo VARCHAR
     (pero teniendo en cuenta que tendr&aacute;n un mayor tama&ntilde;o que el habitual), para
     consultas de selecci&oacute;n y no necesitas preocuparte por los identificadores de blob.
    </para><para>
     La opci&oacute;n por defecto ifx_textasvarchar(0) o ifx_byteasvarchar(0) devuelve
     identificadores de blob (valores enteros) para las consultas de selecci&oacute;n. Puedes
     obtener el contenido del blob como una cadena o un fichero con las funciones para
     blob (ver m&aacute;s adelante).
    </para><para>
     Examina tambi&eacute;n: <function>ifx_do</function>.</para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
