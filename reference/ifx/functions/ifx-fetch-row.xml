<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.5 Maintainer: javi Status: ready -->
<!-- splitted from ./en/functions/ifx.xml, last change in rev 1.2 -->
  <refentry xml:id="function.ifx-fetch-row" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>ifx_fetch_row</refname>
    <refpurpose>Obtiene registros como un array (vector) enumerado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>array</type><methodname>ifx_fetch_row</methodname>
     <methodparam><type>int</type><parameter>result_id</parameter></methodparam>
     <methodparam choice="opt"><type>mixed</type><parameter>position</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve un array (vector) correspondiente a la fila le&iacute;da o &false; si no hay m&aacute;s 
     registros.
    </para>
	<para>
     Las columnas blob son devueltas como identificadores de blob enteros (integer)
     para usarlos con <function>ifx_get_blob</function> a menos que hayas usado
     ifx_textasvarchar(1) o ifx_byteasvarchar(1), en cuyo caso los blobs son
     devueltos como cadenas de texto. Devuelve &false; si hubo error.
    </para>
	<para>
     <parameter>result_id</parameter> es un identificador v&aacute;lido del resultado de
     <function>ifx_query</function> o <function>ifx_prepare</function> (s&oacute;lo para
     consultas de selecci&oacute;n).
    </para>
	<para>
     <parameter>position</parameter> es un par&aacute;metro opcional
     para una operaci&oacute;n de lectura sobre un cursor de tipo "scroll":
     "NEXT" (siguiente), "PREVIOUS" (anterior), "CURRENT" (actual), "FIRST" (primero),
     "LAST" (&uacute;ltimo) o un  n&uacute;mero. Si se especifica un n&uacute;mero, un registro concreto
     es le&iacute;do. Este par&aacute;metro opcional es s&oacute;lo v&aacute;lido para cursores de tipo scroll.
    </para>
	<para>
     <function>ifx_fetch_row</function> lee el contenido de un registro de la consulta
     representada por el identificador de resultado indicado. La fila (registro) es devuelta en
     un array. Cada columna es guarda en un array, empezando &eacute;ste desde cero.
    </para>
	<para>
     Las llamadas posteriores a <function>ifx_fetch_row</function> devolver&aacute;n el registro
     siguiente en el resultado de la consulta, o &false; si no hay m&aacute;s filas.
    </para>
	<para>
    <example>
     <title>Leer registros de Informix</title>
     <programlisting role="php">
<![CDATA[
<?php
$rid = ifx_prepare ("select * from emp where name like " . $name,
                     $connid, IFX_SCROLL);
if (! $rid) {
    /* ... error ... */
}
$rowcount = ifx_affected_rows($rid);
if ($rowcount > 1000) {
    printf ("Demasiados registros en el resultado (%d)\n<br />", $rowcount);
    die ("Por favor, restringe tu consulta<br />\n");
}
if (! ifx_do ($rid)) {
   /* ... error ... */
}
$row = ifx_fetch_row ($rid, "NEXT");
while (is_array($row)) {
    for(reset($row); $fieldname=key($row); next($row)) {
        $fieldvalue = $row[$fieldname];
        printf ("%s = %s,", $fieldname, $fieldvalue);
    }
    printf("\n<br />");
    $row = ifx_fetch_row ($rid, "NEXT");
}
ifx_free_result ($rid);
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
