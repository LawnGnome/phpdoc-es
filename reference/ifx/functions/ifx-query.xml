<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.8 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/ifx.xml, last change in rev 1.2 -->
  <refentry id="function.ifx-query">
   <refnamediv>
    <refname>ifx_query</refname>
    <refpurpose>Enviar una consulta Informix</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
     <methodsynopsis>
      <type>resource</type><methodname>ifx_query</methodname>
      <methodparam><type>string</type><parameter>consulta</parameter></methodparam>
      <methodparam><type>resource</type><parameter>id_enlace</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>tipo_cursor</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>
        matriz_id_blob
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve un identificador de resultado válido si tuvo éxito, o
     &false; si ocurrió un error.
    </para>
    <para>
     Un recurso "id_resultado" es usado por otras funciones para
     obtener los resultados de la consulta. Define "filas_afectadas"
     para su consulta a través de la función
     <function>ifx_affected_rows</function>.
    </para>
    <para>
     <function>ifx_query</function> envía una consulta a la base de
     datos activa actualmente en el servidor, la cual está asociada
     con el identificador de enlace dado. <!-- If the link identifier
     isn't specified, the last opened link is Bassumed.  If no link is
     open, the function tries to establish a link as if
     <function>ifx_connect</function> was called, and use it. -->
    </para>
    <para>
     Ejecuta <parameter>consulta</parameter> sobre la conexión
     <parameter>id_enlace</parameter>. En el caso de consultas
     "tipo-select", un cursor es declarado y abierto. El parámetro
     opcional <parameter>tipo_cursor</parameter> le permite hacer que
     éste sea un cursor "scroll" o "hold". Es una máscara de bits y
     puede ser IFX_SCROLL, IFX_HOLD, o ambos unidos mediante la
     operación lógica OR. Las consultas que no son de selección son de
     "ejecución inmediata". IFX_SCROLL e IFX_HOLD son constantes
     simbólicas, y como tales no deben encontrarse entre comillas. Si
     omite este parámetro, el cursor será un cursor secuencial normal.
    </para>
    <para>
     Para cualquier tipo de consulta, el número (estimado o real) de
     filas afectadas es almacenado para su consulta mediante
     <function>ifx_affected_rows</function>.
    </para>
    <para>
     Si tiene columnas BLOB (BYTE o TEXT) en una consulta de
     actualización, puede añadir un parámetro
     <parameter>matriz_id_blob</parameter> que contenga los "ids de
     blob" correspondientes, y debería reemplazar esas columnas con un
     "?"  en el texto de la consulta.
    </para>
    <para>
     Si el contenido de la columna TEXT (o BYTE) lo permite, puede
     usar también "ifx_textasvarchar(1)" y
     "ifx_byteasvarchar(1)". Esto le permite tratar columnas TEXT (o
     BYTE) como si fueran columnas normales (pero largas) de tipo
     VARCHAR para consultas select, y no necesita complicarse con id's
     de blob.
    </para>
    <para>
     Con ifx_textasvarchar(0) o ifx_byteasvarchar(0) (la situación
     predeterminada), las consultas select devolverán columnas BLOB
     como id's blob (valores enteros). Puede obtener el valor del blob
     como una cadena o archivo con las funciones blob (vea más
     adelante).
    </para>
    <para>
     <example>
      <title>
       Mostrar todas las filas de la tabla "ordenes" como una tabla
       HTML
      </title>
      <programlisting role="php">
<![CDATA[
<?php
ifx_textasvarchar(1);      // usar "modo de texto" para blobs
$id_res = ifx_query("select * from ordenes", $id_con);
if (! $id_res) {
    printf("No se pueden seleccionar órdenes: %s\n<br />%s<br />\n", ifx_error());
    ifx_errormsg();
    die;
}
ifx_htmltbl_result($id_res, "border=\"1\"");
ifx_free_result($id_res);
?>
]]>
      </programlisting>
     </example>
     <example>
      <title>Insertar algunos valores en la tabla "catalogo"</title>
      <programlisting role="php">
<![CDATA[
<?php

// crear id's blob para una columna byte y text
$textid = ifx_create_blob(0, 0, "Text column in memory");
$byteid = ifx_create_blob(1, 0, "Byte column in memory");

// almacenar id's blob en una matriz id_blob
$matriz_id_blob[] = $textid;
$matriz_id_blob[] = $byteid;

// ejecutar consulta
$consulta = "insert into catalogo (num_bodega, cod_manu, " .
         "descr_cat,imagen_cat) values(1,'HRO',?,?)";
$id_res = ifx_query($consulta, $id_con, $matriz_id_blob);
if (! $id_res) {
    /* ... error ... */
}

// liberar el id de resultado
ifx_free_result($id_res);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Vea también <function>ifx_connect</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
