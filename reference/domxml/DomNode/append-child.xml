<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322205 Maintainer: JuanFrancisco Maureira Status: not ready -->
<!-- Reviewed: no -->

<refentry xml:id='function.domnode-append-child' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DomNode::append_child</refname>
  <refpurpose>
   Agrega un nuevo hijo al final de los hijos
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>DOMNode</type><methodname>DOMNode::append_child</methodname>
   <methodparam><type>DOMNode</type><parameter>newnode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función agrega un hijo a la lista existente de hijos o crea
   una nueva lista de hijos.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>newnode</parameter></term>
     <listitem>
      <para>
       El nodo que será anexado. Este puede ser creado por ejemplo con:
       <xref linkend="function.domdocument-create-element" />,
       <xref linkend="function.domdocument-create-text-node" /> etc. o 
       simplemente utilizando cualquier otro nodo.
      </para>
      <note>
       <para>
        No puede anexar un <classname>DOMAttribute</classname> utilizando este
        método. Use <xref linkend="function.domelement-set-attribute" /> 
        en su lugar.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna el nodo anexado cuando se ejecuta correctamente&return.falseforfailure;.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Ya no está permitido insertar un nodo desde otro documento.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Previo a PHP 4.3.0, el nuevo hijo es duplicado antes de ser 
        agregado.
        Por lo tanto el nuevo hijo es una copia completamente nueva la que puede ser
        modificada sin cambiar el nodo que fue pasado a la función.
        Si el nodo pasado tiene hijos, ellos serán duplicados también,
        lo que hace fácil duplicar gran parte de un ducumento XML.
        El valor de retorno es el hijo agregado. Si planea hacer
        futuras modificaciones sobre el hijo agregado debe utilizar el nodo
        retornado.
       </entry>
      </row>
      <row>
       <entry>4.3.0 y 4.3.1</entry>
       <entry>
        El nuevo hijo <parameter>newnode</parameter> es primero desligado de
        su contexto existente, si ya es un hijo de DomNode. Por lo tanto
        el <parameter>newnode</parameter> es movido y no copiado.
        Este es el comportamiento de acuerdo a las especificaciones de la W3C. Si
        necesita el comportamiento antiguo, use <xref 
        linkend="function.domnode-clone-node" /> antes de agregar.
       </entry>
      </row>
      <row>
       <entry>4.3.2</entry>
       <entry>
        El nuevo hijo <parameter>newnode</parameter> es primero desligado de
        su contexto existente, si ya está en un árbol. Las mismas reglas aplican.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1> 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   El siguiente ejemplo agrega un nuevo nodo elemento a un documento vacío y establece
   el atributo <literal>align</literal> a <literal>left</literal>.
  </para>
  <para>
   <example>
    <title>Agregando un hijo</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = domxml_new_doc("1.0");
$node = $doc->create_element("para");
$newnode = $doc->append_child($node);
$newnode->set_attribute("align", "left");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   El ejemplo de arriba puede también escribirse como sigue:
  </para>
  <para>
   <example>
    <title>Agregando un hijo</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = domxml_new_doc("1.0");
$node = $doc->create_element("para");
$node->set_attribute("align", "left");
$newnode = $doc->append_child($node);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Un ejemplo más complejo es el que sigue a continuación. Primero busca un cierto
   elemento, lo duplica incluyendo sus hijos y los agrega como hermanos.
   Finalmente un nuevo atributo es agregado a uno de los hijos del nuevo hermano
   y el documento en su totalidad es eliminado.
  </para>
  <para>
   <example>
    <title>Agregando un hijo</title>
    <programlisting role="php">
<![CDATA[
<?php
include("example.inc");

if (!$dom = domxml_open_mem($xmlstr)) {
  echo "Error durante el análisis del documento\n";
  exit;
}

$elements = $dom->get_elements_by_tagname("informaltable");
print_r($elements);
$element = $elements[0];

$parent = $element->parent_node();
$newnode = $parent->append_child($element);
$children = $newnode->children();
$attr = $children[1]->set_attribute("align", "left");

$xmlfile = $dom->dump_mem();
echo htmlentities($xmlfile);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   El ejemplo de anterior también puede ser hecho con
   <xref linkend="function.domnode-insert-before" /> en lugar de
   <xref linkend="function.domnode-append-child" />.
  </para>
 </refsect1>
 <refsect1 role="migration">
  <title>Para migrar a PHP 5</title>
  <para>
   Debe usar <xref linkend='domnode.appendchild' />.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.domnode-insert-before" /></member>
    <member><xref linkend="function.domnode-clone-node" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
