<?xml version="1.0" encoding="iso-8859-1"?>
<reference id="ref.hyperwave">
  <title>Funciones para Hyperwave</title>
  <titleabbrev>Hyperwave</titleabbrev>

  <partintro>

   <section id="hw-intro">
    <title>Introducci&oacute;n</title>
    <para>
     <productname>Hyperwave</productname> ha sido desarrollado en el <ulink url="http://www.iicm.edu">IICM</ulink> en Graz. Comenz&oacute; con
     el nombre <acronym>Hyper-G</acronym> y cambi&oacute; a Hyperwave cuando
     fue comercializado (Si lo recuerdo bien, fue en 1996).</para>
    <para>
     Hyperwave no es software gratuiro. La versi&oacute;n actual, 4.1, est&aacute;
     disponible en <ulink url="http://www.hyperwave.com/">www.hyperwave.com</ulink>. Se
     puede solicitar gratuitamente una versi&oacute;n limitada (30 d&iacute;as).</para>
    <para>
     Hyperwave es un sistema de informaci&oacute;n similar a una base de
     datos (<acronym>HIS</acronym>, Hyperwave Information Server - Servidor
     Hyperwave de Informaci&oacute;n). Su objetivo es el almacenamiento y
     manipulaci&oacute;n de documentos. Un documento puede ser cualquier bloque
     posible de datos que tambi&eacute;n puede ser almacenado en un archivo. Cada
     documento se acompa&ntilde;a por su registro de objeto. El registro de objeto
     contiene metadatos para el documento. Los metadatos son una lista de
     atributos que pueden ser extendidos por el usuario. Ciertos atributos
     siempre son fijados por el servidor Hyperwave, otros pueden ser
     modificados por el usuario. Un atributo es un par nombre/valor de la
     forma nombre=valor. El registro completo del objeto tiene tantos de
     estos pares como guste el usuario. El nombre de un atributo no tiene
     porqu&eacute; ser &uacute;nico, p. ej. un t&iacute;tulo puede aparecer varias veces en el
     registro de un objeto. Esto tiene sentido si se desea especificar un
     t&iacute;tulo en diferentes idiomas. En dicho caso existe la convenci&oacute;n de
     que cada valor de t&iacute;tulo est&eacute; precedido por la abreviatura de dos
     letras del idioma, seguida por dos puntos, como p. ej. 'en:Title in
     English' o 'es:T&iacute;tulo en Espa&ntilde;ol'. Otros atributos tales como
     descripciones o palabras clave son canditatos potenciales a esta
     diferenciaci&oacute;n. Tambi&eacute;n se pueden reemplazar las abreviaturas de
     idioma por cualquier otra cadena siempre y cuando est&eacute;n separadas
     por los dos puntos del resto del valor del atributo.</para>
    <para>
     Cada registro de objeto tiene una representaci&oacute;n nativa como cadena
     con cada par nombre/valor separado por una l&iacute;nea nueva. La extensi&oacute;n
     Hyperwave tambi&eacute;n conoce una segunda representaci&oacute;n que consiste en
     un array asociativo donde el nombre del atributo es la clave. Los
     valores de atributo multilingües en s&iacute; mismos forman otro array
     asociativo donde la clave es la abreviatura del idioma. Realmente
     cualquier atributo m&uacute;ltiple forma una tabla asociativa donde la cadena
     a la izquierda de los dos puntos en el valor de atributo es la clave.
     (Esto no se ha implementado por completo. S&oacute;lo los atributos 
     Title, Description y Keyword son tratados adecuadamente.)</para>
    <para>
     Aparte de los documentos, todos los hiper-enlaces contenidos en un
     documento son almacenados tambi&eacute;n como registros de objeto. Cuando
     el documento sea insertado en la base de datos, los hiper-enlaces
     que haya en un documento ser&aacute;n borrados del mismo y almacenados
     como objetos individuales.
     El registro de objeto del enlace contiene informaci&oacute;n acerca
     de d&oacute;nde comienza y d&oacute;nde termina.
     Para recuperar el documento original se deber&aacute; recuperar el
     documento sin los enlaces y la lista de los mismos para reinsertarla
     (Las funciones <function>hw_pipedocument</function> y <function>hw_gettext</function>
     hacen esto para usted). La ventaja de separar los enlaces del
     documento es obvia. Una vez un documento al que apunta un enlace
     cambia de nombre, el enlace puede modificarse f&aacute;cilmente. El documento
     que contiene el enlace no se ve afectado. Incluso se puede a&ntilde;adir
     un enlace a un documento sin alterarlo.</para>
    <para>
     Decir que <function>hw_pipedocument</function> y <function>hw_gettext</function>
     hacen autom&aacute;ticamente la inserci&oacute;n de enlaces no es tan simple como suena.
     Insertar los enlaces implica una cierta jerarqu&iacute;a en los documentos. En
     un servidor web esto viene dado por el sistema de archivos, pero el Hyperwave
     tiene su propia jerarqu&iacute;a y los nombres no representan la posici&oacute;n de un
     objeto en dicha jerarqu&iacute;a. Por tanto, la creaci&oacute;n de los enlaces precisa
     primeramente de realizar un mapeado entre el espacio de nombres y la
     jerarqu&iacute;a del Hyperwave y el espacio de nombres respectivo de una
     jerarqu&iacute;a de web. La diferencia fundamental entre Hyperwave y la web
     es la distinci&oacute;n clara entre nombres y jerarqu&iacute;a que se da en el primero.
     El nombre no contiene ninguna informaci&oacute;n sobre la posici&oacute;n del objeto
     en la jerarqu&iacute;a. En la web, el nombre tambi&eacute;n contiene la informaci&oacute;n
     sobre la posici&oacute;n en la jerarqu&iacute;a del objeto. Esto nos lleva a dos
     posibles formas de mapeo. O bien se reflejan la jerarqu&iacute;a del Hyperwave
     y el nombre del objeto Hyperwave en el URL o s&oacute;lo el nombre.
     Para facilitar las cosas, se utiliza el segundo m&eacute;todo. El objeto
     Hyperwave de nombre 'mi_objeto' es mapeado a 'http://host/mi_objeto' sin
     importar d&oacute;nde reside dentro de la jerarqu&iacute;a de Hyperwave.
     Un objeto con el nombre 'padre/mi_objeto' podr&iacute;a ser el hijo de
     'mi_objeto' en la jerarqu&iacute;a Hyperwave, aunque en el espacio de nombres
     web aparezca justamente lo opuesto y el usuario pueda ser llevado a 
     confusi&oacute;n. Esto s&oacute;lo se puede evitar seleccionando nombres de objetos
     razonables.</para>
    <para>
     Hecha esta decisi&oacute;n surge un segundo problema. ¿C&oacute;mo implicar al PHP?
     el URL http://host/mi_objeto no llamar&aacute; a ning&uacute;n script PHP a no ser
     que se le diga al servidor que lo transforme en p. ej. 
     'http://host/script_php3/mi_objeto' y que el 'script_php3' luego
     eval&uacute;e la variable $PATH_INFO y recupere el objeto con nombre 'mi_objeto'
     del servidor Hyperwave. Hay s&oacute;lo un peque&ntilde;o inconveniente que se 
     puede resolver f&aacute;cilmente. Cuando se reescribe cualquier URL no se
     permite el acceso a ning&uacute;n otro documento en el servidor web. Un
     script de PHP para buscar en el servidor Hyperwave ser&iacute;a imposible.
     Por lo tanto se necesitar&aacute; al menos una segunda regla de reescritura
     para que excluya ciertos URL, como los que empiecen p. ej. por 
     http://host/Hyperwave. B&aacute;sicamente esto ser&iacute;a compartir un espacio
     de nombres entre el servidor web y el servidor Hyperwave.</para>
    <para>
     Los enlaces se insertan en los documentos bas&aacute;ndose en el mecanismo
     citado m&aacute;s arriba.</para>
    <para>
     Se vuelve m&aacute;s complicado si el PHP no se est&aacute; ejecutando como m&oacute;dulo
     del servidor o como script CGI, sino que se ejecuta como aplicaci&oacute;n,
     p. ej. para volcar el contenido del servidor de Hyperwave a un CD-ROM.
     En dicho caso tiene sentido mantener la jerarqu&iacute;a Hyperwave y mapearla
     en el sistema de archivos. Esto entra conflicto con los nombres de los
     objetos si estos reflejan su propia jerarqu&iacute;a (p. ej. eligiendo nombres
     que comienzan por '/'). Por tanto, la '/' tendr&aacute; que ser reemplazada
     por otro car&aacute;cter, p. ej. '_' para continuar.</para>
    <para>
     El protocolo de red para comunicarse con el servidor Hyperwave se 
     denomina <ulink url="http://www.hyperwave.de/7.17-hg-prot">HG-CSP</ulink> (Hyper-G
     Client/Server Protocol, Protocolo Hyper-G Cliente/Servidor). Est&aacute; basado
     en mensajes que inician ciertas acciones, p. ej. obtener el registro de
     un objeto. En versiones anteriores del Servidor Hyperwave se distribuyeron
     dos clientes nativos (Harmony, Amadeus) para la comunicaci&oacute;n con
     el servidor. Ambos desaparecieron cuando se comercializ&oacute; el Hyperwave.
     Para sustitu&iacute;rlo se proporcion&oacute; el llamado wavemaster. El wavemaster es
     como un conversor de protocolo de <abbrev>HTTP</abbrev> a <abbrev>HG-CSP</abbrev>.
     La idea es realizar toda la administraci&oacute;n de la base de datos y la 
     visualizaci&oacute;n de documentos con una interfaz web. El wavemaster implementa
     una serie de posicionadores para acciones que permiten personalizar la 
     interfaz. Dicho conjunto de posicionadores se denomina el Lenguaje <abbrev>PLACE</abbrev>.
     El <abbrev>PLACE</abbrev> no posee muchas de las caracter&iacute;sticas de
     un lenguaje de programaci&oacute;n real y las extensiones al mismo &uacute;nicamente
     alargan la lista de posicionadores. Esto ha obligado al uso de JavaScript
     que, en mi opini&oacute;n, no hace la vida m&aacute;s f&aacute;cil.</para>

    <para>
     A&ntilde;adir soporte de Hyperwave al PHP rellenar&iacute;a el espacio
     que deja la falta de un lenguaje de programaci&oacute;n que permita 
     personalizar la interfaz. El PHP implementa todos los mensajes
     definidos en el <abbrev>HG-CSP</abbrev> pero adem&aacute;s proporciona 
     comandos m&aacute;s poderosos, p. ej. recuperar documentos completos.</para>

    <para>
     El Hyperwave tiene su propia terminolog&iacute;a para dar nombre a ciertos
     tipos de informaci&oacute;n. Esta ha sido ampliamente extendida y anulada.
     Casi todas las funciones operan en uno de los siguientes tipos de 
     datos.

     <itemizedlist>
      <listitem><simpara>
        ID de objeto: Un valor entero &uacute;nico paara cada objeto del 
        servidor Hyperwave. Tambi&eacute;n es uno de los atributos del registro
        de objeto (ObjectID). Los ID de objeto se usan generalmente como
        par&aacute;metros de entrada que especifican a un objeto.
       </simpara></listitem>
      <listitem><simpara>
      	registro de objeto: Una cadena con pares atributo-valor con la
      	forma atributo=valos. Los pares est&aacute;n separados unos de otros
      	por un retorno de carro. Un registro de objeto puede convertirse
      	f&aacute;cilmente en una tabla (array) de objetos usando <function>hw_object2array</function>.
        Varias funciones devuelven registros de objeto. Los nombres de
        dichas funciones terminan en obj.
       </simpara></listitem>
      <listitem><simpara>
      	tabla de objetos: Una tabla asociativa con todos los atributos
      	de un objeto. La clave es el nombre del atributo. Si un atributo
      	aparece m&aacute;s de una vez en un registro de objeto ser&aacute; convertido
      	en otra tabla asociativa o indizada. Los atributos que dependen
      	del idioma (como el t&iacute;tulo, claves o descripci&oacute;n) se convertir&aacute;n
      	en una tabla asociativa con la abreviatura del idioma como clave.
      	El resto de los atributos m&uacute;ltiples crear&aacute;n una tabla indizada. Las
      	funciones de PHP nunca devuelven tablas de objetos.
       </simpara></listitem>
      <listitem><simpara>
        hw_document: Este es un nuevo tipo de datos que almacena el documento
        actual, p. ej. HTML, PDF, etc. Est&aacute; algo optimizado para documentos
        HTML pero puede usarse para cualquier formato.
       </simpara></listitem>
     </itemizedlist></para>

    <para>
     Varias funciones que devuelven una tabla de registros de objeto
     tambi&eacute;n devuelven una tabla asociativa con informaci&oacute;n estad&iacute;stica
     sobre los mismos. La tabla es el &uacute;ltimo elemento del registro de
     objeto. La tabla estad&iacute;stica contiene los siguientes elementos:
     <variablelist>
      <varlistentry>
       <term>Hidden</term>
       <listitem><simpara>
       	 N&uacute;mero de registros de objeto con el atributo PresentationHints
         puesto a Hidden.</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>CollectionHead</term>
       <listitem><simpara>
         N&uacute;mero de registros de objeto con el atributo
         PresentationHints puesto a CollectionHead.</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>FullCollectionHead</term>
       <listitem><simpara>
         N&uacute;mero de registros de objeto con el atributo
         PresentationHints puesto a FullCollectionHead.</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>CollectionHeadNr</term>
       <listitem><simpara>
         &Iacute;ndice a una tabla de regitros de objeto con el
         atributo PresentationHints puesto a CollectionHead.</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>FullCollectionHeadNr</term>
       <listitem><simpara>
         &Iacute;ndice a una tabla de regitros de objeto con el
         atributo PresentationHints puesto a FullCollectionHead.</simpara></listitem>
      </varlistentry>
      <varlistentry>
       <term>Total</term>
       <listitem><simpara>
         Total: N&uacute;mero de registros de objeto.</simpara></listitem>
      </varlistentry>
     </variablelist></para>
   </section>

   <section id="hw-apache">
    <title>Integraci&oacute;n con Apache</title>
    <para>
     La extensi&oacute;n Hyperwave se utiliza mejor cuando el PHP se compila
     como un m&oacute;dulo de Apache. En tal caso el servidor Hyperwave subyacente
     puede ser ocultado casi por completo de los usuarios si el Apache utiliza
     su motor de re-escritura. Las siguientes instrucciones explicar&aacute;n esto.</para>

    <para>
     Como el PHP con soporte Hyperwave inclu&iacute;do en el Apache se ha dise&ntilde;ado
     para sustituir la soluci&oacute;n nativa de Hyperwave basada en Wavemaster,
     asumir&eacute; que el servidor Apache s&oacute;lo sirve como interfaz web para
     el Hyperwave. Esto no es necesario, pero simplifica la configuraci&oacute;n.
     El concepto es bastante sencillo. Primeramente necesita un script PHP
     que eval&uacute;e la variable <envar>PATH_INFO</envar> y que trate su
     valor como el nombre de un objeto Hyperwave. Llamemos a este script
     'Hyperwave'. El URL <systemitem role="url">http://nombre.servidor/Hyperwave/nombre_de_objeto</systemitem>
     devolver&iacute;a entonces el objeto Hyperwave llamado 'nombre_de_objeto'.
     Dependiendo del tipo del objeto, as&iacute; reaccionar&aacute; el script. Si es
     una colecci&oacute;n, probablemente devolver&aacute; un lista de hijos. Si es un
     documento devolver&aacute; el tipo MIME y el contenido. Se puede mejorar
     ligeramente si se usa el motor de re-escritura del Apache. Desde el
     punto de vista del usuario ser&aacute; m&aacute;s sencillo si el URL <systemitem role="url">http://nombre.servidor/nombre de objeto</systemitem>
     devuelve el objeto. La regla de reescritura es muy sencilla:

     <informalexample><programlisting role="apache-conf">
RewriteRule ^/(.*) /usr/local/apache/htdocs/HyperWave/$1 [L]
</programlisting></informalexample>

     Ahora todo URL apunta a un objeto en el servidor Hyperwave. Esto
     provoca un problema sencillo de resolver. No hay forma de ejecutar otro
     script, p. ej. para buscar, salvo el script 'Hyperwave'. Esto se puede
     solucionar con otra regla de reescritura como la siguiente:

     <informalexample><programlisting role="apache-conf">
RewriteRule ^/hw/(.*) /usr/local/apache/htdocs/hw/$1 [L]
</programlisting></informalexample>

     Esta reservar&aacute; el directorio <filename class="directory">/usr/local/apache/htdocs/hw</filename> para
     script adicionales y otros archivos. S&oacute;lo hay que asegurarse que esta
     regla se eval&uacute;a antes de la otra. S&oacute;lo hay un peque&ntilde;o inconveniente:
     todos los objetos Hyperwave cuyo nombre comienza por 'hw/' ser&aacute;n ocultados.
     as&iacute; que aseg&uacute;rese que no utiliza dichos nombres. Si necesita m&aacute;s directorios,
     p. ej. para im&aacute;genes, simplemente a&ntilde;ada m&aacute;s reglas o sit&uacute;e los archivos en
     un solo directorio. Por &uacute;ltimo, no olvide conectar el motor de
     re-escritura con

     <informalexample><programlisting role="apache-conf">
RewriteEngine on
</programlisting></informalexample>

     Mi experiencia me ha demostrado que necesitar&aacute; los siguientes scripts:

     <itemizedlist>
       <listitem><simpara>
        para devolver el script en s&iacute;</simpara></listitem>
       <listitem><simpara>
        para permitir las b&uacute;squedas</simpara></listitem>
       <listitem><simpara>
        para identificarse</simpara></listitem>
       <listitem><simpara>
        para ajustar su perfil</simpara></listitem>
       <listitem><simpara>
        uno para cada funci&oacute;n adicional como mostrar los atributos
        del objeto, mostrar informaci&oacute;n sobre usuarios, mostrar el
        estado del servidor, etc.</simpara></listitem>
     </itemizedlist></para>
   </section>

   <section id="hw-todo">
    <title>Pendientes</title>
    <para>
     A&uacute;n hay varias cosas pendientes:
     <itemizedlist>
      <listitem><simpara>hw_InsertDocument debe dividirse en
        <function>hw_InsertObject</function> y
        <function>hw_PutDocument</function>.</simpara></listitem>
      <listitem><simpara>Los nombres de algunas funciones a&uacute;n no est&aacute;n fijados.
       </simpara></listitem>
      <listitem><simpara>Muchas funciones precisan la conexi&oacute;n actual
        como primer par&aacute;metro. Esto obliga a escribir mucho, lo cual no es
        con frecuencia necesario si s&oacute;lo hay una conexi&oacute;n abierta. Una
        conexi&oacute;n por defecto mejorar&iacute;a esto.</simpara></listitem>
      <listitem><simpara>La conversi&oacute;n de registro de objeto a tabla de 
        objeto necesita manipular cualquier atributo m&uacute;ltiple.
       </simpara></listitem>
     </itemizedlist></para>
   </section>
  </partintro>

&reference.hw.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

