<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: seros Status: ready -->

<chapter xml:id="hw.apache" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Integración con Apache</title>
 <para>
  La extensión Hyperwave se usa mejor cuando PHP está compilado como
  módulo de Apache. En tal caso, el servidor Hyperwave subyacente se puede
  ocultar a los usuarios casi completamente si Apache usa su motor
  de reescritura. Las siguientes instrucciones explicarán esto.
 </para>
 <para>
  Ya que PHP con soporte para Hyperwave con Apache incluido se pensó
  para reemplazar la solución nativa de Hyperwave basada en Wavemaster,
  asumiremos que el servidor Apache sólo sirve como interfaz web de
  Hyperwave para estos ejemplos. Esto no es necesario pero simplifica
  la configuración. El concepto es bastante simple. Lo primero de todo, se
  necesita un script de PHP qeu evalúe la variable <varname>$_ENV['PATH_INFO']</varname>
  y trate su valor como el nombre de un objeto de
  Hyperwave. Llamemos a este script <literal>'Hyperwave'</literal>. La URL
  <literal>http://su.nombre_host/Hyperwave/nombre_objeto</literal>
  tendría que devolver el objeto Hyperwave con el nombre
  <literal>'nombre_objeto'</literal>. Dependiendo del tipo de objeto
  el script tiene que reaccionar de manera adecuada. Si es una colección, probablemente
  devolverá una lista de hijos. Si es un documento devolverá el
  tipo mime y el contenido. Se puede lograr una ligera mejora
  si se usa el motor de reescritura de Apache. Desde el punto de vista
  del usuario sería más sencillo si la URL
  <literal>http://su.nombre_host/nombre_objeto</literal> devolviera
  el objeto. La regla de reescritura es bastante sencilla:

  <informalexample>
   <programlisting role="apache-conf">
<![CDATA[
RewriteRule ^/(.*) /usr/local/apache/htdocs/HyperWave/$1 [L]
]]>
   </programlisting>
  </informalexample>

  Ahora, cada URL se refiere a un objeto del servidor Hyperwave. Esto
  ocasiona un problema fácil de resolver. No hay manera de ejecutar un
  script diferente, p.ej. para búsquda, del script 'Hyperwave'.
  Esto se puede arreglar con otra regla de reescritura com la
  siguiente:

  <informalexample>
   <programlisting role="apache-conf">
<![CDATA[
RewriteRule ^/hw/(.*) /usr/local/apache/htdocs/hw/$1 [L]
]]>
   </programlisting>
  </informalexample>

  Esto reservará el directorio <filename>/usr/local/apache/htdocs/hw</filename>
  para scripts adicionales y otros ficheros. Asegúrese de que esta regla se
  evalúa antes que la de arriba. evaluated before the one above. Hay un pequeño inconveniente:
  todos los objetos de Hyperwave cuyo nombre comiencen con <literal>'hw/'</literal>
  serán ocultados. Así que asegúrese de no usar tales nombres. Si necesita
  más directorios, p.ej. para imágenes, simplemente añada más reglas o ubíquelas
  todas en un directorio. Antes de poner estas instrucciones, no
  olvide activas el motor de reescritura con

  <informalexample>
   <programlisting role="apache-conf">
<![CDATA[
RewriteEngine on
]]>
   </programlisting>
  </informalexample>

  Necesitará scripts:

  <itemizedlist>
    <listitem>
     <simpara>
     para devolver el objeto en sí
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     para permitir búsqudas
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     para identificarse
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     para establecer su perfil
     </simpara>
    </listitem>
    <listitem>
     <simpara>
     uno por cada función adicional como mostrar
     los atributos del objeto, mostrar información sobre los usuarios,
     mostrar el estado del servidor, etc.
     </simpara>
    </listitem>
  </itemizedlist>
 </para>
 <para>
  Como alternativa al Motor de Reescritura, puede también considerar usar
  la directiva de Apache <literal>ErrorDocument</literal>, pero tenga en cuenta
  que las páginas redirigidas de <literal>ErrorDocument</literal> no reciben
  información POST.
 </para>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

