<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/hw.xml, last change in rev 1.1 -->
<!-- last change to 'hw-modifyobject' in en/ tree in rev 1.2 -->
  <refentry id="function.hw-modifyobject">
   <refnamediv>
    <refname>hw_Modifyobject</refname>
    <refpurpose>modifica el registro de objeto</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>int</type><methodname>hw_modifyobject</methodname>
     <methodparam><type>int</type><parameter>conexi&oacute;n</parameter></methodparam>
     <methodparam><type>int</type><parameter>objeto_a_cambiar</parameter></methodparam>
     <methodparam><type>array</type><parameter>eliminar</parameter></methodparam>
     <methodparam><type>array</type><parameter>a&ntilde;adir</parameter></methodparam>
     <methodparam><type>int</type><parameter>modo</parameter></methodparam>

     </methodsynopsis>
    <para>
     Este comando permite eliminar, a&ntilde;adir, o modificar atributos individuales
     de un registro de objeto. El objeto est&aacute; especificado por el ID de
     objeto <parameter>objeto_a_cambiar</parameter>. La primera tabla,
     <parameter>eliminar</parameter>, es la lista de atributos a eliminar.
     La segunda tabla, <parameter>a&ntilde;adir</parameter>, es la lista de atributos
     a a&ntilde;adir. Para modificar un atributo, hay que borrar el antiguo y a&ntilde;adir
     uno nuevo. <function>hw_modifyobject</function> siempre eliminar&aacute; los
     atributos antes de a&ntilde;adir los nuevos excepto si el valor del atributo
     a eliminar no es una cadena o una tabla.</para>

    <para>
     El &uacute;ltimo par&aacute;metro determina si la modificaci&oacute;n se realiza de manera
     recursiva. 1 quiere decir que sea recursiva. Si alguno de los objetos
     no se puede modificar, ser&aacute; ignorado sin avisar.
     Incluso <function>hw_error</function> podr&iacute;a no indicar un
     error aunque alguno de los objetos no pueda ser modificado.</para>

    <para>
     Las claves de ambas tablas son los nombres de los atributos. El valor
     de cada elemento de la tabla puede ser una tabla, una cadena o cualquier
     otra cosa. Si es una tabla, cada valor de atributo se construye como
     la clave de cada elemento m&aacute;s dos puntos y el valor de cada elemento. Si
     es una cadena se toma como valor del atributo. Una cadena vac&iacute;a producir&aacute;
     la supresi&oacute;n completa del atributo. Si el valor no es ni cadena ni tabla,
     sino otra cosa, p. ej. un entero, no se realizar&aacute; operaci&oacute;n alguna en el
     atributo. Esto es necesario se desea a&ntilde;adir un atributo completamente
     nuevo, no solamente un nuevo valor para un atributo existente. Si la
     tabla eliminar contuviera una cadena vac&iacute;a para dicho atributo, este
     se intentar&iacute;a suprimir, lo que fallar&iacute;a porque este no existe. La
     siguiente adici&oacute;n de un nuevo valor para dicho atributo tambi&eacute;n fallar&aacute;.
     Fijando el valor para dicho atributo p. ej. a 0 har&aacute; que ni siquiera
     se intente eliminar, pero funcionar&aacute; la adici&oacute;n del mismo.</para>

    <para>
     Si desea cambiar el atributo 'Nombre' con el valor actual 'libros' por
     el de 'art&iacute;culos' deber&aacute; crear dos tablas y llamar a <function>hw_modifyobject</function>.
     <example>
      <title>modificando un atributo</title>
      <programlisting role="php">
       // $conexion es una conexi&oacute;n con el servidor Hyperwave
       // $idobj es la ID del objeto a modificar
       $tablasupr = array("Nombre" => "libros");
       $tablaanad = array("Nombre" => "art&iacute;culos");
       $hw_modifyobject($conexion, $idobj, $tablasupr, $tablaanad);
      </programlisting>
     </example>
     Para borrar/a&ntilde;adir un par nombre=valor de/a el registro de objeto,
     simplemente pase la tabla eliminar/a&ntilde;adir y fije el &uacute;ltimo/tercer
     par&aacute;metro a tabla vac&iacute;a. Si el atributo es el primero con dicho
     nombre que se a&ntilde;ade, fije el valor del atributo en la tabla eliminar
     a un valor entero.
     <example>
      <title>a&ntilde;adiendo un atributo completamente nuevo</title>
      <programlisting role="php">
       // $conexion es una conexi&oacute;n con el servidor Hyperwave
       // $idobj es la ID del objeto a modificar
       $tablasupr = array("Nombre" => 0);
       $tablaanad = array("Nombre" => "art&iacute;culos");
       $hw_modifyobject($conexion, $idobj, $tablasupr, $tablaanad);
      </programlisting>
     </example></para>
    <para>
     <note>
      <simpara>
       Los atributos plurilingües, p. ej. 'T&iacute;tulo', se pueden modificar
       de dos maneras. O bien proporcionando los valores de los atributos
       en su forma nativa 'lenguaje':'t&iacute;tulo', bien proporcionando una tabla
       con los elementos para cada lenguaje seg&uacute;n se describe m&aacute;s arriba.
       El ejemplo anterior podr&iacute;a quedar entonces:</simpara>
     </note>
     <example>
      <title>modificando el atributo T&iacute;tulo</title>
      <programlisting role="php">
       $tablasupr = array("T&iacute;tulo" => "es:Libros");
       $tablaanad = array("T&iacute;tulo" => "es:Art&iacute;culos");
       $hw_modifyobject($conexion, $idobj, $tablasupr, $tablaanad);
      </programlisting>
     </example>
      o
     <example>
      <title>modificando el atributo T&iacute;tulo</title>
      <programlisting role="php">
       $tablasupr = array("T&iacute;tulo" => array("es" => "Libros"));
       $tablaanad = array("T&iacute;tulo" => array("es" => "Art&iacute;culos", "ge"=>"Artikel"));
       $hw_modifyobject($conexion, $idobj, $tablasupr, $tablaanad);
      </programlisting>
     </example>
     Esto elimina el t&iacute;tulo espa&ntilde;ol 'Libros' y a&ntilde;ade el t&iacute;tulo espa&ntilde;ol
     'Art&iacute;culos' y el t&iacute;tulo alem&aacute;n 'Artikel'.
     <example>
      <title>eliminando atributos</title>
      <programlisting role="php">
       $tablasupr = array("T&iacute;tulo" => "");
       $tablaanad = array("T&ntilde;itulo" => "es:Art&iacute;culos");
       $hw_modifyobject($conexion, $idobj, $tablasupr, $tablaanad);
      </programlisting>
     </example>
     <note><simpara>
       Esto eliminar&aacute; todos los atributos con el nombre 'T&iacute;tulo' y a&ntilde;adir&aacute;
       un nuevo atributo 'T&iacute;tulo'. Esto es &uacute;til cuando se desea eliminar
       atributos de forma recursiva.
      </simpara></note>
     <note>
      <simpara>
       Si necesita eliminar todos los atributos con un cierto nombre
       tendr&aacute; que pasar una cadena vac&iacute;a como el valor del atributo.</simpara>
     </note>
    <note><simpara>
     S&oacute;lo los atributos 'Title', 'Description' y 'Keyword' (as&iacute;, en ingl&eacute;s)
     manejar&aacute;n de forma apropiada el prefijo de idioma. Si estos atributos
     no llevaran prefijo de idioma, se les asignari&aacute; el prefijo 'xx'.
    </simpara></note>
    <note><simpara>
     El atributo 'Name' es bastante especial. En algunos casos no puede ser
     completamente eliminado. Obtendr&aacute; un mensaje de error 'Change of base
     attribute' ('Cambio de atributo base', no est&aacute; muy claro cuando ocurre).
     Por tanto, tendr&aacute; siempre que a&ntilde;adir un nuevo atributo Name primero y
     luego eliminar el anterior.
    </simpara></note>
    <note><simpara>
      No debe rodear esta funci&oacute;n de llamadas a 
      <function>hw_getandlock</function> ni a <function>hw_unlock</function>.
      <function>hw_modifyobject</function> ya lo hace internamente.
    </simpara></note></para>
    <para>
     Devuelve &true; si no hay error o &false; en caso contrario.</para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
