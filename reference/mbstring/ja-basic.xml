<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 318573 Maintainer: yago Status: ready -->
<!-- Reviewed: yes -->

<chapter xml:id="mbstring.ja-basic" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Básicos sobre codificaciones multibytes del Japonés</title>
 <para>
  Los caracteres japoneses sólo pueden ser representados en codificaciones
  multibytes y además se utilizan múltiples estándares de codificación 
  dependiendo de la plataforma y propósito del texto. Para colmo de males,
  los estándares de codificación difieren ligeramente unos de otros. Con 
  el fin de crear una aplicación web que pueda utilizarse en un entorno en 
  japonés, un desarrollador tiene que tener estas complejidades en mente 
  para garantizar que la codificación de caracteres apropiada se utilize.
 </para>
 <para>
  <itemizedlist>
   <listitem>
     <simpara>El almacenamiento de un caracter puede ser de hasta 6 bytes</simpara>
   </listitem>
   <listitem>
    <simpara>     
     La mayoría de los caracteres japoneses multibyte aparecen dos
     veces más anchos que caracteres los single-byte. Se llaman 
     estos caracteres &quot;zen-kaku&quot; en japonés, que 
     significa &quot;de ancho total;&quot;. Otros caracteres 
     más estrechos se llaman &quot;han-kaku&quot;, que
     significa &quot;ancho medio&quot;. Las características 
     gráficas de los caracteres, sin embargo, dependen de las 
     tipografías usadas para mostrarlas.          
    </simpara>
   </listitem>
   <listitem>
    <simpara>     
     Algunas codificaciones del carácter usan las secuencias de 
     escape (shift) definidas en el ISO-2022 para cambiar el 
     código de mapa del codigo de área específico.
     (<literal>00h</literal> a <literal>7fh</literal>).
    </simpara>
   </listitem>
   <listitem>
    <simpara>     
     El ISO-2022-JP se debe utilizar con SMTP/NNTP, y los encabezados 
     (headers) y las entidades deben recodificarse según los requisitos 
     del RFC. Aunque estos no sean requiridos obligadamente, es aún 
     una buena idea porque varios agentes usuarios populares no pueden 
     reconocer ninguna otro método de codificación.     
    </simpara>
   </listitem>
   <listitem>
    <simpara>   
     Página web creadas para servicios de teléfono móvil 
     tales como <link xlink:href="&url.imode;">i-mode</link>
     o <link xlink:href="&url.ezweb;">EZweb</link>
     se suponen utilizan Shift_JIS.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Hasta PHP 5.4.0, los caracteres pictograma
     utilizados para el servicio de teléfono móvil 
     tales como <link xlink:href="&url.imode;">i-mode</link>
     o <link xlink:href="&url.ezweb;">EZweb</link>
     están soportados.       
    </simpara>
   </listitem>
  </itemizedlist>
 </para>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

