<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 327484 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id='function.xslt-set-scheme-handlers' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>xslt_set_scheme_handlers</refname>
  <refpurpose>Establecer los gestores de esquemas para el procesador de <acronym>XSLT</acronym></refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>xslt_set_scheme_handlers</methodname>
   <methodparam><type>resource</type><parameter>xh</parameter></methodparam>
   <methodparam><type>array</type><parameter>handlers</parameter></methodparam>
  </methodsynopsis>
  <para>
   Registra los gestores de esquemas (gestores de XPath) para el documento.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &xslt.parameter.xh;
    <varlistentry>
     <term><parameter>handlers</parameter></term>
     <listitem>
      <para>
       Un array con las siguientes claves: <literal>"get_all"</literal>, 
       <literal>"open"</literal>, <literal>"get"</literal>, <literal>"put"</literal>,
       y <literal>"close"</literal>.
      </para>
      <para>
       Cada entrada debe ser un nombre de función o un array con el siguiente
       formato: <literal>array($objeto, "método")</literal>.
      </para>
      <para>
       Observe que el array dado no necesita contener todos los diferentes elementos
       de gestores de esquemas (aunque podría), sino solamente lo necesario
       para cumplir con el formato <literal>"gestor" =&gt; "función"</literal>
       descrito arriba.
      </para>
      <para>
       Cada una de las funciones de gestores de esquemas llamadas individualemten están
       en los siguientes formatos:
       <screen>
<![CDATA[
string   get_all(resource procesador, string esquema, string resto)
resource open(resource procesador, string esquema, string resto)
int      get(resource procesador, resource fp, string &datos)
int      put(resource procesador, resource fp, string datos)
void     close(resource procesador, resource fp)
]]>
       </screen>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>xslt_set_scheme_handlers</function></title>
    <para>
     He aquí una implementación de la función "file_exists()" de PHP.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

// Descripción del gestor
function miGestorDeEsquemas($procesador, $esquema, $resto)
{
    $resto = substr($resto,1);    // para eliminar el primer / añadido automáticamente por el motor
    if ($esquema == 'file_exists') {
        // el resultado se embebe en un string xml pequeño
        return '<?xml version="1.0" encoding="UTF-8"?><root>' . (file_exists($resto) ? 'true' : 'false') . '</root>';
    }
}

$ArrayGestoresEsquemas = array('get_all' => 'miGestorDeEsquemas');

// Iniciar el motor
$parámetros = array();
$xh = xslt_create();

xslt_set_scheme_handlers($xh, $ArrayGestoresEsquemas);

$resultado = xslt_process($xh, "miFichero.xml", "miFichero.xsl", NULL, array(), $parámetros);
xslt_free($xh);

echo $resultado;

?>
]]>
    </programlisting>
    <para>
     Después, dentro de la hoja de estilo, se puede probar si cierto fichero existe con:
    </para>
    <programlisting role="xml">
<![CDATA[
<xsl:if test="document('file_exists:otroFicheroXML.xml')/root='true'">
 <!-- El fichero existe -->
</xsl:if>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>xslt_set_scheme_handler</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
