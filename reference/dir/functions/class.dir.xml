<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.13 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/dir.xml, last change in rev 1.2 -->
<refentry xml:id="class.dir" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>dir</refname>
  <refpurpose>Devolver una instancia de la clase Directory</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>Directory</classname></ooclass>
   <constructorsynopsis>
    <methodname>Directory</methodname>
    <methodparam><type>string</type><parameter>directorio</parameter></methodparam>
   </constructorsynopsis>
   <fieldsynopsis>
    <type>string</type><varname>path</varname>
   </fieldsynopsis>
   <fieldsynopsis>
    <type>resource</type><varname>handle</varname>
   </fieldsynopsis>
   <methodsynopsis><type>string</type><methodname>read</methodname><void/></methodsynopsis>
   <methodsynopsis><type>void</type><methodname>rewind</methodname><void/></methodsynopsis>
   <methodsynopsis><type>void</type><methodname>close</methodname><void/></methodsynopsis>
  </classsynopsis>
  <para>
   Un mecanismo pseudo-orientado a objetos para la lectura de un directorio.
   El <parameter>directorio</parameter> dado es abierto. Se encuentran
   disponibles dos propiedades una vez el directorio ha sido abierto. La
   propiedad handle puede ser usada con otras funciones de directorio como
   <function>readdir</function>, <function>rewinddir</function> y
   <function>closedir</function>. La propiedad path se define con la ruta
   del directorio que fue abierto. Hay tres métodos disponibles: read,
   rewind y close.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>dir</function></title>
    <para>
     Por favor note la forma en que el valor de retorno de
     <function>dir::read</function> es chequeado en el siguiente ejemplo. Se
     está probando explícitamente si el valor de retorno es idéntico (igual
     y del mismo tipo que - vea los <link
     linkend="language.operators.comparison">Operadores de
     Comparación</link> para más información) a &false; ya que de otra
     forma, cualquier entrada de directorio cuyo nombre evalúe a &false;
     detendrá el ciclo.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$d = dir("/etc/php5");
echo "Gestor: " . $d->handle . "\n";
echo "Ruta: " . $d->path . "\n";
while (false !== ($entrada = $d->read())) {
   echo $entrada."\n";
}
$d->close();
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Gestor: Resource id #2
Ruta: /etc/php5
.
..
apache
cgi
cli
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    El orden en el que las entradas de directorio son devueltas por el
    método read depende del sistema.
   </para>
  </note>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
