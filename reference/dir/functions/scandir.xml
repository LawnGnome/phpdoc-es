<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.3 Maintainer: lboshell Status: ready -->
  <refentry id="function.scandir">
   <refnamediv>
    <refname>scandir</refname>
    <refpurpose>
    Lista los archivos y directorios ubicados en la ruta especificada
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>array</type><methodname>scandir</methodname>
      <methodparam><type>string</type><parameter>directorio</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>sentido_de_ordenamiento</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>contexto</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve un <type>array</type> de archivos y directorios que se
     encuentran bajo <parameter>directorio</parameter>. Si
     <parameter>directorio</parameter> no es un directorio, entonces
     el valor booleano &false; es retornado, y se genera un error de
     nivel <constant>E_WARNING</constant>.
    </para>
    <para>
     Por defecto, el sentido del ordenamiento es ascendente. Si es
     usado el par&aacute;metro opcional
     <parameter>sentido_de_ordenamiento</parameter> (definido como 1),
     entonces el sentido ser&aacute; descendente.
    </para>
    <para>
     <example>
      <title>Un ejemplo simple de <function>scandir</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$dir    = '/tmp';
$archivos1 = scandir($dir);
$archivos2 = scandir($dir, 1);

print_r($archivos1);
print_r($archivos2);
?>
]]>
      </programlisting>
      <para>
       Genera una salida como:
      </para>
      <screen>
<![CDATA[
Array
(
    [0] => .
    [1] => ..
    [2] => bar.php
    [3] => directorio_cualquiera
    [4] => foo.txt
)
Array
(
    [0] => foo.txt
    [1] => directorio_cualquiera
    [2] => bar.php
    [3] => ..
    [4] => .
)
]]>
      </screen>
     </example>
    </para>
    <para>
     <example>
      <title>Alternativas a <function>scandir</function> con PHP 4</title>
      <programlisting role="php">
<![CDATA[
<?php
$dir = "/tmp";
$dh  = opendir($dir);
while (false !== ($nombre_archivo = readdir($dh))) {
    $archivos[] = $nombre_archivo;
}

sort($archivos);

print_r($archivos);

rsort($archivos);

print_r($archivos);

?>
]]>
      </programlisting>
      <para>
       Genera una salida como:
      </para>
      <screen>
<![CDATA[
Array
(
    [0] => .
    [1] => ..
    [2] => bar.php
    [3] => directorio_cualquiera
    [4] => foo.txt
)
Array
(
    [0] => foo.txt
    [1] => directorio_cualquiera
    [2] => bar.php
    [3] => ..
    [4] => .
)
]]>
      </screen>
     </example>
    </para>
    &tip.fopen-wrapper;
    <para>
     Vea tambi&eacute;n <function>opendir</function>,
     <function>readdir</function>,
     <function>glob</function>, 
     <function>is_dir</function>, y
     <function>sort</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
