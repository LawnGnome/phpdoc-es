<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.13 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/misc.xml, last change in rev 1.58 -->
  <refentry id="function.eval">
   <refnamediv>
    <refname>eval</refname>
    <refpurpose>Evaluar una cadena como c&oacute;digo PHP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>mixed</type><methodname>eval</methodname>
      <methodparam><type>string</type><parameter>cadena_codigo</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>eval</function> eval&uacute;a la cadena dada en
     <parameter>cadena_codigo</parameter> como c&oacute;digo
     PHP. Entre otras cosas, esto puede ser &uacute;til para almacenar
     c&oacute;digo en un campo de texto en una base de datos para su
     ejecuci&oacute;n posterior.
    </simpara>
    <simpara>
     Existen algunos factores a tener en cuenta cuando se usa
     <function>eval</function>. Recuerde que la cadena pasada debe ser
     c&oacute;digo PHP v&aacute;lido, incluyendo cosas como la
     terminaci&oacute;n de sentencias con un punto-y-coma de modo que
     el int&eacute;rprete no falle en la l&iacute;nea siguiente al
     llamado a <function>eval</function>, y escapar apropiadamente las
     cosas en <parameter>cadena_codigo</parameter>.
     </simpara>
    <simpara>
     Recuerde tambi&eacute;n que las variables que reciben valores
     bajo <function>eval</function> conservar&aacute;n esos valores en
     el script principal m&aacute;s adelante.
    </simpara>
    <simpara>
     Una sentencia <literal>return</literal> finalizar&aacute; la
     evaluaci&oacute;n de la cadena inmediatamente. A partir de PHP 4,
     <function>eval</function> devuelve &null; a menos que se llame
     <literal>return</literal> en el c&oacute;digo evaluado, en cuyo
     caso el valor pasado a <literal>return</literal> es devuelto. En
     caso de que ocurra un error de an&aacute;lisis sint&aacute;ctico
     en el c&oacute;digo evaluado, <function>eval</function> devuelve
     &false;. En caso de que ocurra un error fatal en el c&oacute;digo
     evaluado, el script completo finaliza. En PHP 3,
     <function>eval</function> no devuelve un valor.
    </simpara>
    <para>
     <example>
      <title>
       Ejemplo de <function>eval</function> - uni&oacute;n de texto
       simple
      </title>
      <programlisting role="php">
<![CDATA[
<?php
$cadena = 'taza';
$nombre = 'cafe';
$cad = 'Esta es una $cadena con mi $nombre en ella.';
echo $cad. "\n";
eval("\$cad = \"$cad\";");
echo $cad. "\n";
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
Esta es una $cadena con mi $nombre en ella.
Esta es una taza con mi cafe en ella.
]]>
      </screen>
     </example>
    </para>
    &tip.ob-capture;
    <para>
     Vea tambi&eacute;n <function>call_user_func</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
