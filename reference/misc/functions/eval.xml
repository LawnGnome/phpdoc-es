<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: seros Status: ready -->
<refentry xml:id="function.eval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>eval</refname>
  <refpurpose>Evaluar una cadena como código PHP</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>eval</methodname>
   <methodparam><type>string</type><parameter>code_str</parameter></methodparam>
  </methodsynopsis>
  <para>
   Evalua la cadena dada por <parameter>code_str</parameter> como código PHP.
   Entre otras cosas, esto puede ser útil para almacenar código en un campo de texto de
   una base de datos para su ejecución posterior.
  </para>
  <para>
   Existen algunos factores que hay que tener en cuenta cuando se usa
   <function>eval</function>. Recuerde que la cadena pasada debe ser código
   PHP válido, incluyendo aspectos como la finalización de las sentencias con un punto y coma, ya
   que así el analizador no terminará en la línea que va después de <function>eval</function>,
   y escapar de manera apropiada cosas en <parameter>code_str</parameter>. Para mezclar
   salida HTML y código PHP se puede usar una etiqueta de cierre de PHP para dejar el modo PHP.
  </para>
  <para>
   Recuerde también que los valores de las variables dadas bajo <function>eval</function>
   conservarán después estos valores en el script principal.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>code_str</parameter></term>
     <listitem>
      <para>
       La cadena de código a ser evaluada.
       <parameter>code_str</parameter> no tiene que contener <link
       linkend="language.basic-syntax.phpmode">etiquetas de apertura de PHP</link>.
      </para>
      <para>
       Una sentencia <literal>return</literal> finalizará inmediantamente la
       evaluación de la cadena. 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>eval</function> devuelve &null; a menos que
   se llame a <literal>return</literal> en el código evaluado, en cuyo caso
   el valor pasado a <literal>return</literal> es devuelto. Si hay un
   error de análisis en el código evaluado, <function>eval</function> devolverá
   &false; y la ejecución del código posterior continuará normalmente. No es
   posible capturar un error de análisis de <function>eval</function>
   usando <function>set_error_handler</function>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>eval</function> - fusión de texto sencillo</title>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = 'taza';
$nombre = 'café';
$str = 'Esto es una $cadena con mi $nombre en ella.';
echo $str. "\n";
eval("\$str = \"$str\";");
echo $str. "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Esto es una $cadena con mi $nombre en ella.
Esto es una taza con mi café en ella.
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &note.language-construct;

  &tip.ob-capture;
  <note>
   <para>
    En caso de un error fatal en el código evaluado, se saldrá del script completamente.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
