<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.10 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/misc.xml, last change in rev 1.2 -->
  <refentry id="function.get-browser">
   <refnamediv>
    <refname>get_browser</refname>
    <refpurpose>
     Indica las capacidades del navegador del usuario
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>object</type><methodname>get_browser</methodname>
      <methodparam choice="opt"><type>string</type><parameter>agente_usuario</parameter></methodparam>
     </methodsynopsis>
    <simpara>
	 <function>get_browser</function> intenta determinar las
     capacidades del navegador del usuario. Para ello consulta el
     archivo de informaci&oacute;n del navegador,
     <filename>browscap.ini</filename>. Por defecto, se utiliza el
     valor de <varname>$_SERVER["HTTP_USER_AGENT"]</varname>; sin
     embargo, puede alterar este comportamiento (es decir, consultar
     la informaci&oacute;n de otro navegador) pasando el
     par&aacute;metro opcional <parameter>agente_usuario</parameter> a
     <function>get_browser</function>.
    </simpara>
    <simpara>
     La informaci&oacute;n se devuelve en un <type>object</type>, el
     cual contendr&aacute; varios elementos de datos que representan,
     por ejemplo, los n&uacute;meros de versi&oacute;n mayor y menor
     del navegador y la cadena ID; valores &true;/&false; para
     caracter&iacute;sticas como los frames, JavaScript, y cookies; y
     as&iacute; sucesivamente.
    </simpara>
    <simpara>
     Aunque <filename>browscap.ini</filename> contiene
     informaci&oacute;n sobre muchos navegadores, depende de
     actualizaciones del usuario para mantener la base de datos al
     d&iacute;a. El formato del archivo es bastante auto-explicativo.
    </simpara>
    <para>
     El siguiente ejemplo muestra como se puede listar toda la
     informaci&oacute;n disponible sobre el navegador del usuario.
     <example>
      <title>Ejemplo de <function>get_browser</function></title>
      <programlisting role="php">
<![CDATA[
<?php
echo $_SERVER['HTTP_USER_AGENT'] . "<hr />\n";

$navegador = get_browser();

foreach ($navegador as $nombre => $valor) {
    echo "<b>$nombre</b> $valor <br />\n";
}

?>
]]>
      </programlisting>
      <simpara>
       La salida del script anterior lucir&aacute; algo como:
      </simpara>
      <screen role="html">
<![CDATA[
Mozilla/4.5 [en] (X11; U; Linux 2.2.9 i586)<hr />
<b>browser_name_pattern:</b> Mozilla/4\.5.*<br />
<b>parent:</b> Netscape 4.0<br />
<b>platform:</b> Linux<br />
<b>majorver:</b> 4<br />
<b>minorver:</b> 5<br />
<b>browser:</b> Netscape<br />
<b>version:</b> 4<br />
<b>frames:</b> 1<br />
<b>tables:</b> 1<br />
<b>cookies:</b> 1<br />
<b>backgroundsounds:</b> <br />
<b>vbscript:</b> <br />
<b>javascript:</b> 1<br />
<b>javaapplets:</b> 1<br />
<b>activexcontrols:</b> <br />
<b>beta:</b> <br />
<b>crawler:</b> <br />
<b>authenticodeupdate:</b> <br />
<b>msn:</b> <br />
]]>
      </screen>
     </example>
    </para>
    <simpara>
     Para que &eacute;sto funcione, su opci&oacute;n de
     configuraci&oacute;n
     <link linkend="ini.browscap">browscap</link> en &php.ini; debe
     apuntar a la ubicaci&oacute;n correcta del archivo
	 <filename>browscap.ini</filename> en su
     sistema. <filename>browscap.ini</filename> no hace parte de la
     distribuci&oacute;n de PHP, pero puede encontrar un <ulink
     url="&url.browscap.download;">archivo browscap.ini actualizado
     aqu&iacute;</ulink>. Por defecto, la directiva
     <link linkend="ini.browscap">browscap</link> se encuentra
     comentada.
    </simpara>
    <simpara>
     El valor <literal>cookies</literal> simplemente quiere decir que
     el navegador mismo tiene la capacidad de aceptar cookies y no
     quiere decir que el usuario haya habilitado el navegador para que
     acepte cookies o no. La &uacute;nica manera de probar si las
     cookies son aceptadas es definir una
     con <function>setcookie</function>, recargar, y chequear el
     valor.
    </simpara>
    <note>
     <simpara>
      En versiones anteriores a PHP 4.0.6, tendr&aacute; que pasar el
      agente de usuario a trav&eacute;s del par&aacute;metro
      opcional <parameter>agente_usuario</parameter> si el valor de la
      directiva <link
      linkend="ini.register-globals">register_globals</link>
      es <literal>off</literal>. En este caso, debe
      pasar <varname>$HTTP_SERVER_VARS['HTTP_USER_AGENT']</varname>.
     </simpara>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
