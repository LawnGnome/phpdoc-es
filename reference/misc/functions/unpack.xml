<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.7 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.unpack" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unpack</refname>
  <refpurpose>Desempaqueta datos de una cadena binaria</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>unpack</methodname>
   <methodparam><type>string</type><parameter>formato</parameter></methodparam>
   <methodparam><type>string</type><parameter>datos</parameter></methodparam>
  </methodsynopsis>
  <para>
   Desempaqueta desde una cadena binaria a una matriz de acuerdo a
   <parameter>formato</parameter>.
  </para>
  <para>
   <function>unpack</function> opera ligeramente distinto que en Perl ya que
   los datos desempaquetados son almacenados en una matriz asociativa. Para
   lograr esto es necesario nombrar los diferentes códigos de formato y
   separarlos con una barra /.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>formato</parameter></term>
     <listitem>
      <para>
       Vea <function>pack</function> para una explicación de los códigos de
       formato.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>datos</parameter></term>
     <listitem>
      <para>
       Los datos empaquetados.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una matriz asociativa que contiene los elementos desempaquetados
   de la cadena binaria.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>unpack</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$matriz = unpack("c2chars/nint", $datos_binarios);
?>
]]>
    </programlisting>
    <para>
     La matriz resultante contendrá las entradas "chars1", "chars2" e "int".
    </para>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Note que PHP almacena internamente los valores enteros como valores con
    signo. Si desempaqueta un entero largo sin signo y es del mismo tamaño
    que los valores almacenados internamente por PHP, el resultado será un
    número negativo incluso si se especifica un valor sin signo al
    desempaquetar.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pack</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
