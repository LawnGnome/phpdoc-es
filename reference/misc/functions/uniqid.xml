<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.12 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.uniqid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>uniqid</refname>
  <refpurpose>Generar un ID único</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>uniqid</methodname>
   <methodparam choice="opt"><type>string</type><parameter>prefijo</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>mas_entropia</parameter></methodparam>
  </methodsynopsis>
  <para>
   Obtiene un identificador con prefijo único basado en la hora actual en
   microsegundos.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>prefijo</parameter></term>
     <listitem>
      <para>
       Puede resultar útil, por ejemplo, si se generan identificadores
       simultáneamente en varias máquinas que pueden estar generando el
       identificador en el mismo microsegundo.
      </para>
      <para>
       Con un <parameter>prefijo</parameter> vacío, la cadena devuelta
       tendrá una longitud de 13 caracteres. Si
       <parameter>mas_entropia</parameter> es &true;, tendrá 23 caracteres.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mas_entropia</parameter></term>
     <listitem>
      <para>
       Si es &true;, <function>uniqid</function> agregará entropía adicional
       (usando el generador de congruencia lineal combinado) al final del
       valor de retorno, lo cual puede hacer más únicos los resultados.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el identificador único, como una cadena.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Si necesita un identificador o lexema único e intenta entregar ese valor
   al usuario a través de la red (mediante cookies de sesión), es
   recomendable que use algo como lo siguiente:
  </para>
  <para>
   Esto creará un identificador de 32 caracteres (un número hexadecimal de
   128 bits) que es extremadamente difícil de predecir.
   <example>
    <title>Ejemplo de <function>uniqid</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// sin prefijo
// funciona únicamente en PHP 5 y versiones posteriores
$token = md5(uniqid());

// mejor, difícil de adivinar
$mejor_token = md5(uniqid(rand(), true));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0</entry>
       <entry>
        El parámetro <parameter>prefijo</parameter> se hizo opcional.
       </entry>
      </row>
      <row>
       <entry>4.3.1</entry>
       <entry>
        El límite de 114 caracteres de longitud para
        <parameter>prefijo</parameter> fue elevado.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
