<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283841 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.http-build-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>http_build_query</refname>
  <refpurpose>Generar una cadena de consulta codificada estilo
  URL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>http_build_query</methodname>
   <methodparam><type>array</type><parameter>datos_formulario</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>prefijo_numerico</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>separador_arg</parameter></methodparam>
  </methodsynopsis>
  <para>
   Genera una cadena de consulta codificada estilo URL a partir de la matriz
   asociativa (o indexada) dada.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>datos_formulario</parameter></term>
     <listitem>
      <para>
       Puede ser una matriz u objeto que contenga propiedades.
      </para>
      <para>
       El formulario puede ser una estructura uni-dimensional sencilla, o
       una matriz de matrices (que a su vez puede contener otras matrices).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>prefijo_numerico</parameter></term>
     <listitem>
      <para>
       Si se usan índices numéricos en la matriz base y se provee este
       parámetro, éste será añadido al comienzo de los índices numéricos
       para aquellos elementos encontrados sólo en la matriz base.
      </para>
      <para>
       Esto es para permitir que se opere con nombres de variables legales
       cuando los datos sean decodificados por PHP u otra aplicación CGI más
       adelante.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>separador_arg</parameter></term>
     <listitem>
      <para>
       <link linkend="ini.arg-separator.output">arg_separator.output</link>
       es usado para separar argumentos, a menos que este parámetro sea
       especificado, en cuyo caso éste será usado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una cadena codificada en forma URL.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.2</entry>
       <entry>
        Se agregó el parámetro <parameter>separador_arg</parameter>.
       </entry>
      </row>
      <row>
       <entry>5.1.3</entry>
       <entry>
        Los corchetes cuadrados son escapados.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Uso simple de <function>http_build_query</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$datos = array('foo'=>'bar',
               'baz'=>'boom',
               'vaca'=>'leche',
               'php'=>'procesador de hipertexto');

echo http_build_query($datos); // foo=bar&baz=boom&vaca=leche&php=procesador+de+hipertexto
echo http_build_query($data, '', '&amp;'); // foo=bar&amp;baz=boom&amp;vaca=leche\&amp;php=procesador+de+hipertexto
?>
]]>
   </programlisting>
  </example>

  <example>
   <title><function>http_build_query</function> con elementos
   indexados numéricamente.</title>
   <programlisting role="php">
<![CDATA[
<?php
$datos = array('foo', 'bar', 'baz', 'boom', 'vaca' => 'leche',
               'php' => 'procesador de hipertexto');

echo http_build_query($datos) . "\n";
echo http_build_query($datos, 'mivar_');
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
0=foo&1=bar&2=baz&3=boom&vaca=leche&php=procesador+de+hipertexto
mivar_0=foo&mivar_1=bar&mivar_2=baz&mivar_3=boom&vaca=leche&php=procesador+de+hipertexto
]]>
   </screen>
  </example>
  <example>
   <title><function>http_build_query</function> con matrices
   complejas</title>
   <programlisting role="php">
<![CDATA[
<?php
$datos = array('usuario'=>array('nombre'=>'Bob Smith',
                                'edad'=>47,
                                'sexo'=>'M',
                                'fdm'=>'5/12/1956'),
               'pasatiempos'=>array('golf', 'opera', 'poker', 'rap'),
               'hijos'=>array('bobby'=>array('edad'=>12,
                                             'sexo'=>'M'),
                              'sally'=>array('edad'=>8,
                                             'sexo'=>'F')),
               'CEO');

echo http_build_query($datos, 'banderas_');
?>
]]>
     </programlisting>
     <para>
      esto generará la salida: (acotada por razones de legibilidad)
     </para>
     <screen>
<![CDATA[
usuario%5Bnombre%5D=Bob+Smith&usuario%5Bedad%5D=47&usuario%5Bsexo%5D=M&
usuario%5Bfdm%5D=5%2F12%2F1956&pasatiempos%5B0%5D=golf&pasatiempos%5B1%5D=opera&
pasatiempos%5B2%5D=poker&pasatiempos%5B3%5D=rap&hijos%5Bbobby%5D%5Bedad%5D=12&
hijos%5Bbobby%5D%5Bsexo%5D=M&hijos%5Bsally%5D%5Bedad%5D=8&
hijos%5Bsally%5D%5Bsexo%5D=F&banderas_0=CEO
]]>
   </screen>
   <para>
    <note>
     <para>
      Sólo el elemento "CEO" indexado numéricamente en la matriz base
      recibió un prefijo. Los otros índices numéricos, encontrados bajo los
      pasatiempos, no requieren un prefijo tipo cadena para ser nombres
      legales de variables.
     </para>
    </note>
   </para>
  </example>

  <example>
   <title>Uso de <function>http_build_query</function> con un objeto</title>
   <programlisting role="php">
<![CDATA[
<?php
class miClase {
    var $foo;
    var $baz;

    function miClase() {
        $this->foo = 'bar';
        $this->baz = 'boom';
    }
}

$datos = new miClase();

echo http_build_query($datos); // foo=bar&baz=boom

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>parse_str</function></member>
    <member><function>parse_url</function></member>
    <member><function>urlencode</function></member>
    <member><function>array_walk</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
