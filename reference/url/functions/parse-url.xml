<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.9 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/url.xml, last change in rev 1.2 -->
  <refentry id="function.parse-url">
   <refnamediv>
    <refname>parse_url</refname>
    <refpurpose>Procesar una URL y devolver sus componentes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>array</type><methodname>parse_url</methodname>
      <methodparam><type>string</type><parameter>url</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esta funci&oacute;n devuelve una matriz asociativa que contiene
     aquellos componentes presentes en la URL. Si uno de ellos no
     est&aacute; presente, no se crear&aacute; una entrada para
     aqu&eacute;l. Los componentes son:
    <itemizedlist>
     <listitem>
      <simpara>
       <structfield>scheme</structfield> - p.ej. http
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <structfield>host</structfield>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <structfield>port</structfield>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <structfield>user</structfield>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <structfield>pass</structfield>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <structfield>path</structfield>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
        <structfield>query</structfield>  - despu&eacute;s del signo
        de interrogaci&oacute;n <literal>?</literal>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <structfield>fragment</structfield> -  despu&eacute;s de la
       marca de ancla <literal>#</literal>
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
    <para>
     El prop&oacute;sito de esta funci&oacute;n <emphasis
     role="strong">no</emphasis> es validar la URL dada, tan
     s&oacute;lo la separa en las partes listadas anteriormente. Las
     URLs parciales son aceptadas tambi&eacute;n,
     <function>parse_url</function> hace lo mejor que puede para
     procesarlas correctamente.
    </para>
    <note>
     <para>
      Esta funci&oacute;n no trabaja con URLs relativas.
     </para>
    </note>
    <example>
     <title>Ejemplo de <function>parse_url</function></title>
     <screen>
$ php -r 'print_r(parse_url("http://nombre_usuario:contrasenya@nombre-host/ruta?arg=valor#ancla"));'
Array
(
    [scheme] => http
    [host] => nombre-host
    [user] => nombre_usuario
    [pass] => contrasenya
    [path] => /ruta
    [query] => arg=valor
    [fragment] => ancla
)

$ php -r 'print_r(parse_url("http://nombre..host_invalido/"));'
Array
(
    [scheme] => http
    [host] => nombre..host_invalido
    [path] => /
)
     </screen>
    </example>
    <para>
     Vea tambi&eacute;n <function>pathinfo</function>,
     <function>parse_str</function>, <function>dirname</function>, y
     <function>basename</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
