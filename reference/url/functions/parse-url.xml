<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/url.xml, last change in rev 1.1 -->
<!-- last change to 'parse-url' in en/ tree in rev 1.2 -->
  <refentry id="function.parse-url">
   <refnamediv>
    <refname>parse_url</refname>
    <refpurpose>Analiza una URL y devuelve sus componentes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>array</type><methodname>parse_url</methodname>
     <methodparam><type>string</type><parameter>url</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esta funci&oacute;n devuelve una matriz asociativa con los
     componentes de la URL que est&eacute;n presentes. Si alguno de
     ellos no est&aacute; presente no se crear&aacute; su correspondiente clave.
         <itemizedlist>
          <listitem>
           <simpara>
            <structfield>scheme</structfield> - por ejemplo: http
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <structfield>host</structfield> 
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <structfield>port</structfield>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <structfield>user</structfield>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <structfield>pass</structfield>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <structfield>path</structfield>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
             <structfield>query</structfield>  - lo que hay despu&eacute;s de <literal>?</literal>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <structfield>fragment</structfield> -  lo que hay despu&eacute;s de <literal>#</literal>
           </simpara>
          </listitem>
    </itemizedlist>
     </para>
    <para>
     Esta funci&oacute;n <emphasis role="strong">no</emphasis> est&aacute; destinada a validar
     la URL dada, solo devuelve las partes correspondientes de una URL. Tambi&eacute;n se
     aceptan URLs parciales, <function>parse_url</function> intenta interpretarlas correctamente.
    </para>
    <note>
     <para>
      Esta funci&oacute;n no funciona con URLs relativas al documento
     </para>
    </note>
    <example>
     <title><function>parse_url</function> example</title>
     <screen>
$ php -r 'print_r(parse_url("http://usuario:contrasena@servidor/ruta?argumento=valor#ancla"));'
Array
(
    [scheme] => http
    [host] => servidor
    [user] => usuario
    [pass] => contrasena
    [path] => /ruta
    [query] => argumento=valor
    [fragment] => ancla
)

$ php -r 'print_r(parse_url("http://servidor_invalido..dominio/"));'
Array
(
    [scheme] => http
    [host] => servidor_invalido..dominio
    [path] => /
)
     </screen>
    </example>
    <para>
     Ver tambi&eacute;n <function>pathinfo</function>, <function>parse_str</function>,
     <function>dirname</function>, y <function>basename</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
