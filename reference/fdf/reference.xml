<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.9 Maintainer: lboshell Status: ready -->
 <reference id="ref.fdf">
  <title>Funciones del Formato de Datos de Formulario</title>
  <titleabbrev>FDF</titleabbrev>

  <partintro>

   <section id="fdf.intro">
   &reftitle.intro;
   <simpara>
    El Formato de Datos de Formulario (FDF) es un formato para la
    gesti&oacute;n de formularios al interior de documentos PDF. Es
    recomendable que lea la documentaci&oacute;n en <ulink
    url="&spec.pdf.fdf;">&spec.pdf.fdf;</ulink> para m&aacute;s
    informaci&oacute;n sobre lo que FDF es, y el modo de usarlo en
    general.
   </simpara>
   <simpara>
    La idea general de FDF es similar a la de los formularios HTML. La
    diferencia es b&aacute;sicamente el formato en que los datos son
    transmitidos al servidor cuando el bot&oacute;n de env&iacute;o es
    pulsado (el cual viene a ser el Formato de Datos de Formulario) y
    el formato del formulario mismo (el cual es el Formato de
    Documento Portable, PDF). El procesamiento de los datos FDF es una
    de las caracter&iacute;sticas ofrecidas por las funciones
    fdf. Pero hay m&aacute;s. Tambi&eacute;n es posible tomar un
    formulario PDF existente y poblar los campos de entrada con datos
    sin modificar el formulario mismo. En tal caso, es posible crear
    un documento FDF (<function>fdf_create</function>), definir los
    valores de cada campo de entrada
    (<function>fdf_set_value</function>) y asociarlo con un formulario
    PDF (<function>fdf_set_file</function>). Finalmente debe ser
    enviado al navegador con el tipo Mime
    <literal>application/vnd.fdf</literal>. El plugin lector de
    Acrobat en su navegador reconoce el tipo Mime, lee el formulario
    PDF asociado y aplica los datos del documento FDF.
   </simpara>

   <simpara>
    Si echa un vistazo a un documento FDF con un editor de texto,
    encontrar&aacute; un objeto de cat&aacute;logo con el nombre
    <literal>FDF</literal>. Tal objeto puede contener cierto
    n&uacute;mero de entradas como <literal>Fields</literal>,
    <literal>F</literal>, <literal>Status</literal> etc.. Las entradas
    usadas con m&aacute;s frecuencia son <literal>Fields</literal>, la
    cual apunta a una lista de campos de entrada, y
    <literal>F</literal> que contiene el nombre de archivo del
    documento PDF al que pertenecen estos datos. Esas entradas son
    referenciadas en la documentaci&oacute;n FDF como /F-Key o
    /Status-Key. La modificaci&oacute;n de estas entradas se realiza
    por medio de funciones como <function>fdf_set_file</function> y
    <function>fdf_set_status</function>. Los campos son mofidicados
    con <function>fdf_set_value</function>,
    <function>fdf_set_opt</function> etc..
   </simpara>
   </section>

   <section id="fdf.requirements">
    &reftitle.required;
    <para>
     Es necesario el toolkit SDK para FDF disponible en <ulink
     url="&spec.pdf.fdf;">&spec.pdf.fdf;</ulink>. A partir de PHP 4.3
     necesita por lo menos la versi&oacute;n 5.0 del SDK. La
     biblioteca del toolkit FDF se encuentra disponible en forma
     binaria &uacute;nicamente, las plataformas soportadas por Adobe
     son Win32, Linux, Solaris y AIX.
    </para>
   </section>

   &reference.fdf.configure;

   <section id="fdf.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="fdf.resources">
    &reftitle.resources;
    <section id="fdf.resources.fdf">
     <title>fdf</title>
     <para>
      La mayor&iacute;a de funciones fdf requieren un recurso
      <parameter>fdf</parameter> como su primer par&aacute;metro. Un
      recurso <parameter>fdf</parameter> es un gestor con un archivo
      fdf abierto. Los recursos <parameter>fdf</parameter> pueden
      obtenerse usando <function>fdf_create</function>,
      <function>fdf_open</function> y
      <function>fdf_open_string</function>.
     </para>
    </section>
   </section>

   &reference.fdf.constants;

   <section id="fdf.examples">
   &reftitle.examples;
    <para>
     Los siguientes ejemplos muestran &uacute;nicamente la
     evaluaci&oacute;n de datos del formulario.
     <example>
      <title>Evaluaci&oacute;n de un documento FDF</title>
       <programlisting role="php">
<![CDATA[
<?php
// Abrir un fdf desde la cadena de entrada entregara por la extension
// El formulario pdf contenia varios campos de entrada de texto con los
// nombres volumen, fecha, comentario, editorial, editor, y dos
// cuadros de verificacion mostrar_editorial y mostrar_editor.
$fdf = fdf_open_string($HTTP_FDF_DATA);
$volumen = fdf_get_value($fdf, "volumen");
echo "El campo volumen tiene el valor '<b>$volumen</b>'<br />";

$fecha = fdf_get_value($fdf, "fecha");
echo "El campo fecha tiene el valor '<b>$fecha</b>'<br />";

$comentario = fdf_get_value($fdf, "comentario");
echo "El campo comentario tiene el valor '<b>$comentario</b>'<br />";

if (fdf_get_value($fdf, "mostrar_editorial") == "On") {
  $editorial = fdf_get_value($fdf, "editorial");
  echo "El campo editorial tiene el valor '<b>$editorial</b>'<br />";
} else
  echo "La editorial no ser&aacute; mostrada.<br />";

if (fdf_get_value($fdf, "mostrar_editor") == "On") {
  $editor = fdf_get_value($fdf, "editor");
  echo "El campo editor tiene el valor '<b>$editor</b>'<br />";
} else
  echo "El editor no ser&aacute; mostrado.<br />";
fdf_close($fdf);
?>
]]>
       </programlisting>
     </example>
    </para>
   </section>
   
  </partintro>

&reference.fdf.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
