<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.7 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/funchand.xml, last change in rev 1.1 -->
  <refentry id="function.func-get-arg">
   <refnamediv>
    <refname>func_get_arg</refname>
    <refpurpose>Devolver un elemento desde la lista de
    argumentos</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>mixed</type><methodname>func_get_arg</methodname>
      <methodparam><type>int</type><parameter>num_arg</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Devuelve el argumento en la posici&oacute;n
     <parameter>num_arg</parameter> en la lista de argumentos de una
     funci&oacute;n definida por el usuario. Los argumentos de
     funci&oacute;n son contados comenzando desde
     cero. <function>func_get_arg</function> generar&aacute; una
     advertencia si es llamada desde afuera de una definici&oacute;n
     de funci&oacute;n. Esta funci&oacute;n no puede ser usada
     directamente como un par&aacute;metro de funci&oacute;n. En su
     lugar, su resultado puede ser asignado a una variable, la cual
     puede ser pasada entonces a la funci&oacute;n.
    </simpara>
    <simpara>
     Si <parameter>num_arg</parameter> es mayor que el n&uacute;mero
     de argumentos pasados en el contexto actual, se generar&aacute;
     una advertencia y <function>func_get_arg</function>
     devolver&aacute; &false;.
    </simpara>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
function foo()
{
     $num_args = func_num_args();
     echo "Numero de argumentos: $num_args<br />\n";
     if ($num_args >= 2) {
     echo "El segundo argumento es: " . func_get_arg(1) . "<br />\n";
     }
}

foo (1, 2, 3);
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     <function>func_get_arg</function> puede ser usada en conjunto con
     <function>func_num_args</function> y
     <function>func_get_args</function> para permitir que funciones
     definidas por el usuario acepten listas de argmuntos de longitud
     variable.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
