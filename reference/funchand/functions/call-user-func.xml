<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.17 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.call-user-func" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>call_user_func</refname>
  <refpurpose>Llamar una función de usuario dada por el primer
  parámetro</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>call_user_func</methodname>
   <methodparam><type>callback</type><parameter>funcion</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>parametro</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Llamar una función definida por el usuario dada por el parámetro
   <parameter>funcion</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>funcion</parameter></term>
     <listitem>
      <para>
       La función a ser llamada. Los métodos de clases pueden ser invocados
       estáticamente también usando esta función, pasando
       <literal>array($nombre_clase, $nombre_metodo)</literal> a este
       parámetro.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parametro</parameter></term>
     <listitem>
      <para>
       Cero o más parámetros a ser pasados a la función.
      </para>
      <note>
       <para>
        Note que los parámetros para <function>call_user_func</function> no
        son pasados por referencia.
        <informalexample>
         <programlisting role="php">
<![CDATA[
<?php
function incremento(&$var)
{
    $var++;
}

$a = 0;
call_user_func('incremento', $a);
echo $a; // 0

call_user_func_array('incremento', array(&$a)); // Puede usar esto en su lugar
echo $a; // 1
?>
]]>
         </programlisting>
        </informalexample>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el resultado de la función, o &false; en caso de error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>call_user_func</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
function peluquero($tipo)
{
    echo "Usted quería un corte $tipo, no hay problema";
}
call_user_func('peluquero', "hongo");
call_user_func('peluquero', "afeitado");
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Uso de un método de clase</title>
    <programlisting role="php">
<![CDATA[
<?php
class miclase {
    function decir_hola()
    {
        echo "¡Hola!\n";
    }
}

$nombre_clase = "miclase";

call_user_func(array($nombre_clase, 'decir_hola'));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func_array</function></member>
    <member><function>is_callable</function></member>
    <member>&seealso.callback;</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
