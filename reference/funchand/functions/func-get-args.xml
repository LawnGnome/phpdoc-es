<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.12 Maintainer: lboshell Status: ready -->
<refentry id="function.func-get-args">
 <refnamediv>
  <refname>func_get_args</refname>
  <refpurpose>Devuelve una matriz que comprende la lista de argumentos de
  una función</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>func_get_args</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Obtiene una matriz con la lista de argumentos de la función.
  </para>
  <para>
   Esta función puede ser usada en conjunto con
   <function>func_get_arg</function> y <function>func_num_args</function>
   para permitir que funciones definidas por el usuario acepten listas de
   argumentos de longitud variable.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una matriz en la cual cada elemento es una copia del miembro
   correspondiente de la lista de argumentos de la función definida por el
   usuario actual.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Genera una advertencia si es llamada desde afuera de una función definida
   por el usuario.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>func_get_args</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function foo()
{
    $num_args = func_num_args();
    echo "Número de argumentos: $num_args<br />\n";
    if ($num_args >= 2) {
        echo "El segundo argumento es: " . func_get_arg(1) . "<br />\n";
    }
    $lista_args = func_get_args();
    for ($i = 0; $i < $num_args; $i++) {
        echo "El argumento $i es: " . $lista_args[$i] . "<br />\n";
    }
}

foo(1, 2, 3);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.funcnoparam;
  <note>
   <simpara>
    Esta función devuelve una copia de los argumentos pasados únicamente, y
    no toma en cuenta las argumentos predeterminados (no pasados).
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>func_get_arg</function></member>
    <member><function>func_num_args</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
