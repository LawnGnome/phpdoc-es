<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 297028 $ -->
<!-- EN-Revision: 297028 Maintainer: seros Status: ready -->
<refentry xml:id="function.register-shutdown-function" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>register_shutdown_function</refname>
  <refpurpose>Registrar una función para que sea ejecutada al cierre</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>register_shutdown_function</methodname>
   <methodparam><type>callback</type><parameter>function</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>parameter</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Registra una función nominada por <parameter>function</parameter> para ser
   ejecutada cuando el procesamiento del script esté completo o cuando se llame a
   <function>exit</function>.
  </para>
  <para>
   Se pueden hacer múltiples llamadas a <function>register_shutdown_function</function>,
   y cada una será llamada en el mismo orden en el que fueron registradas.
   Si se llama a <function>exit</function> dentro de una función de cierre
   registrada, el procesamiento se detendrá completamente y no se llamarán a otras
   funciones de cierre registradas.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
       La función de cierre a registrar.
      </para>
      <para>
       Las funciones de cierre son llamadas como parte de la petición por lo que
       es posible enviar la salida desde ellas. Actualmente no hay forma
       de procesar la información con funciones de buffer de salida en la función de
       cierre.
      </para>
      <para>
       Las funciones de cierre son llamadas después de cerrar todos los bufferes de salida,
       así, por ejemplo, su salida no será comprimida si <link
       linkend="ini.zlib.output-compression">zlib.output_compression</link> está
       habilitado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parameter</parameter></term>
     <listitem>
      <para>
       Es posible pasar parámetros a la función de cierre pasando
       parámetros adicionales.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Las funciones de cierre ahora son llamadas como parte de la petición.
        En versiones anterior bajo Apache, las funciones de cierre registradas
        eran llamadas después de que la petición hubiera sido completada (incluyendi en envío
        de cualquier buffer de salida), por lo que no era posible enviar una salida al
        navegador usando <function>echo</function> o
        <function>print</function>, o recuperar el contenido de ningún buffer de
        salida usando <function>ob_get_contents</function>.
        Las cabeceras también eran enviadas siempre.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>register_shutdown_function</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function cierre()
{
    // Esta es nuestra función de cierre,
    // aquí podemos hacer las últimas operaciones
    // antes de que el script sea completado.

    echo 'Script ejecutado con éxito', PHP_EOL;
}

register_shutdown_function('cierre');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Normalmente las funciones no definidas causan errores fatales en PHP, pero cuando la función
    llamada dada por <parameter>function</parameter> con
    <function>register_shutdown_function</function> no está definida, en su lugar
    se genera un error de nivel <constant>E_WARNING</constant>. También,
    por razones internas de PHP, este error se referirá como
    <literal>Desconcocido</literal> en la línea #0.
   </para>
  </note>
  <note>
   <para>
    El directorio de trabajo del script se puede cambiar dentro de la función de cierre
    bajo algunos servidores web, p.ej. Apache.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="ini.auto-append-file">auto_append_file</link></member>
    <member><function>exit</function></member>
    <member>La sección sobre <link
    linkend="features.connection-handling">manejo de conexiones</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
