<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: lboshell Status: ready -->
<refentry xml:id="function.register-shutdown-function" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>register_shutdown_function</refname>
  <refpurpose>Registrar una función para su ejecución al
  finalizar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>register_shutdown_function</methodname>
   <methodparam><type>callback</type><parameter>funcion</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>parametro</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Registra la función de nombre <parameter>funcion</parameter> para ser
   ejecutada cuando el procesamiento del script se haya completado.
  </simpara>
  <para>
   Es posible realizar múltiples llamadas a
   <function>register_shutdown_function</function>, y cada función será
   llamada en el mismo orden en el que son registradas. Si llama
   <function>exit</function> al interior de una de las funciones de
   finalización registradas, el procesamiento se detendrá por completo y
   ninguna otra función de finalización será llamada.
  </para>
  <para>
   En PHP 4.0.6 y versiones anteriores, bajo Apache, las funciones de
   finalización registradas son llamadas después de que la petición se ha
   completado (incluyendo el envío de todos los búferes de salida), así que
   es imposible enviar salida al navegador usando <function>echo</function>
   o <function>print</function>, o recuperar los contenidos de cualquiera de
   los búferes de salida usando <function>ob_get_contents</function>. A
   partir de PHP 4.1, las funciones de finalización son llamadas como parte
   de la petición, así que es posible enviar la salida de ellas. Actualmente
   no hay forma de procesar los datos con las funciones de búferes de salida
   en la función de finalización. La función de finalización es llamada
   después de cerrar todos los búferes de salida abiertos, por lo tanto, por
   ejemplo, su salida no será comprimida si se habilita <link
   linkend="ini.zlib.output-compression">zlib.output_compression</link>.
  </para>
  <para>
   A partir de PHP 4, es posible pasar parámetros a la función de
   finalización pasando parámetros adicionales a
   <function>register_shutdown_function</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>funcion</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parametro</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Usualmente las funciones indefinidas causan errores fatales en PHP, pero
    cuando la <parameter>funcion</parameter> llamada con
    <function>register_shutdown_function</function> es indefinida, un error
    de nivel <constant>E_WARNING</constant> es generado en su lugar.
    Asimismo, por razones internas de PHP, este error hará referencia a
    <literal>Unknown</literal> en la línea #0.
   </para>
  </note>
  <note>
   <para>
    El directorio de trabajo del script puede cambiarse al interior de la
    función de finalización bajo ciertos servidores web, p.ej. Apache.
   </para>
  </note>
 <note>
  <para>
   La función de finalización es llamada durante el cierre del script, así
   que las cabeceras siempre habrán sido enviadas para entonces.
  </para>
 </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link
    linkend="ini.auto-append-file">auto_append_file</link></member>
    <member><function>exit</function></member>
    <member>La sección sobre <link
    linkend="features.connection-handling">manejo de
    conexiones</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
