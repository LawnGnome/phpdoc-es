<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.22 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/info.xml, last change in rev 1.29 -->
  <refentry id="function.dl">
   <refnamediv>
    <refname>dl</refname>
    <refpurpose>Carga una extensión PHP en tiempo de
    ejecución</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <methodsynopsis>
     <type>int</type><methodname>dl</methodname>
   <methodparam><type>string</type><parameter>biblioteca</parameter></methodparam>
    </methodsynopsis>
    <para>
     Carga la extensión PHP dada por el parámetro
     <parameter>biblioteca</parameter>. El parámetro
     <parameter>biblioteca</parameter> es
     <emphasis>únicamente</emphasis> el nombre de archivo de la
     extensión a cargar, el cual también depende de su plataforma. Por
     ejemplo, la extensión <link linkend="ref.sockets">sockets</link>
     (si fue compilada como módulo, ¡que no es el comportamiento
     predeterminado!) podría llamarse <filename>sockets.so</filename>
     en plataformas Unix, mientras que se llama
     <filename>php_sockets.dll</filename> en la plataforma windows.
    </para>
    <para>
     &return.success; Si la funcionalidad de carga de módulos no está
     disponible (ver Nota) o ha sido deshabilitada (ya sea mediante la
     desactivación de <literal>enable_dl</literal> o activando
     &safemode; en &php.ini;) un <constant>E_ERROR</constant> es
     producido y se detiene la ejecución. Si <function>dl</function>
     falla porque la biblioteca especificada no pudo ser cargada, se
     emite un mensaje <constant>E_WARNING</constant> en compañía del
     &false;.
    </para>
    <para>
     Use <function>extension_loaded</function> para probar si una
     cierta extensión ya se encuentra disponible o no. Esto funciona
     tanto con extensiones integradas como con las cargadas
     dinámicamente (ya sea mediante &php.ini; o
     <function>dl</function>).
    </para>
    <para>
     La función <function>dl</function> es obsoleta a partir de PHP
     5. Use el método de las <link linkend="ini.extension">Directivas
     de Carga de Extensiones</link> en su lugar.
    </para>
    <example>
     <title>Ejemplos de <function>dl</function></title>
     <programlisting role="php">
<![CDATA[
<?php
// Ejemplo de carga de una extensión en base al SO
if (!extension_loaded('sqlite')) {
    if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {
        dl('php_sqlite.dll');
    } else {
        dl('sqlite.so');
    }
}

// O, usando la constante PHP_SHLIB_SUFFIX que está disponible a
// partir de PHP 4.3.0
if (!extension_loaded('sqlite')) {
    $prefijo = (PHP_SHLIB_SUFFIX === 'dll') ? 'php_' : '';
    dl($prefijo . 'sqlite.' . PHP_SHLIB_SUFFIX);
}
?>
]]>
     </programlisting>
    </example>
    <para>
     El directorio desde donde es cargada la extensión depende de su
     plataforma:
    </para>
    <para>
     Windows - Si no está definida explícitamente en &php.ini;, la
     extensión es cargada desde
     <filename>c:\php4\extensions\</filename> por defecto.
    </para>
    <para>
     Unix - Si no está definida explícitamente en &php.ini;, el
     directorio de extensiones predeterminado depende de
     <itemizedlist>
      <listitem>
       <simpara>
        si PHP ha sido compilado con <literal>--enable-debug</literal> o
        no
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        si PHP ha sido compilado con soporte ZTS (Zend Thread Safety)
        (experimental) o no
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        el valor interno <literal>ZEND_MODULE_API_NO</literal> actual
        (número interno de API de módulo Zend, el cual es básicamente
        la fecha en la que ocurrió un cambio significativo en la API
        de módulo, p.ej. <literal>20010901</literal>)
       </simpara>
      </listitem>
     </itemizedlist>
     Tomando en cuenta lo anterior, el directorio recibe el valor
     predeterminado
     de <literal>&lt;dir-instalacion&gt;/lib/php/extensions/
     &lt;debug-o-no&gt;-&lt;zts-o-no&gt;-ZEND_MODULE_API_NO</literal>,
     p.ej.
     <filename>/usr/local/php/lib/php/extensions/debug-non-zts-20010901</filename>
     o <filename>/usr/local/php/lib/php/extensions/no-debug-zts-20010901</filename>.
    </para>
    <note>
     <para>
      La función <function>dl</function> <emphasis>no</emphasis> es
      soportada en servidores Web multi-hilos. Use la sentencia
      <literal>extensions</literal> en su &php.ini; cuando trabaje
      sobre ese tipo de entornos. Sin embargo, ¡las versiones
      <literal>CGI</literal> y <literal>CLI</literal> <emphasis
      role="strong">no</emphasis> son afectadas!
     </para>
    </note>
    <note>
     <para>
      A partir de PHP 6 esta función es desahibilatad en todas las
      SAPIs, excepto CLI, CGI y embed.
     </para>
    </note>
    <note>
     <para>
      <function>dl</function> es sensible a mayúsculas y minúsculas en
      plataformas Unix.
     </para>
    </note>
    &note.sm.disabled;
    <para>
     Vea también <link linkend="ini.extension">Directivas de Carga de
     Extensión</link> y <function>extension_loaded</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
