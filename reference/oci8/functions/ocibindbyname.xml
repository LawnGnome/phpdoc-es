<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/oci8.xml, last change in rev 1.1 -->
<!-- last change to 'ocibindbyname' in en/ tree in rev 1.2 -->
  <refentry id="function.ocibindbyname">
   <refnamediv>
    <refname>OCIBindByName</refname>
    <refpurpose>Enlaza una variable PHP a un Placeholder de Oracle</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIBindByName</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>ph_name</parameter></methodparam>
      <methodparam><type>mixed &amp;</type><parameter>variable</parameter></methodparam>
      <methodparam><type>int</type><parameter>length</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIBindByName</function> enlaza la variable PHP  
     <parameter>variable</parameter> a un placeholder de Oracle
     <parameter>ph_name</parameter>.  Si esta será usada para entrada o salida 
     se determinará en tiempo de ejecución, y sera resevado el espacio necesario de
     almacenamiento. El parámetro <parameter>length</parameter> establece el tamaño máximo
     del enlace. Si establece <parameter>length</parameter> a -1
     <function>OCIBindByName</function> usará el tamaño de la
     <parameter>variable</parameter> para establecer el tamaño máximo.
    </para>
    <para>
     Si necesita enlazar tipos de datos abstractos (LOB/ROWID/BFILE) necesitará primero
     reservar la memoria con la función <function>OCINewDescriptor</function>.
     <parameter>length</parameter> no se usa para tipos de datos abstractos y
     debería establecerse a -1. La variable <parameter>type</parameter> le informa a
     Oracle, que tipo de descriptor queremos usar. Los valores posibles son:
     OCI_B_FILE (Binary-File), OCI_B_CFILE (Character-File),
     OCI_B_CLOB (Character-LOB), OCI_B_BLOB (Binary-LOB) and OCI_B_ROWID (ROWID).
    </para>
    <example>
     <title>OCIDefineByName</title>
     <programlisting>
&lt;?php
/* OCIBindByPos example thies@digicol.de (980221)

  inserts 3 resords into emp, and uses the ROWID for updating the 
  records just after the insert.
*/

$conn = OCILogon("scott","tiger");

$stmt = OCIParse($conn,"insert into emp (empno, ename) ".
                       "values (:empno,:ename) ".
                       "returning ROWID into :rid");

$data = array(1111 => "Larry", 2222 => "Bill", 3333 => "Jim");

$rowid = OCINewDescriptor($conn,OCI_D_ROWID);

OCIBindByName($stmt,":empno",&amp;$empno,32);
OCIBindByName($stmt,":ename",&amp;$ename,32);
OCIBindByName($stmt,":rid",&amp;$rowid,-1,OCI_B_ROWID);

$update = OCIParse($conn,"update emp set sal = :sal where ROWID = :rid");
OCIBindByName($update,":rid",&amp;$rowid,-1,OCI_B_ROWID);
OCIBindByName($update,":sal",&amp;$sal,32);

$sal = 10000;

while (list($empno,$ename) = each($data)) {
    OCIExecute($stmt);
    OCIExecute($update);
} 

$rowid->free();

OCIFreeStatement($update);
OCIFreeStatement($stmt);

$stmt = OCIParse($conn,"select * from emp where empno in (1111,2222,3333)");
OCIExecute($stmt);
while (OCIFetchInto($stmt,&amp;$arr,OCI_ASSOC)) {
    var_dump($arr);
}
OCIFreeStatement($stmt);

/* delete our "junk" from the emp table.... */
$stmt = OCIParse($conn,"delete from emp where empno in (1111,2222,3333)");
OCIExecute($stmt);
OCIFreeStatement($stmt);

OCILogoff($conn);
?>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
