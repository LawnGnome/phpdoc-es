<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/oci8.xml, last change in rev 1.1 -->
<!-- last change to 'ocidefinebyname' in en/ tree in rev 1.2 -->
  <refentry id="function.ocidefinebyname">
   <refnamediv>
    <refname>OCIDefineByName</refname>
    <refpurpose>
     Usa una variable de PHP para el define-step durante una sentencia SELECT
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
     <methodsynopsis>
      <type>int</type><methodname>OCIDefineByName</methodname>
      <methodparam><type>int</type><parameter>stmt</parameter></methodparam>
      <methodparam><type>string</type><parameter>Column-Name</parameter></methodparam>
      <methodparam><type>mixed &amp;</type><parameter>variable</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>OCIDefineByName</function> busca el valor de las Columnas-SQL
     dentro de variables PHP definidas por el usuario. Cuidado que Oracle nombra todas
     las columnas en MAYUSCULAS, mientras que en su select puede usar también minúsculas
     write lower-case. <function>OCIDefineByName</function> espera que
     <parameter>Column-Name</parameter> esté en mayúsculas. Si define una variable
     que no existe en la sentecia SELECT, no se producirá ningún error.
    </para>
    <para>
     Si necesita definir un tipo de dato abstracto (LOB/ROWID/BFILE) tendrá que alojarlo
     primero usando la función <function>OCINewDescriptor</function> function. Vea también 
     la función <function>OCIBindByName</function>.
    </para>
     <example>
      <title>OCIDefineByName</title>
      <programlisting>
&lt;?php
/* OCIDefineByPos example thies@digicol.de (980219) */

$conn = OCILogon("scott","tiger");

$stmt = OCIParse($conn,"select empno, ename from emp");

/* la definición DEBE hacerse ANTES del ociexecute! */

OCIDefineByName($stmt,"EMPNO",&amp;$empno);
OCIDefineByName($stmt,"ENAME",&amp;$ename);

OCIExecute($stmt);

while (OCIFetch($stmt)) {
    echo "empno:".$empno."\n";
    echo "ename:".$ename."\n";
}

OCIFreeStatement($stmt);
OCILogoff($conn);
?>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
