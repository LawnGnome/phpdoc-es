<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.2 Maintainer: gustavo Status: ready -->
<!-- Purpose: basic.php -->
<!-- Membership: pecl -->

 <reference id="ref.bcompiler">
  <title>Compilador Bytecode de PHP</title>
  <titleabbrev>bcompiler</titleabbrev>

  <partintro>
   <section id="bcompiler.intro">
   &reftitle.intro;
   &warn.experimental;
    <para>
     Bcompiler fue escrito por varias razones:
     <simplelist>
      <member>
      Para codificar un script entero en una aplicaci&oacute;n propietaria
      escrita en PHP.
      </member>
      <member>
      Para codificar algunas clases y/o funciones en una aplicaci&oacute;n propietaria
      escrita en PHP.
      </member>
      <member>
       Para permitir la producci&oacute;n de aplicaciones PHP-GTK que
       puedan ser usadas del lado del cliente, sin necesidad de un php.exe.
       </member>
      <member>Para hacer viable el estudio de un convertidor PHP al
      lenguaje de programaci&oacute;n C.</member>
     </simplelist>
     La primera de estas metas se pueden alcanzar usando las funciones
     <function>bcompiler_write_header</function>,
     <function>bcompiler_write_file</function> y
     <function>bcompiler_write_footer</function>.
     Las funciones de bytecode pueden estar escritas tanto descomprimidas,
     como en texto plano. Para usar el bytecode generado, simplemente
     puede incluirlo con sentencias include o require.
    </para>
    <para>
     La segunda de estas metas se pueden alcanzar usando las funciones
     <function>bcompiler_write_header</function>,
     <function>bcompiler_write_class</function>,
     <function>bcompiler_write_footer</function>,
     <function>bcompiler_read</function>,
     y <function>bcompiler_load</function>. Los archivos
     bytecode pueden estar escritos tanto descomprimidos, como en texto plano.
     La funci&oacute;n <function>bcompiler_load</function> lee un archivo
     bytecode comprimido con bzip, el cual suele ser 1/3 del tama&ntilde;o
     original del archivo.
    </para>
    <para>
     Para crear archivos del tipo exe, bcompiler tiene que ser usado con
     un archivo sapi modificado o una versi&oacute;n de PHP que haya sido
     compilada como una librer&iacute;a compartida. En este escenario,
     bcompiler lee el bytecode comprimido desde el final del archivo exe.
    </para>
    <para>
     bcompiler puede mejorar su desempe&ntilde;o cerca del 30% cuando s&oacute;lo
     se usa con bytecodes descomprimidos. Pero tenga presente que un bytecode
     descomprimido puede ser hasta 5 veces m&aacute;s grande que el c&oacute;digo
     fuente original. Usando la compresi&oacute;n bytecode puede ahorrarle
     espacio, pero la descompresi&oacute;n requiere mucho m&aacute;s tiempo
     que analizar un c&oacute;digo. Adem&aacute;s, bcompiler no lleva a cabo
     alguna optimizaci&oacute;n bytecode; esto pudiera ser agregado en el
     futuro...
    </para>
    <para>
     En cuanto a la protecci&oacute;n del c&oacute;digo, es seguro decir que
     ser&iacute;a imposible recrear el c&oacute;digo fuente exacto desde el
     cual se construy&oacute;, y sin la compa&ntilde;&iacute;a de comentarios
     en el c&oacute;digo fuente. Efectivamente ser&iacute;a in&uacute;til
     usar los bytecodes de bcompiler para recrear y modificar una clase.
     Sin embargo, es posible recuperar informaci&oacute;n desde un archivo
     bytecode de bcompiler - as&iacute; que no coloque sus contrase&ntilde;as
     o cualquier otra cosa privada en &eacute;l.
    </para>
   </section>

   &reference.bcompiler.configure;

   <section id="bcompiler.contact">
   <title>Informaci&oacute;n de contacto</title>
    <para>
     Si tiene comentarios, soluciones a fallos, mejoras o quiere ayudar
     a desarrollar esta bestia, puede enviarme un correo-e a <ulink
     url="mailto:alan_k@php.net">alan_k@php.net</ulink>. Cualquier ayuda
     es bienvenida.
    </para>
   </section>

  </partintro>

&reference.bcompiler.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
