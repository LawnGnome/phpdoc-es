<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.17 $ -->
<!-- EN-Revision: 1.34 Maintainer: lboshell Status: ready -->
<section xml:id="errorfunc.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Opciones de Configuración de Errores y Registro</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>Nombre</entry>
      <entry>Por defecto</entry>
      <entry>Modificable</entry>
      <entry>Cambios</entry>
     </row>
    </thead>
    <tbody>
    <row>
     <entry>error_reporting</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>display_errors</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>display_startup_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.0.3.</entry>
    </row>
    <row>
     <entry>log_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>log_errors_max_len</entry>
     <entry>"1024"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.3.0.</entry>
    </row>
    <row>
     <entry>ignore_repeated_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.3.0.</entry>
    </row>
    <row>
     <entry>ignore_repeated_source</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.3.0.</entry>
    </row>
    <row>
     <entry>report_memleaks</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.3.0.</entry>
    </row>
    <row>
     <entry>track_errors</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>html_errors</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP_INI_SYSTEM en PHP &lt;= 4.2.3. Disponible desde PHP
     4.0.2.</entry>
    </row>
    <row>
     <entry>docref_root</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.3.0.</entry>
    </row>
    <row>
     <entry>docref_ext</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.3.2.</entry>
    </row>
    <row>
     <entry>error_prepend_string</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>error_append_string</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>error_log</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>warn_plus_overloading</entry>
     <entry>NULL</entry>
     <entry></entry>
     <entry>Esta opción ya no se encuentra disponible a partir de PHP 4.0.0</entry>
    </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.error-reporting">
    <term>
     <parameter>error_reporting</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Establece el nivel de reporte de errores. Este parámetro es, o bien un
      entero que representa un campo de bit, o constantes con nombre. Los
      niveles de error_reporting y las constantes están descritas en <link
      linkend="errorfunc.constants">Constantes Predefinidas</link>, y en
      &php.ini;. Para definir este valor en tiempo de ejecución, use la
      función <function>error_reporting</function>. Vea también la directiva
      <link linkend="ini.display-errors">display_errors</link>.
     </para>
     <para>
      En PHP 4 y PHP 5, el valor predeterminado es E_ALL &amp; ~E_NOTICE.
      Este valor no muestra errores de nivel <constant>E_NOTICE</constant>.
      Puede que usted quiera mostrarlos durante su actividad de desarrollo.
     </para>
     <note>
      <para>
       Al habilitar <constant>E_NOTICE</constant> durante el desarrollo de
       software tiene algunos beneficios. Para propósitos de depuración: los
       mensajes NOTICE le advertirán sobre posibles fallos en su código. Por
       ejemplo, se le advertirá sobre el uso de valores no-asignados. Es
       extremadamente útil para encontrar errores ortográficos y ahorrar
       tiempo de depuración. Los mensajes NOTICE le advertirán sobre el uso
       de un estilo incorrecto. Por ejemplo, $matriz[item] está mejor
       escrito como $matriz['item'] ya que PHP intenta darle a "item" un
       tratamiento de constante. Si no es una constante, PHP asume que es un
       índice de tipo cadena para la matriz.
      </para>
     </note>

     <note>
      <para>
       En PHP 5, un nuevo nivel de error, <constant>E_STRICT</constant>, se
       encuentra disponible. Dado que <constant>E_STRICT</constant> no se
       incluye en <constant>E_ALL</constant>, usted debe habilitar
       explícitamente este tipo de nivel de error. Habilitar
       <constant>E_STRICT</constant> durante el desarrollo tiene algunos
       beneficios. Los mensajes STRICT le ayudarán a usar los últimos y más
       grandiosos métodos sugeridos para escribir código, por ejemplo, le
       advertirá sobre el uso de funciones obsoletas.
      </para>
     </note>
     <note>
      <title>Constantes PHP por fuera de PHP</title>
      <para>
       El uso de Constantes PHP por fuera de PHP, como en
       <filename>httpd.conf</filename>, no tendrán sentido, de modo que en
       tales ocasiones las valores <type>integer</type> son requeridos. Y
       dado que con el tiempo se agregarán niveles de error, el valor máximo
       (para <constant>E_ALL</constant>) probablemente cambie. Así que en
       lugar de <constant>E_ALL</constant> considere usar un valor grande
       para cubrir todos los campos de bits de ahora y hacia el futuro, un
       valor numérico como <literal>2147483647</literal>.
      </para>
     </note>
     <para>
      En PHP 3, el valor predeterminado es <literal>(E_ERROR | E_WARNING |
      E_PARSE)</literal>, lo que en la práctica representa lo mismo. Note,
      sin embargo, que dado que las constantes en el archivo
      <filename>php3.ini</filename> de PHP 3 no son soportadas, el valor de
      error_reporting allí debe ser numérico; por lo tanto, es
      <literal>7</literal>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.display-errors">
    <term>
     <parameter>display_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Este parámetro determina si los errores deben ser puestos en pantalla
      como parte de la salida o si deben ser ocultados al usuario.
     </para>
     <note>
      <para>
       Es una característica de apoyo para su proceso de desarrollo y no
       debería ser usada nunca en sistemas en producción (p.ej. sistemas
       conectados a internet).
      </para>
     </note>
     <note>
      <para>
       Aunque display_errors puede ser definido en tiempo de ejecución (con
       <function>ini_set</function>), no tendrá ningún efecto si el script
       contiene errores fatales. Esto se debe a que la acción de tiempo de
       ejecución deseada no se alcanza a ejecutar.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.display-startup-errors">
    <term>
     <parameter>display_startup_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Aun cuando display_errors esté encendido, los errores que ocurren
      durante la secuencia de arranque de PHP no son desplegados. Es muy
      recomendable mantener display_startup_errors apagado, excepto en
      tiempos de depuración.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.log-errors">
    <term>
     <parameter>log_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Indica si los mensajes de error de un script deben ser registrados en
      la bitácora de errores del servidor o <link
      linkend="ini.error-log">error_log</link>. Esta opción es por lo tanto
      espocífica al servidor.
     </para>
     <note>
      <para>
       Es altamente recomendable que use registro de errores en lugar de
       despliegue de errores en sitios web en producción.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.log-errors-max-len">
    <term>
     <parameter>log_errors_max_len</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <para>
      Establece la longitud máxima de log_errors en bytes. En <link
      linkend="ini.error-log">error_log</link> se añade información sobre la
      fuente. El valor por defecto es 1024, y un valor de 0 permite que no
      se aplique ninguna longitud máxima en absoluto. Esta longitud se
      aplica también a los errores almacenados en el registro, a los errores
      que se despliegan y a <link
      linkend="reserved.variables.phperrormsg">$php_errormsg</link>.
     </para>

     &ini.shorthandbytes;

    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.ignore-repeated-errors">
    <term>
     <parameter>ignore_repeated_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      No registrar mensajes repetidos. Los errores repetidos deben ocurrir
      en el mismo archivo, en la misma línea hasta que el parámetro <link
      linkend="ini.ignore-repeated-source">ignore_repeated_source</link> sea
      establecido como true.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.ignore-repeated-source">
    <term>
     <parameter>ignore_repeated_source</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Ignorar la fuente de mensaje cuando se ignoran los mensajes repetidos.
      Cuando este parámetro está encendido, no se registrará errores con
      mensajes repetidos desde diferentes fuentes de archivos.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.report-memleaks">
    <term>
     <parameter>report_memleaks</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Si este parámetro está apagado, entonces las fugas de memoria no serán
      mostradas (en stdout o en el registro). Este valor sólo tiene efecto
      en una compilación de depuración, y si <link
      linkend="ini.error-reporting">error_reporting</link> incluye E_WARNING
      en la lista permitida.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.track-errors">
    <term>
     <parameter>track_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Cuando está habilitado, el último mensaje de error estará siempre
      presente en la variable <link
      linkend="reserved.variables.phperrormsg">$php_errormsg</link>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.html-errors">
    <term>
     <parameter>html_errors</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Permite deshabilitar las etiquetas HTML en los mensajes de error. El
      nuevo formato para los errores en HTML produce mensajes con enlaces
      que dirigen al usuario a una página que describe el error o función
      que ha causado el error. Estas referencias son afectadas por <link
      linkend="ini.docref-root">docref_root</link> y <link
      linkend="ini.docref-ext">docref_ext</link>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.docref-root">
    <term>
     <parameter>docref_root</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      El nuevo formato de error contiene una referencia hacia una página que
      describe el error o la función que ha causado el error. En el caso de
      páginas de un manual, usted puede descargar el manual en su idioma y
      establecer esta directiva ini como la URL de su copia local. Si su
      copia local del manual puede encontrarse bajo '/manual/' entonces
      puede usar simplemente <userinput>docref_root=/manual/</userinput>.
      Adicionalmente debe establecer un valor de docref_ext que coincida con
      las extensiones de archivo de su copia;
      <userinput>docref_ext=.html</userinput>. Es posible usar referencias
      externas. Por ejemplo, puede usar
      <userinput>docref_root=http://manual/en/</userinput> o
      <userinput>docref_root="http://landonize.it/?how=url&amp;theme=classic&amp;filter=Landon
      &amp;url=http%3A%2F%2Fwww.php.net%2F"</userinput>.
     </para>
     <para>
      Por lo general usted querrá que el valor de docref_root finalice con
      una barra '/'. Pero observe el segundo ejemplo mencionado
      anteriormente, el cual no tiene una barra final, ni la necesita.
     </para>
     <note>
      <para>
       Esta es una característica de apoyo para su desarrollo ya que permite
       consultar la descripción de una función fácilmente. Sin embargo,
       nunca debe ser utilizada en sistemas en producción (p.ej. sistema
       conectados a internet).
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.docref-ext">
    <term>
     <parameter>docref_ext</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Vea <link linkend="ini.docref-root">docref_root</link>.
     </para>
     <note>
      <para>
      El valor de docref_ext debe comenzar con un punto '.'.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.error-prepend-string">
    <term>
     <parameter>error_prepend_string</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Cadena a mostrar antes de un mensaje de error.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.error-append-string">
    <term>
     <parameter>error_append_string</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Cadena a mostrar después de un mensaje de error.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.error-log">
    <term>
     <parameter>error_log</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Nombre del archivo en donde deberían registrarse los errores del
      script. El archivo debe tener permisos de escritura para el usuario
      del servidor web. Si se utiliza el valor especial
      <literal>syslog</literal>, los errores son enviados al gestor de
      registros del sistema. En Unix, esto quiere decir syslog(3) y en
      Windows NT quiere decir el "event log". El gestor de registro de
      actividades no está soportado bajo Windows 95. Vea también:
      <function>syslog</function>. Si esta directiva no está definida, los
      errores son enviados al registro de errores SAPI. Por ejemplo, puede
      ser un registro de errores en Apache o <literal>stderr</literal> en
      CLI.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.warn-plus-overloading">
    <term>
     <parameter>warn_plus_overloading</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <para>
      Si se habilita, esta opción hace que PHP genere una advertencia cuando
      se utilice un operador más (<literal>+</literal>) con cadenas. Esto
      facilita la labor de encontrar scripts que necesitan ser reescritos
      para hacer uso del concatenador de cadenas en su lugar
      (<literal>.</literal>). Esta opción no existe a partir de PHP 4.
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
