<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.19 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.error-reporting" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>error_reporting</refname>
  <refpurpose>Define cuáles errores de PHP son reportados</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>error_reporting</methodname>
   <methodparam choice="opt"><type>int</type><parameter>nivel</parameter></methodparam>
  </methodsynopsis>
  <para>
   La función <function>error_reporting</function> establece la directiva
   <link linkend="ini.error-reporting">error_reporting</link> en tiempo de
   ejecución. PHP tiene varios niveles de errores, el uso de esta función
   define ese nivel para la duración (tiempo de ejecución) de su script.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>nivel</parameter></term>
     <listitem>
      <para>
       El nuevo nivel de <link
       linkend="ini.error-reporting">error_reporting</link>. Recibe una
       máscara de bits, o constantes con nombre. El uso de constantes con
       nombre es bastante recomendable para asegurar la compatibilidad con
       versiones futuras. A medida que se agregan niveles de error, el rango
       de los enteros se incrementa, así que los niveles de error antiguos
       basados en enteros no siempre se comportarán como es de esperarse.
      </para>
      <para>
       Las constantes de nivel de error disponibles se listan a
       continuación. Los significados reales de estos niveles de error son
       descritos en las <link linkend="errorfunc.constants">constantes
       predefinidas</link>.
       <table>
        <title>Constantes de nivel de <function>error_reporting</function> y
        valores de bit</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>valor</entry>
           <entry>constante</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>1</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-error">E_ERROR</link>
           </entry>
          </row>
          <row>
           <entry>2</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-warning">E_WARNING</link>
           </entry>
          </row>
          <row>
           <entry>4</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-parse">E_PARSE</link>
           </entry>
          </row>
          <row>
           <entry>8</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-notice">E_NOTICE</link>
           </entry>
          </row>
          <row>
           <entry>16</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-core-error">E_CORE_ERROR</link>
           </entry>
          </row>
          <row>
           <entry>32</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-core-warning">E_CORE_WARNING</link>
           </entry>
          </row>
          <row>
           <entry>64</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-compile-error">E_COMPILE_ERROR</link>
           </entry>
          </row>
          <row>
           <entry>128</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-compile-warning">E_COMPILE_WARNING</link>
           </entry>
          </row>
          <row>
           <entry>256</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-user-error">E_USER_ERROR</link>
           </entry>
          </row>
          <row>
           <entry>512</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-user-warning">E_USER_WARNING</link>
           </entry>
          </row>
          <row>
           <entry>1024</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-user-error">E_USER_NOTICE</link>
           </entry>
          </row>
          <row>
           <entry>6143</entry>
           <entry>
           <link linkend="errorfunc.constants.errorlevels.e-all">E_ALL</link>
           </entry>
         </row>
          <row>
           <entry>2048</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-strict">E_STRICT</link>
           </entry>
          </row>
          <row>
           <entry>4096</entry>
           <entry>
            <link
            linkend="errorfunc.constants.errorlevels.e-recoverable-error">E_RECOVERABLE_ERROR</link>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el nivel <link
   linkend="ini.error-reporting">error_reporting</link> antiguo.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0</entry>
       <entry>Se introdujo <constant>E_STRICT</constant> (no es parte de
       <constant>E_ALL</constant>).</entry>
      </row>
      <row>
       <entry>5.2.0</entry>
       <entry>Se introdujo <constant>E_RECOVERABLE_ERROR</constant>.</entry>
      </row>
      <row>
       <entry>6</entry>
       <entry><constant>E_STRICT</constant> se hizo parte de
       <constant>E_ALL</constant>.</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplos de <function>error_reporting</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Deshabilitar todo reporte de errores
error_reporting(0);

// Errores de ejecución simples
error_reporting(E_ERROR | E_WARNING | E_PARSE);

// Reportar E_NOTICE puede ser bueno también (para reportar variables
// no inicializadas o capturar equivocaciones en nombres de variables ...)
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);

// Reportar todos los errores excepto E_NOTICE
// Este es el valor predeterminado en php.ini
error_reporting(E_ALL ^ E_NOTICE);

// Reportar todos los errores de PHP (el valor de bits 63 puede ser usado en PHP 3)
error_reporting(E_ALL);

// Lo mismo que error_reporting(E_ALL);
ini_set('error_reporting', E_ALL);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <simpara>
    La mayoría de errores <constant>E_STRICT</constant> son evaluados en
    tiempo de compilación, por lo que tales errores no son reportados en el
    archivo en donde <link
    linkend="ini.error-reporting">error_reporting</link> sea modificado para
    incluir errores <constant>E_STRICT</constant> (y vice-versa).
   </simpara>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>La directiva <link
    linkend="ini.display-errors">display_errors</link></member>
    <member><function>ini_set</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
