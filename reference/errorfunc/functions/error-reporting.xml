<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/errorfunc.xml, last change in rev 1.1 -->
<!-- last change to 'error-reporting' in en/ tree in rev 1.1 -->
  <refentry id="function.error-reporting">
   <refnamediv>
    <refname>error_reporting</refname>
    <refpurpose>Establece que errores de PHP son informados</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>int</type><methodname>error_reporting</methodname>
     <methodparam choice="opt"><type>int</type><parameter>level</parameter></methodparam>
     </methodsynopsis>
    <para>
     La funci&oacute;n <function>error_reporting</function> permite establecer la directiva 
     <link linkend="ini.error-reporting">error_reporting</link> en tiempo de ejecuci&oacute;n. PHP tiene numerosos niveles de errores, que se pueden seleccionar de manera temporal (mientras dure la ejecuci&oacute;n del script) mediante esta funci&oacute;n.
    </para>
	<para>
     <function>error_reporting</function> establece el nivel de errores que notifica PHP y devuelve el nivel anterior. El par&aacute;metro <parameter>level</parameter> se puede establecer mediante una m&aacute;scara de bits o mediante algunas constantes espec&iacute;ficas. Se recomienda utilizar las constantes para asegurar la compatibilidad con versiones futuras. La causa de esta posible incompatibilidad es que a medida que se crean nuevos niveles de errores, aumenta el rango de n&uacute;meros utilizado para indicarlo, por lo que podr&iacute;an dejar de funcionar los anteriores niveles de errores indicados num&eacute;ricamente.
	 </para>
	  <para>
     <example role="php">
      <title>Ejemplos de <function>error_reporting</function></title>
      <programlisting role="php">
<![CDATA[
<?php

// Deshabilita la notificaci&oacute;n de errores
error_reporting(0);

// Notifica errores simples de ejecuci&oacute;n
error_reporting(E_ERROR | E_WARNING | E_PARSE);

// Utilizar E_NOTICE puede ser &uacute;til tambi&eacute;n (para notificar sobre 
// variables no inicializadas y otros errores de escritura ...)
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);

// Notifica todos los errores salvo E_NOTICE
// Este nivel es el valor por defecto establecido en el archivo php.ini
error_reporting(E_ALL ^ E_NOTICE);

// Notifica todos los errores de PHP (en PHP 3 se puede utilizar la m&aacute;scara 63)
error_reporting(E_ALL);

// Lo siguiente es equivalente a error_reporting(E_ALL);
ini_set('error_reporting', E_ALL);

?>
]]>
      </programlisting>
     </example>
    </para>
   <para>
     Los niveles de error disponibles se muestran a continuaci&oacute;n. La explicaci&oacute;n de
	 cada uno de los niveles de error se encuentra en la secci&oacute;n <link linkend="errorfunc.constants"></link>.
     <table>
      <title>Constantes y m&aacute;scaras de bits de los niveles de <function>error_reporting</function></title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>valor</entry>
         <entry>constante</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>1</entry>
         <entry>
          <link linkend="e-error">E_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>2</entry>
         <entry>
          <link linkend="e-warning">E_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>4</entry>
         <entry>
          <link linkend="e-parse">E_PARSE</link>
         </entry>
        </row>
        <row>
         <entry>8</entry>
         <entry>
          <link linkend="e-notice">E_NOTICE</link>
         </entry>
        </row>
        <row>
         <entry>16</entry>
         <entry>
          <link linkend="e-core-error">E_CORE_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>32</entry>
         <entry>
          <link linkend="e-core-warning">E_CORE_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>64</entry>
         <entry>
          <link linkend="e-compile-error">E_COMPILE_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>128</entry>
         <entry>
          <link linkend="e-compile-warning">E_COMPILE_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>256</entry>
         <entry>
          <link linkend="e-user-error">E_USER_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>512</entry>
         <entry>
          <link linkend="e-user-warning">E_USER_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>1024</entry>
         <entry>
          <link linkend="e-user-error">E_USER_NOTICE</link>
         </entry>
        </row>
        <row>
         <entry>2047</entry>
          <entry>
         <link linkend="e-all">E_ALL</link>
         </entry>
       </row>
        <row>
         <entry>2048</entry>
         <entry>
          <link linkend="e-strict">E_STRICT</link>
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <warning>
     <simpara>
      Las versiones de PHP &gt; 5.0.0 tambi&eacute;n incluyen el nivel <constant>E_STRICT</constant> (valor 2048). <constant>E_ALL</constant> <emphasis>NO</emphasis> incluye el nivel <constant>E_STRICT</constant>.
     </simpara>
    </warning>
    <para>
     Puede consultar tambi&eacute;n la directiva <link linkend="ini.display-errors">display_errors</link> y la funci&oacute;n <function>ini_set</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
