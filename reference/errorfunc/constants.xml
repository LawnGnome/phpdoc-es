<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.15 Maintainer: lboshell Status: ready -->
<section id="errorfunc.constants">
 &reftitle.constants;
 &extension.constants.core;
  <note>
   <simpara>
    Es posible usar estos nombres de constantes en &php.ini; pero no por
    fuera de PHP, como en &httpd.conf;, en donde debería usar los valores de
    máscara de bits en su lugar.
   </simpara>
  </note>
 <table id="errorlevels">
  <title>Errores y Registro</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>Valor</entry>
     <entry>Constante</entry>
     <entry>Descripción</entry>
     <entry>Nota</entry>
    </row>
   </thead>
   <tbody>
    <row id="e-error">
     <entry>1</entry>
     <entry>
      <constant>E_ERROR</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Errores fatales en tiempo de ejecución. Estos indican errores de los
      que no es posible recuperarse, tales como problemas de asignación de
      memoria. Se detiene la ejecución del script.
     </entry>
     <entry></entry>
    </row>

    <row id="e-warning">
     <entry>2</entry>
     <entry>
      <constant>E_WARNING</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Advertencias en tiempo de ejecución (errores no-fatales). La ejecución
      del script no se interrumpe.
     </entry>
     <entry></entry>
    </row>

    <row id="e-parse">
     <entry>4</entry>
     <entry>
      <constant>E_PARSE</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Errores de intérprete en tiempo de compilación. Esto tipo de errores
      deberían ser generados únicamente por el interprete.
     </entry>
     <entry></entry>
    </row>

    <row id="e-notice">
     <entry>8</entry>
     <entry>
      <constant>E_NOTICE</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Anotaciones en tiempo de ejecución. Indican que el script se ha topado
      con algo que puede indicar la presencia de un error, pero que también
      podría ocurrir en el curso normal de la ejecución de un script.
     </entry>
     <entry></entry>
    </row>

    <row id="e-core-error">
     <entry>16</entry>
     <entry>
      <constant>E_CORE_ERROR</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Errores fatales que ocurren durante el arranque inicial de PHP. Es
      como un <constant>E_ERROR</constant>, excepto que es generado por el
      núcleo de PHP.
     </entry>
     <entry>a partir de PHP 4</entry>
    </row>

    <row id="e-core-warning">
     <entry>32</entry>
     <entry>
      <constant>E_CORE_WARNING</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Advertencias (errores no-fatales) que ocurren durante el arranque
      inicial de PHP. Es como un <constant>E_WARNING</constant>, excepto que
      es generado por el núcleo de PHP.
     </entry>
     <entry>a partir de PHP 4</entry>
    </row>

    <row id="e-compile-error">
     <entry>64</entry>
     <entry>
      <constant>E_COMPILE_ERROR</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Errores fatales en tiempo de compilación. Es como un
      <constant>E_ERROR</constant>, excepto que es generado por el Motor de
      Scripting de Zend.
     </entry>
     <entry>a partir de PHP 4</entry>
    </row>

    <row id="e-compile-warning">
     <entry>128</entry>
     <entry>
      <constant>E_COMPILE_WARNING</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Advertencias en tiempo de compilación (errores no fatales). Es como un
      <constant>E_WARNING</constant>, excepto que es generado por el Motor
      de Scripting de Zend.
     </entry>
     <entry>a partir de PHP 4</entry>
    </row>

    <row id="e-user-error">
     <entry>256</entry>
     <entry>
      <constant>E_USER_ERROR</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Mensaje de error generado por el usuario. Es como un
      <constant>E_ERROR</constant>, excepto que es generado desde código PHP
      usando la función <function>trigger_error</function>.
     </entry>
     <entry>a partir de PHP 4</entry>
    </row>

    <row id="e-user-warning">
     <entry>512</entry>
     <entry>
      <constant>E_USER_WARNING</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Mensaje de advertencia generado por el usuario. Es como un
      <constant>E_WARNING</constant>, excepto que es generado desde código
      PHP usando la función <function>trigger_error</function>.
     </entry>
     <entry>a partir de PHP 4</entry>
    </row>

    <row id="e-user-notice">
     <entry>1024</entry>
     <entry>
      <constant>E_USER_NOTICE</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Anotación generada por el usuario. Es como un
      <constant>E_NOTICE</constant>, excepto que es generado desde código
      PHP usando la función <function>trigger_error</function>.
     </entry>
     <entry>a partir de PHP 4</entry>
    </row>

    <row id="e-strict">
     <entry>2048</entry>
     <entry>
      <constant>E_STRICT</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Noticias de tiempo de ejecución. Habilite este valor para hacer que
      PHP sugiera cambios en su código que velarán por la mejor
      interoperabilidad y por mantener la compatibilidad de su código.
     </entry>
     <entry>a partir de PHP 5</entry>
    </row>

    <row id="e-recoverable-error">
     <entry>4096</entry>
     <entry>
      <constant>E_RECOVERABLE_ERROR</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Error fatal atrapable. Indica que ocurrió un error probablemente
      peligroso, pero no ha dejado el Motor en un estado inutilizable. Si el
      error no es atrapado por un gestor definido por el usuario (vea
      también <function>set_error_handler</function>), la aplicación aborta
      como si fuera un <constant>E_ERROR</constant>.
     </entry>
     <entry>a partir de PHP 5.2.0</entry>
    </row>

    <row id="e-all">
     <entry>8191</entry>
     <entry>
      <constant>E_ALL</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Todos los errores y advertencias, en la medida en que sean soportados,
      excepto por el nivel <constant>E_STRICT</constant> en PHP &lt; 6.
     </entry>
     <entry>6143 en PHP 5.2.x y previamente 2047</entry>
    </row>

   </tbody>
  </tgroup>
 </table>

 <para>
  Los valores referidos anteriormente (ya sean numéricos o simbólicos) son
  usados para construir una máscara de bits que indica cuáles errores
  reportar. Puede usar los <link
  linkend="language.operators.bitwise">operadores bit a bit</link> para
  combinar estos valores o excluir explícitamente ciertos tipos de errores.
  Sin embargo, note que únicamente '|', '~', '!', '^' y '&amp;' serán
  entendidos desde &php.ini;, y que ningún operador bit a bit será
  interpretado correctamente desde <filename>php3.ini</filename>.
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
