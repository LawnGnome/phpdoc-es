<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/uodbc.xml, last change in rev 1.1 -->
<!-- last change to 'odbc-binmode' in en/ tree in rev 1.2 -->
  <refentry id="function.odbc-binmode">
   <refnamediv>
    <refname>odbc_binmode</refname>
   <refpurpose>Manejo de campos de datos binarios</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Descripcion</title>
     <methodsynopsis>
    <type>int</type><methodname>odbc_binmode</methodname>
    <methodparam><type>int</type><parameter>result_id</parameter></methodparam>
     <methodparam><type>int</type><parameter>mode</parameter></methodparam>
     </methodsynopsis>
    <para>(Elementos afectados ODBC SQL: BINARY, VARBINARY, LONGVARBINARY)
    </para>
    <itemizedlist>
      <listitem><simpara>
      ODBC_BINMODE_PASSTHRU: Paso a traves de datos binarios
      </simpara></listitem> 
      <listitem><simpara>
      ODBC_BINMODE_RETURN: Devuelve como es
      </simpara></listitem>
      <listitem><simpara>
      ODBC_BINMODE_CONVERT: Devuelve convertido en caracter
      </simpara></listitem>
    </itemizedlist>
    <para>
    Cuando los datos binarios en SQL son convertidos a datos caracter
    en C, cada byte (8 bits) de datos fuente es representada como
    dos caracteres en ASCII.
    Esos caracteres son la representacion en ASCII de los numeros en su
    forma Hexadecimal. Por ejemplo, un 00000001 binario es
    convertido a <literal>"01"</literal> y un 11111111 binario es
    convertido a <literal>"FF"</literal>.

     <table>
      <title>Manejo de LONGVARBINARY</title>
      <tgroup cols="3">
       <thead>
	<row>
         <entry>modo binario</entry>
	 <entry>longreadlen</entry>
         <entry>resultado</entry>
	</row>
       </thead>
       <tbody>
	<row>
	 <entry>ODBC_BINMODE_PASSTHRU</entry>
	 <entry>0</entry>
         <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_RETURN</entry>
	 <entry>0</entry>
         <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_CONVERT</entry>
	 <entry>0</entry>
         <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_PASSTHRU</entry>
	 <entry>0</entry>
         <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_PASSTHRU</entry>
	 <entry>>0</entry>
         <entry>passthru</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_RETURN</entry>
	 <entry>>0</entry>
         <entry>Devuleve como es</entry>
	</row>
	<row>
	 <entry>ODBC_BINMODE_CONVERT</entry>
	 <entry>>0</entry>
         <entry>Devuelve como caracter</entry>
	</row>
       </tbody>
      </tgroup>
     </table></para>

    <para>
     Si usamos <function>odbc_fetch_into</function>, passthru significara
     que una cadena vacia es devuelta por esas campos.</para>

    <para>
     Si <parameter>result_id</parameter> es <literal>0</literal>, las
     definiciones se aplican por defecto para nuevos resultados.

     <note><simpara> Por defecto, longreadlen es
       <literal>4096</literal> y el modo binario por defecto es
       <literal>ODBC_BINMODE_RETURN</literal>.  El manejo de campos binarias
       largas tambien esta afectado por 
       <function>odbc_longreadlen</function>
    </simpara>
    </note></para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
