<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 290720 $ -->
<!-- EN-Revision: 290720 Maintainer: seros Status: partial -->
<section xml:id="session.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
 <table>
  <title>Opciones de configuración de sesiones</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>Nombre</entry>
     <entry>Por Defecto</entry>
     <entry>Variable</entry>
     <entry>Registro de cambios</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry><link linkend="ini.session.save-path">session.save_path</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.name">session.name</link></entry>
     <entry>"PHPSESSID"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.save-handler">session.save_handler</link></entry>
     <entry>"files"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.auto-start">session.auto_start</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.gc-probability">session.gc_probability</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.gc-divisor">session.gc_divisor</link></entry>
     <entry>"100"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.3.2.</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.gc-maxlifetime">session.gc_maxlifetime</link></entry>
     <entry>"1440"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.serialize-handler">session.serialize_handler</link></entry>
     <entry>"php"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-lifetime">session.cookie_lifetime</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-path">session.cookie_path</link></entry>
     <entry>"/"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-domain">session.cookie_domain</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-secure">session.cookie_secure</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.0.4.</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cookie-httponly">session.cookie_httponly</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 5.2.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.use-cookies">session.use_cookies</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.use-only-cookies">session.use_only_cookies</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.3.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.referer-check">session.referer_check</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.entropy-file">session.entropy_file</link></entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.entropy-length">session.entropy_length</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cache-limiter">session.cache_limiter</link></entry>
     <entry>"nocache"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.cache-expire">session.cache_expire</link></entry>
     <entry>"180"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.session.use-trans-sid">session.use_trans_sid</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>PHP_INI_ALL en PHP &lt;= 4.2.3. PHP_INI_PERDIR en PHP &lt; 5. Disponible desde PHP 4.0.3.</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.bug-compat-42">session.bug_compat_42</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.3.0. Eliminado en PHP 6.0.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.bug-compat-warn">session.bug_compat_warn</link></entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.3.0. Eliminado en PHP 6.0.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.hash-function">session.hash_function</link></entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 5.0.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.session.hash-bits-per-character">session.hash_bits_per_character</link></entry>
     <entry>"4"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 5.0.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.url-rewriter.tags">url_rewriter.tags</link></entry>
     <entry>"a=href,area=href,frame=src,form=,fieldset="</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Disponible desde PHP 4.0.4.</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 &ini.php.constants;
 </para>
 <para>
  El sistema de administración de sesiones soporta varias opciones de configuración
  que se pueden colocar en el archivo &php.ini;. Daremos una visión general
  breve.
 <variablelist>

  <varlistentry xml:id="ini.session.save-handler">
   <term>
    <parameter>session.save_handler</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.save_handler</literal> define el nombre del
     gestor que se usa para almacenar y recuperar información
     asociada con una sesión. Por defecto es
     <literal>files</literal>. Observe que las extensiones individuales pueden registrar
     sus propios gestores <literal>save_handler</literal>; los gestores registrados se pueden
     obtener a nivel de instalación consultando
     <function>phpinfo</function>. Véase también
     <function>session_set_save_handler</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.save-path">
   <term>
    <parameter>session.save_path</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.save_path</literal> define el argumento que
     es pasado al gestor de guardador. Si se elige el gestor de archivos
     por defecto, éste es la ruta donde los archivos son creados. Véase también
     <function>session_save_path</function>. 
    </simpara>
    <para>
     Hay un argumento opcional N para esta directiva que determina
     el número de niveles de directorios por donde los archivos de sesión se
     desplegarán. Por ejemplo, establecerlo a <literal>'5;/tmp'</literal>
     puede terminar en crear un archivo de sesión y ubicación como
     <literal>/tmp/4/b/1/e/3/sess_4b1e384ad74619bd212e236e52a5a174If
     </literal>. Para usar N se debe crear todos estos
     directorios antes de utilizarlo. Para realizar esto, existe un pequeño script
     tipo shell en <filename>ext/session</filename>, y se llama
     <filename>mod_files.sh</filename>, con una versión de Windows llamada
     <filename>mod_files.bat</filename>. Observe también que si N se
     usa y es más grande que 0 no se llevará a cabo la recolección de basura
     automática, vea una copiar de &php.ini; para más
     información. También, si usa N, asegúrese de encerrar
     <literal>session.save_path</literal> entre
     "comillas" ya que el separador (<literal>;</literal>) también
     se usa para comentarios en &php.ini;.
    </para>
    <warning>
     <para>
      Si se deja esta configuración para un directorio legilble por todo el mundo, tal como
      <filename>/tmp</filename> (por defecto), otros usuarios en el servidor
      pueden ser capaces de secuestrar sesiones obteniendo la lista de
      archivos de ese directorio.
     </para>
    </warning>
    <note>
     <simpara>
      Antes de PHP 4.3.6, los usuarios de Windows tenían que cambiar esta variable para
      usar las funciones de sesiones de PHP. Se debe especificar una ruta válida, p.ej.:
      <filename>c:/temp</filename>.
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.name">
   <term>
    <parameter>session.name</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.name</literal> specifica el nombre de la
     sesión que se usa como nombre de cookie. Sólo debería contener
     caracteres alfanuméricos. Por defecto es <literal>PHPSESSID</literal>.
     Véase también <function>session_name</function>.
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.session.auto-start">
   <term>
    <parameter>session.auto_start</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.auto_start</literal> especifica si el
     módulo de sesión inicia una sesión automáticamente cuando arranque una
     petición. Por defecti es <literal>0</literal> (deshabilitado).
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.serialize-handler">
   <term>
    <parameter>session.serialize_handler</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.serialize_handler</literal> define el nombre
     del gestor que se usa para serializar/deserializar
     información. Actualmente, un formato interno de PHP (nombre <literal>php</literal> o
     <literal>php_binary</literal>) y WDDX están soportados (nombre
     <literal>wddx</literal>). WDDX sólo está disponible si PHP es
     compilado con <link linkend="ref.wddx">soporte para
     WDDX</link>. Por defecto es <literal>php</literal>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.gc-probability">
   <term>
    <parameter>session.gc_probability</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.gc_probability</literal> se usa junto con
     <literal>session.gc_divisor</literal> para manejar la probabilidad de
     que la rutina rb (recolección de basura, garbage collection en inglés) está iniciada.
     Por defecto es <literal>1</literal>. Véase <link
     linkend="ini.session.gc-divisor">session.gc_divisor</link> para más detalles.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.gc-divisor">
   <term>
    <parameter>session.gc_divisor</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.gc_divisor</literal> junto con
     <literal>session.gc_probability</literal> define la probabilidad de
     que el proceso de rb (recolección de basura, garbage collection en inglés) esté iniciado en
     cada inicialización de sesión.
     La probabilidad se calcula usando gc_probability/gc_divisor,
     p.ej. 1/100 significa que hay un 1% de probabilidad de que el proceso de RB se inicie
     en cada petición.
     <literal>session.gc_divisor</literal> por defecto es <literal>100</literal>.
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.session.gc-maxlifetime">
   <term>
    <parameter>session.gc_maxlifetime</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.gc_maxlifetime</literal> especifica el número
     de segudos transcurridos después de que la información sea vista como 'basura' y
     potencialmente limpiada. La recolección de basura puede suceder durante el inicio de sesiones
     (dependiendo de <link
     linkend="ini.session.gc-probability">session.gc_probability</link> y
     <link linkend="ini.session.gc-divisor">session.gc_divisor</link>).
    </simpara>
    <note>
     <para>
      Si diferentes scripts tienen diferentes valores de
      <literal>session.gc_maxlifetime</literal> pero comparten la misma ubicación para
      almacenar la información de sesión, la información del script con el mínimo valor
      será limpiada. En este caso use esta directiva junto con <link
      linkend="ini.session.save-path">session.save_path</link>.
     </para>
    </note>
    <note>
     <simpara>Si está usando el gestor de sesiones basado en archivo predeterminado, su
     sistema de archivos debe llevar la cuenta de los tiempos de acceso (atime). FAT de Windows
     no lo hace por lo que tendrá que utilizar otro método para manejar la recolección
     de basura de su sesión si está utilizando un sistema de archivos FAT o cualquier
     otro sistema de archivo donde la cuenta de atime no esté disponible.
     Desde PHP 4.2.3 se ha usado mtime (fecha de modificación) en vez de atime. Así,
     no tendrá problemas con sistemas de archivos donde la cuenta de atime no esté disponible.
     </simpara>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.referer-check">
   <term>
    <parameter>session.referer_check</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.referer_check</literal> ***contains the
     substring you want to check each HTTP Referer for. If the
     Referer was sent by the client and the substring was not
     found, the embedded session id will be marked as invalid.
     Defaults to the empty string.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.entropy-file">
   <term>
    <parameter>session.entropy_file</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.entropy_file</literal> gives a path to an
     external resource (file) which will be used as an additional
     entropy source in the session id creation process. Examples are
     <literal>/dev/random</literal> or <literal>/dev/urandom</literal>
     which are available on many Unix systems.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.entropy-length">
   <term>
    <parameter>session.entropy_length</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.entropy_length</literal> specifies the number
     of bytes which will be read from the file specified
     above. Defaults to <literal>0</literal> (disabled).
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.use-cookies">
   <term>
    <parameter>session.use_cookies</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.use_cookies</literal> specifies whether the
     module will use cookies to store the session id on the client
     side. Defaults to <literal>1</literal> (enabled).
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.use-only-cookies">
   <term>
    <parameter>session.use_only_cookies</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.use_only_cookies</literal> specifies whether
     the module will <emphasis role="strong">only</emphasis> use
     cookies to store the session id on the client side.
     Enabling this setting prevents attacks involved passing session
     ids in URLs. This setting was added in PHP 4.3.0.
     Defaults to <literal>1</literal> (enabled) since PHP 5.3.0.
    </simpara>
   </listitem>
  </varlistentry>


  <varlistentry xml:id="ini.session.cookie-lifetime">
   <term>
    <parameter>session.cookie_lifetime</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_lifetime</literal> specifies the lifetime of
     the cookie in seconds which is sent to the browser. The value 0
     means "until the browser is closed." Defaults to
     <literal>0</literal>. See also
     <function>session_get_cookie_params</function> and
     <function>session_set_cookie_params</function>.
    </simpara>
    <note>
     <para>
      The expiration timestamp is set relative to the server time, which is
      not necessarily the same as the time in the client's browser.
     </para>
    </note> 
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-path">
   <term>
    <parameter>session.cookie_path</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_path</literal> specifies path to set
     in session_cookie. Defaults to <literal>/</literal>. See also
     <function>session_get_cookie_params</function> and
     <function>session_set_cookie_params</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-domain">
   <term>
    <parameter>session.cookie_domain</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_domain</literal> specifies the domain to
     set in session_cookie. Default is none at all meaning the host name of
     the server which generated the cookie according to cookies specification.
     See also <function>session_get_cookie_params</function> and
     <function>session_set_cookie_params</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-secure">
   <term>
    <parameter>session.cookie_secure</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cookie_secure</literal> specifies whether
     cookies should only be sent over secure connections. Defaults to
     <literal>off</literal>.
     This setting was added in PHP 4.0.4. See also
     <function>session_get_cookie_params</function> and
     <function>session_set_cookie_params</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cookie-httponly">
   <term>
    <parameter>session.cookie_httponly</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     Marks the cookie as accessible only through the HTTP protocol. This means
     that the cookie won't be accessible by scripting languages, such as
     JavaScript. This setting can effectively help to reduce identity theft
     through XSS attacks (although it is not supported by all browsers).
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.cache-limiter">
   <term>
    <parameter>session.cache_limiter</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cache_limiter</literal> specifies the cache
     control method used for session pages.
     It may be one of the following values:
     <literal>nocache</literal>, <literal>private</literal>, 
     <literal>private_no_expire</literal>, or <literal>public</literal>.
     Defaults to <literal>nocache</literal>. See also the
     <function>session_cache_limiter</function> documentation for
     information about what these values mean.
    </simpara>
   </listitem>
  </varlistentry>


  <varlistentry xml:id="ini.session.cache-expire">
   <term>
    <parameter>session.cache_expire</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.cache_expire</literal> specifies time-to-live
     for cached session pages in minutes, this has no effect for
     nocache limiter. Defaults to <literal>180</literal>. See also
     <function>session_cache_expire</function>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.use-trans-sid">
   <term>
    <parameter>session.use_trans_sid</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.use_trans_sid</literal> whether transparent
     sid support is enabled or not. Defaults to
     <literal>0</literal> (disabled).
    </simpara>
    <note>
     <simpara>
      For PHP 4.1.2 or less, it is enabled by compiling with 
      <link linkend="configure.enable-trans-sid">
      <literal>--enable-trans-sid</literal></link>.
      From PHP 4.2.0, trans-sid feature is always compiled.
     </simpara>
     <simpara>
      URL based session management has additional security risks
      compared to cookie based session management. Users may send
      a URL that contains an active session ID to their friends by
      email or users may save a URL that contains a session ID to
      their bookmarks and access your site with the same session ID
      always, for example.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.session.bug-compat-42">
   <term>
    <parameter>session.bug_compat_42</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     PHP versions 4.2.3 and lower have an undocumented feature/bug that
     allows you to initialize a session variable in the global scope,
     albeit <link linkend="ini.register-globals">register_globals</link>
     is disabled.  PHP 4.3.0 and later will warn you, if this feature is
     used, and if <link linkend="ini.session.bug-compat-warn">
     session.bug_compat_warn</link> is also enabled.  This feature/bug can be
     disabled by disabling this directive.
    </simpara>
   </listitem>
  </varlistentry>
  
  <varlistentry xml:id="ini.session.bug-compat-warn">
   <term>
    <parameter>session.bug_compat_warn</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <simpara>
     PHP versions 4.2.3 and lower have an undocumented feature/bug that
     allows you to initialize a session variable in the global scope,
     albeit <link linkend="ini.register-globals">register_globals</link>
     is disabled.  PHP 4.3.0 and later will warn you, if this feature is
     used by enabling both 
     <link linkend="ini.session.bug-compat-42">session.bug_compat_42</link>
     and <link linkend="ini.session.bug-compat-warn">
     session.bug_compat_warn</link>.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.hash-function">
   <term>
    <parameter>session.hash_function</parameter>
    <type>mixed</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.hash_function</literal> allows you to specify the hash
     algorithm used to generate the session IDs. '0' means MD5 (128 bits) and
     '1' means SHA-1 (160 bits).
    </simpara>
    <para>
     Since PHP 5.3.0 it is also possible to specify any of the algorithms
     provided by the <link linkend="ref.hash">hash extension</link> (if it is
     available), like <literal>sha512</literal> or
     <literal>whirlpool</literal>. A complete list of supported algorithms can
     be obtained with the <function>hash_algos</function> function.
    </para>
    <note>
     <para>
      This setting was introduced in PHP 5.
     </para>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.session.hash-bits-per-character">
   <term>
    <parameter>session.hash_bits_per_character</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <simpara>
     <literal>session.hash_bits_per_character</literal> allows you to define
     how many bits are stored in each character when converting the binary
     hash data to something readable. The possible values are '4' (0-9, a-f),
     '5' (0-9, a-v), and '6' (0-9, a-z, A-Z, "-", ",").
    </simpara>
    <note>
     <para>
      This was introduced in PHP 5.
     </para>
    </note>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.url-rewriter.tags">
   <term>
    <parameter>url_rewriter.tags</parameter>
    <type>string</type>
   </term>
   <listitem>
    <simpara>
     <literal>url_rewriter.tags</literal> specifies which HTML tags
     are rewritten to include session id if transparent sid support
     is enabled. Defaults to
     <literal>a=href,area=href,frame=src,input=src,form=fakeentry,fieldset=</literal>
    </simpara>
    <note>
     <simpara>
      If you want HTML/XHTML strict conformity, remove the <literal>form</literal> entry and
      use the &lt;fieldset&gt; tags around your form fields.
     </simpara>
    </note>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>

 <para>
  The <link
  linkend="ini.track-vars"><literal>track_vars</literal></link> and
  <link
  linkend="ini.register-globals"><literal>register_globals</literal></link>
  configuration settings influence how the session variables get
  stored and restored.
 </para>

 <note>
  <para>
   As of PHP 4.0.3, <link
   linkend="ini.track-vars"><literal>track_vars</literal></link> is
   always turned on.
  </para>
 </note>

</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
