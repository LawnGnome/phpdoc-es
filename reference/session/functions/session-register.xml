<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.12 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.session-register" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>session_register</refname>
  <refpurpose>Registrar una o más variables globales con la sesión
  actual</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>session_register</methodname>
   <methodparam><type>mixed</type><parameter>nombre</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>session_register</function> acepta un número variable de
   argumentos, cualquiera de los cuales puede ser o una cadena que contiene
   el nombre de una variable, o una matriz que consista de nombres de
   variables u otras matrices. Para cada nombre,
   <function>session_register</function> registra la variable global con ese
   nombre en la sesión actual.
  </para>
  <para>
   Puede crear también una variable de sesión, simplemente
   definiendo el miembro apropiado de <varname>$_SESSION</varname> o la
   matriz <varname>$HTTP_SESSION_VARS</varname> (PHP &lt; 4.1.0).
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
// El uso de session_register() es considerado obsoleto
$barney = "Un dinosaurio grande y violeta.";
session_register("barney");

// Se prefiere el uso de $_SESSION, a partir de PHP 4.1.0
$_SESSION["zim"] = "Un invasor de otro planeta.";

// El modo antiguo era usar $HTTP_SESSION_VARS
$HTTP_SESSION_VARS["bob_esponja"] = "Él tiene pantalones cuadrados.";
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   Si <function>session_start</function> no fue llamada antes de que esta
   función sea llamada, se realizará un llamado implícito a
   <function>session_start</function> sin parámetro alguno.
   <varname>$_SESSION</varname> no imita este comportamiento y requiere
   <function>session_start</function> antes de su uso.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>nombre</parameter></term>
     <listitem>
      <para>
       Una cadena que contiene el nombre de una variable o una matriz
       consistente de nombres de variables u otras matrices.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Si desea que su script funcione independientemente de <link
    linkend="ini.register-globals">register_globals</link>, necesita usar en
    su lugar la matriz <link
    linkend="reserved.variables.session">$_SESSION</link>, dado que las
    entradas de <varname>$_SESSION</varname> son registradas
    automáticamente. Si su script usa <function>session_register</function>,
    no funcionará en entornos en donde la directiva PHP <link
    linkend="ini.register-globals">register_globals</link> esté
    deshabilitada.
   </para>
  </caution>
  &note.registerglobals;
  <caution>
   <para>
    Esto registra una variable <emphasis>global</emphasis>. Si desea
    registrar una variable de sesión desde el interior de una función,
    necesita asegurarse de hacerla global usando la palabra clave <link
    linkend="language.variables.scope"><command>global</command></link> o la
    matriz <varname>$GLOBALS[]</varname>, o usar las matrices de sesión
    especiales, como se anota a continuación.
   </para>
  </caution>
  <caution>
   <para>
    Si está usando <varname>$_SESSION</varname> (o
    <varname>$HTTP_SESSION_VARS</varname>), no use
    <function>session_register</function>,
    <function>session_is_registered</function>, ni
    <function>session_unregister</function>.
   </para>
  </caution>
  <note>
   <para>
    Actualmente es imposible registrar variables de recurso en una sesión.
    Por ejemplo, no puede crear una conexión a una base de datos y almacenar
    la id de conexión como una variable de sesión y esperar que la conexión
    aun sea válida la próxima vez que la sesión sea restaurada. Las
    funciones PHP que devuelven un recurso se identifican por tener un tipo
    de retorno de <literal>resource</literal> en su definicón de función.
    Una lista de funciones que devuelven recursos está disponible en el
    apéndice <link linkend="resource">tipos de recurso</link>.
   </para>
   <para>
    Si <varname>$_SESSION</varname> (o <varname>$HTTP_SESSION_VARS</varname>
    para PHP 4.0.6 o versiones anteriores) es usado, asigne valores a
    <varname>$_SESSION</varname>. Por ejemplo: $_SESSION['var'] = 'ABC';
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>session_is_registered</function></member>
    <member><function>session_unregister</function></member>
    <member><link linkend="reserved.variables.session">$_SESSION</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
