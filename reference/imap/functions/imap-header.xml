<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./es/functions/imap.xml, last change in rev 1.1 -->
<!-- last change to 'imap-header' in en/ tree in rev 1.2 -->
  <refentry id="function.imap-header">
   <refnamediv>
    <refname>imap_header</refname>
    <refpurpose>Lee la cabecera del mensaje</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>object</type><methodname>imap_header</methodname>
     <methodparam><type>int</type><parameter>imap_stream</parameter></methodparam>
     <methodparam><type>int</type><parameter>msg_number</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>fromlength</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>subjectlength</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>defaulthost</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esta funci&oacute;n devuelve un objeto con varios elementos de la cabecera.
    </para>
    <para>  
     <informalexample>
      <literallayout>
       remail, date, Date, subject, Subject, in_reply_to, message_id,
       newsgroups, followup_to, references

message flags:
   Recent -  'R' si es reciente y ha sido leido, 
             'N' si es reciente y no ha sido leido, 
             ' ' si no es reciente
   Unseen -  'U' si no ha sido leido Y no es reciente, 
             ' ' si ha sido leido O no y es reciente
   Answered -'A' si ha sido contestado, 
             ' ' si no ha sido contestado
   Deleted - 'D' si ha sido borrado, 
             ' ' si no ha sido borrado
   Draft -   'X' if draft, 
             ' ' if not draft
   Flagged - 'F' si esta if flagged, 
             ' ' if not flagged

OBSERVE que el comportamiento Recent/Unseen es un poco extra¤o. Si quiere conocer
si un mensaje es Unseen, debe comprobarlo asi

Unseen == 'U' || Recent == 'N'

toaddress (la linea to: al completo, hasta 1024 caracteres)

to[] (devuelve un array de objetos a partir de la linea To, conteniendo:)
   personal
   adl
   mailbox
   host

fromaddress (la linea from: al completo, hasta 1024 caracteres)

from[] (devuelve un array de objetos a partir de la linea From, conteniendo:)
   personal
   adl
   mailbox
   host

ccaddress (la linea cc: al completo, hasta 1024 caracteres)
cc[] (devuelve un array de objetos a partir de la linea Cc:, conteniendo:)
   personal
   adl
   mailbox
   host

bccaddress (la linea bcc al completo, hasta 1024 caracteres)
bcc[] (devuelve un array de objetos a partir de la linea Bcc, conteniendo:)
   personal
   adl
   mailbox
   host

reply_toaddress (la linea reply_to: al completo, hasta 1024 caracteres)
reply_to[] (devuelve un array de objetos a partir de la linea Reply_to,
conteniendo:)
   personal
   adl
   mailbox
   host

senderaddress (la linea sender: al completo, hasta 1024 caracteres)
sender[] (devuelve un array de objetos a partir de la linea sender, conteniendo:)
   personal
   adl
   mailbox
   host

return_path (la linea return-path: al completo, hasta 1024 caracteres)
return_path[] (devuelve un array de objetos a partir de la linea return_path,
conteniendo:)
   personal
   adl
   mailbox
   host

udate (fecha del mensaje en formato unix)

fetchfrom (la linea from formateada hasta ajustarse a los caracteres
indicados en <parameter>fromlength</parameter>)

fetchsubject (la linea subject formateada hasta ajustarse a los caracteres
indicados en <parameter>subjectlength</parameter>)

      </literallayout>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
