<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: seros Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.socket-get-option">
 <refnamediv>
  <refname>socket_get_option</refname>
  <refpurpose>Obtiene las opciones de socket para el socket</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>socket_get_option</methodname>
   <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
   <methodparam><type>int</type><parameter>level</parameter></methodparam>
   <methodparam><type>int</type><parameter>optname</parameter></methodparam>
  </methodsynopsis>
  <para>
   La función <function>socket_get_option</function> recupera el valor de
   la opción especificada por el parámetro <parameter>optname</parameter> para el
   <parameter>socket</parameter> especificado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Un recurso socket válido creado con <function>socket_create</function>
       o <function>socket_accept</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>level</parameter></term>
     <listitem>
      <para>
       El parámetro <parameter>level</parameter> especifica el nivel
       de protcolo en el que reside la opción. Por ejemplo, para recuperar las opciones
       al nivel de socket se usaría un parámetro <parameter>level</parameter> de
       <constant>SOL_SOCKET</constant>. Se puden usar otros niveles como
       <constant>TCP</constant> especificando el número de protocolo de ese nivel.
       Los números de protocolo se pueden averiguar usando la función
       <function>getprotobyname</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>optname</parameter></term>
     <listitem>
      <table>
       <title>Opciones de Socket Disponibles</title>
       <tgroup cols="3">
        <thead>
         <row>
          <entry>Opción</entry>
          <entry>Descripción</entry>
          <entry>Tipo</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><constant>SO_DEBUG</constant></entry>
          <entry>
           Informa si la información de depuración está siendo registrada.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_BROADCAST</constant></entry>
          <entry>
           Informa si la transmisión de mensajes de emisión está soportada.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_REUSEADDR</constant></entry>
          <entry>
           Informa si las direcciones locales pueden ser rechazadas.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_KEEPALIVE</constant></entry>
          <entry>
           Informa si las conexiones se mantienen activas con transmisiones periódicas
           de mensajes. Si el socket conectado falla al responder a estos mensajes,
           la conexión es interrumpida y los procesos que escriben en ese socket son notificados
           con una señal SIGPIPE.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_LINGER</constant></entry>
          <entry>
           <para>
            Informa si el <parameter>socket</parameter> perdura en
            <function>socket_close</function> si la información está presente. Por omisión, 
            cuando el socket se cierra, se intenta enviar toda la información no enviada.
            En el caso de un socket orientado a conexión,
            <function>socket_close</function> esperará a su par para
            admitir la información.
           </para>
           <para>
            Si <varname>l_onoff</varname> no es cero y
            <varname>l_linger</varname> es cero, toda la
            información no enviada será desechada y se envía RST (reinicio) al
            par en el caso de un socker orientado a conexión. 
           </para>
           <para>
            Por otro lado, si <varname>l_onoff</varname> no
            es cero y <varname>l_linger</varname> no es cero,
            <function>socket_close</function> bloqueará hasta que toda la información
            sea enviada o transcurra el tiempo especificado en <varname>l_linger</varname>.
            Si el socket es de no-bloqueo,
            <function>socket_close</function> fallará y devolverá un error.
           </para>
          </entry>
          <entry>
           <type>array</type>. La matriz contendrá dos claves:
           <varname>l_onoff</varname> y 
           <varname>l_linger</varname>. 
          </entry>
         </row>
         <row>
          <entry><constant>SO_OOBINLINE</constant></entry>
          <entry>
           Informa si el <parameter>socket</parameter> deja información fuera de banda en línea.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDBUF</constant></entry>
          <entry>
           Informa del tamaño del buffer de envío.
          </entry>
          <entry>
           <type>int</type>
          </entry>          
         </row>
         <row>
          <entry><constant>SO_RCVBUF</constant></entry>
          <entry>
           Informa del tamaño del buffer de recepción.
          </entry>
          <entry>
           <type>int</type>
          </entry>         
         </row>
         <row>
          <entry><constant>SO_ERROR</constant></entry>
          <entry>
           Da información sobre el estado de error y lo limpia.
          </entry>
          <entry>
           <type>int</type> (cannot be set by <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>SO_TYPE</constant></entry>
          <entry>
           Informa del tipo <parameter>socket</parameter> (p.ej. 
           <constant>SOCK_STREAM</constant>).
          </entry>
          <entry>
           <type>int</type> (no puede ser establecido mediante <function>socket_set_option</function>)
          </entry>
         </row>
         <row>
          <entry><constant>SO_DONTROUTE</constant></entry>
          <entry>
           Informa si los mensajes salientes se desvían de los mecanismos de ruta estándar.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVLOWAT</constant></entry>
          <entry>
           Informa del número mínimo de bytes a procesar para operaciones de entrada del
           <parameter>socket</parameter>.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>SO_RCVTIMEO</constant></entry>
          <entry>
           Informa del valor del tiempo límite para operaciones de entrada.
          </entry>
          <entry>
           <type>array</type>. La matriz contendrá dos claves:
           <varname>sec</varname> que es la parte de segundos del valor del tiempo límite
           y <varname>usec</varname> que es la parte de microsegundos del valor
           del tiempo límite.
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDTIMEO</constant></entry>
          <entry>
           Informa del valor del tiempo límite especificando la cantidad de tiempo que una función
           de salida bloquea porque el control de flujo evita el envío de información.
          </entry>
          <entry>
           <type>array</type>. La matriz contendrá dos claves:
           <varname>sec</varname> que es la parte de segundos del valor del tiempo límite
           y <varname>usec</varname> que es la parte de microsegundos del valor
           del tiempo límite.
          </entry>
         </row>
         <row>
          <entry><constant>SO_SNDLOWAT</constant></entry>
          <entry>
           Informa del número mínimo de bytes a procesar por operaciones de salida del <parameter>socket</parameter>.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
         <row>
          <entry><constant>TCP_NODELAY</constant></entry>
          <entry>
           Informa si el algoritmo Nagle TCP está deshabilitado.
          </entry>
          <entry>
           <type>int</type>
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el valor de la opción dada, o &false; en caso de error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>socket_set_option</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$socket = socket_create_listen(1223);

$linger = array('l_linger' => 1, 'l_onoff' => 1);
socket_set_option($socket, SOL_SOCKET, SO_LINGER, $linger);

var_dump(socket_get_option($socket, SOL_SOCKET, SO_REUSEADDR));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Se cambió el nombre de esta función. Se solía llamar
        <literal>socket_getopt()</literal>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
