<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 301890 $ -->
<!-- EN-Revision: 301890 Maintainer: seros Status: ready -->

<refentry xml:id="function.cubrid-move-cursor" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_move_cursor</refname>
  <refpurpose>Se usa para mover la posición del cursor actual</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>cubrid_move_cursor</methodname>
   <methodparam><type>int</type><parameter>req_handle</parameter></methodparam>  
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>  
   <methodparam choice="opt"><type>int</type><parameter>origin</parameter></methodparam>  
  </methodsynopsis>
  <para>
    La función <function>cubrid_move_cursor</function> se usa para mover la posición del cursor actual de <parameter>req_handle</parameter> por el valor establecido en el argumento <parameter>offset</parameter>, a la dirección establecida en el argumento <parameter>origin</parameter>. Para establecer el argumento <parameter>origin</parameter> se puede usar CUBRID_CURSOR_FIRST como primera parte del resultado, CUBRID_CURSOR_CURRENT como la posición actual del resultado, o CUBRID_CURSOR_LAST como la última parte del resultado. Si el argumento <parameter>origin</parameter> no es designado explícitamente, la función usa CUBRID_CURSOR_CURRENT como valor predeterminado.
  </para>
  <para>
    Si el valor del alcance de movimiento del cursor se sale del límite válido, el cursor se mueve a la siguiente posición después del alcance válido del cursor. Por ejemplo, si se mueve 20 unidades en un resultado cuyo tamaño es 10, el cursor se moverá al lugar 11 y devolverá CUBRID_NO_MORE_DATA.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
  <variablelist>
    <varlistentry>
  <term><parameter>req_handle</parameter></term>
  <listitem><para>Gestor de solicitud.</para></listitem>
   </varlistentry>
   <varlistentry>
  <term><parameter>offset</parameter></term>
  <listitem><para>Número de unidades que se quiere mover el cursor.</para></listitem>
   </varlistentry>
  <varlistentry>
  <term><parameter>origin</parameter></term>
  <listitem><para>Posición donde se quiere mover el cursor desde CUBRID_CURSOR_FIRST, CUBRID_CURSOR_CURRENT, CUBRID_CURSOR_LAST.</para></listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    CUBRID_CURSOR_SUCCESS, cuando el proceso tiene éxito.
  </para>
    <para>
    CUBRID_NO_MORE_DATA, cuando no es una posición de cursor válida.
  </para>
    <para>
    CUBRID_CURSOR_ERROR, en caso de error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>cubrid_move_cursor</function></title>
   <programlisting role="php">
<![CDATA[
<?php
cubrid_move_cursor ($gestor_req, 1, CUBRID_CURSOR_FIRST);  
// mover el cursor a la primera posición posible
$fila = cubrid_fetch ($gestor_req);
echo $fila["id"], $fila["name"];

cubrid_move_cursor ($gestor_req, 1, CUBRID_CURSOR_LAST);  
// mover el cursor a la última posición posible
$fila = cubrid_fetch ($gestor_req);
echo $fila["id"], $fila["name"];
?>
]]>
   </programlisting>
  </example>
 </refsect1>

  <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
   <member><function>cubrid_execute</function></member>   
   </simplelist>
  </para>
  </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
