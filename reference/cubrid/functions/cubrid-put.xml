<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 303158 Maintainer: seros Status: ready -->

<refentry xml:id="function.cubrid-put" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_put</refname>
  <refpurpose>Se usa para actualizar un atributo</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>cubrid_put</methodname>
   <methodparam><type>resource</type><parameter>conn_identifier</parameter></methodparam>  
   <methodparam><type>string</type><parameter>oid</parameter></methodparam>  
   <methodparam choice="opt"><type>string</type><parameter>attr</parameter></methodparam> 
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>  
  </methodsynopsis>
  <para>
   La función <function>cubrid_put</function> se usa para actualizar un atributo de la instancia del <parameter>oid</parameter> dado. Se puede actualizar un único atributo estableciendo <parameter>attr</parameter> como cadena. En tal caso se puede usar el tipo de datos entero, coma flotante, o cadena para el argumento <parameter>value</parameter>. Para actualizar múltiples atributos se puede ignorara el argumento <parameter>attr</parameter> y establecer el argumento <parameter>value</parameter> con una matriz asociativa. Sin embargo, no se puede usar el método para un atributo de tipo colección. Se tiene que usar las APIs relacionadas con el tipo colección (<function>cubrid_set_add</function>, <function>cubrid_set_drop</function>, etc.) cuando se quiera usar <function>cubrid_put</function> en un atributo de tipo colección.
  </para>
  <para>
   Se puede actualizar un único atributo usando un tipo de datos de cadena para establecer <parameter>attr</parameter>. En tal caso, se puede usar información de tipo entero, coma flotante o cadena para el argumento <parameter>value</parameter>. Para actualizar múltiples atributos se puede ignorar el argumento <parameter>attr</parameter>, y establecer el argumento <parameter>value</parameter> con una matriz asociativa. Sin embargo, no se puede usar el método para atributos de tipo colección. Se tiene que usar las APIs relacionadas con el tipo colección (<function>cubrid_set_add</function>, <function>cubrid_set_drop</function>, etc) cuando se quiera usar <function>cubrid_put</function> en un atributo de tipo colección.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>conn_identifier</parameter></term>
     <listitem><para>Identificador de conexión.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>oid</parameter></term>
     <listitem><para>Oid de la instancia que se quiere actualizar.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>attr</parameter></term>
     <listitem><para>Nombre del atributo que se quiere actualizar.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem><para>Nuevo valor que se quiere asignar al atributo.</para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &true;, cuando el proceso tiene éxito.
  </para>
  <para>
   &false;, cuando el proceso no tiene éxito.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>cubrid_put</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$matriz_atrib = cubrid_get ($con, $oid);
$matriz_atrib["name"] = "Nombre Nuevo";
cubrid_put ($con, $oid, $matriz_atrib);
cubrid_put ($con, $oid, "name", "Nombre Nuevo 2");
cubrid_put ($con, $oid, "hobbies", array("aa", "bb"));
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist> 
    <member><function>cubrid_get</function></member>  
    <member><function>cubrid_set_add</function></member>  
    <member><function>cubrid_set_drop</function></member>  
    <member><function>cubrid_seq_insert</function></member>  
    <member><function>cubrid_seq_drop</function></member>  
    <member><function>cubrid_seq_put</function></member>  
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
