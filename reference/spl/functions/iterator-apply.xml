<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 289185 Maintainer: andresdzphp Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.iterator-apply" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>iterator_apply</refname>
  <refpurpose>Llama una función para cada elemento en un iterador</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>iterator_apply</methodname>
   <methodparam><type>Traversable</type><parameter>iterator</parameter></methodparam>
   <methodparam><type>callback</type><parameter>function</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   Llamar una función para cada elemento en un iterador.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>iterator</parameter></term>
     <listitem>
      <para>
       La clase a ser iterada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
       La función de llamada de recorno a llamar para cada elemento.
       <note>
        <simpara>
         Esta función debe retornar &true; para con el fin de seguir con 
         la iterando el <parameter>iterator</parameter>.
        </simpara>
       </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       Argumentos que van a ser pasados a la función de llamada de retorno.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el número de iteraciones.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>iterator_apply</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function print_caps(Iterator $iterator) {
    echo strtoupper($iterator->current()) . "\n";
    return TRUE;
}

$it = new ArrayIterator(array("Manzanas", "Bananas", "Cerezas"));
iterator_apply($it, "print_caps", array($it));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
MANZANAS
BANANAS
CEREZAS
]]>
    </screen>
   </example>
  </para>
 </refsect1>

<!--
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function issue E_* level errors, and/or throw exceptions.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>iterator_apply</function> example</title>
    <para>
     Any text that describes the purpose of the example, or what
     goes on in the example should be here.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

/* ... */

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
...
]]>
    </screen>
   </example>
  </para>
 </refsect1>
-->

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
