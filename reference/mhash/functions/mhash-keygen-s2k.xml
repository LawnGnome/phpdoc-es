<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.6 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.mhash-keygen-s2k" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mhash_keygen_s2k</refname>
  <refpurpose>Genera una llave</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mhash_keygen_s2k</methodname>
   <methodparam><type>int</type><parameter>hash</parameter></methodparam>
   <methodparam><type>string</type><parameter>contrasenya</parameter></methodparam>
   <methodparam><type>string</type><parameter>sal</parameter></methodparam>
   <methodparam><type>int</type><parameter>bytes</parameter></methodparam>
  </methodsynopsis>
  <para>
   Genera una llave  de acuerdo con el <parameter>hash</parameter>, dada una
   <parameter>contrasenya</parameter> provista por el usuario.
  </para>
  <para>
   Este es el algoritmo con sal S2K, tal y como se encuentra especificado en
   el documento OpenPGP (<link xlink:href="&url.rfc;2440">RFC 2440</link>).
  </para>
  <para>
   Tenga en mente que las contraseñas entregadas por el usuario no son
   realmente apropiadas para ser usadas como llaves en algoritmos
   criptográficos, ya que los usuarios normalmente eligen llaves que pueden
   escribir con el teclado. Estas contreseñas usan solo 6 o 7 bits por
   caracter (o menos). Es bastante recomendable usar algún tipo de
   transformación (como esta función) sobre la llave entregada por el
   usuario.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hash</parameter></term>
     <listitem>
      <para>
       El id del hash usado para crear la llave. Debe ser una de las
       constantes <literal>MHASH_XXX</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>contrasenya</parameter></term>
     <listitem>
      <para>
       Contraseña entregada por el usuario.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sal</parameter></term>
     <listitem>
      <para>
       Debe ser diferente y suficientemente aleatoria para cada llave que
       genere para crear diferentes llaves. La sal debe conocerse cuando
       chequee las llaves, de modo que es una buena idea adicionarle la
       llave al final. La sal tiene un tamaño fijo de 8 bytes y será
       rellenada con ceros si usted suple menos bytes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bytes</parameter></term>
     <listitem>
      <para>
       La longitud de la llave, en bytes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la llave generada como una cadena, o &false; en caso de error.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
