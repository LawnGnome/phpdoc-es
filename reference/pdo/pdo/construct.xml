<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 315005 Maintainer: alejandrorodas Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="pdo.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::__construct</refname>
  <refpurpose>
   Crea una instancia de PDO representando una conexión a la base de datos
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <methodname>PDO::__construct</methodname>
   <methodparam><type>string</type><parameter>dsn</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>driver_options</parameter></methodparam>
  </constructorsynopsis>
  <para>
   Crea una instancia de PDO para representar una conexión a la base de datos
   solicitada.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry><term>dsn</term>
     <listitem>
      <para>
       EL nombre de origen de datos (DSN), contiene la información requerida para
       conectarse a la base de datos.
      </para>
      <para>
       En general, un DSN consiste en el nombre del driver PDO, seguido por dos puntos,
       seguido por la sintaxis específica del driver PDO para la conexión. Más
       información está disponible en la <link linkend="pdo.drivers">documentación
       específica del driver PDO</link>.
      </para>
      <para>
       El parámetro <parameter>dsn</parameter> soporta tres
       métodos diferentes para especificar los parámetros requeridos para crear
       la conexión a la base de datos:
      </para>
      <para>
       <variablelist>
        <varlistentry><term>Invocación del driver</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> contiene el DSN completo.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry><term>URI invocation</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> está formado por <userinput>uri:</userinput>
           seguido por un URI que define la ubicación de un archivo que contiene
           una cadena con el DSN. El URI puede especificar un archivo local o una URL remota.
          </para>
          <para><userinput>uri:file:///path/to/dsnfile</userinput></para>
         </listitem>
        </varlistentry>
        <varlistentry><term>Aliasing</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> está formado por un nombre
           <parameter>name</parameter> que mapea a
           <code>pdo.dsn.<parameter>name</parameter></code> en &php.ini;
           definido en la cadena de DSN.
          </para>
          <note>
           <para>
            El alias debe estar definido en &php.ini;, y no en &htaccess; o &httpd.conf;
           </para>
          </note>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>username</term>
     <listitem>
      <para>
       El nombre de usuario para la cadena DSN. Este parámetro es opcional
       para algunos drivers PDO.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>password</term>
     <listitem>
      <para>
       La contraseña para la cadena DSN. Este parámetro es opcional para
       algunos drivers PDO.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>driver_options</term>
     <listitem>
      <para>
       Un array de la forma clave=&gt;valor con opciones específicas del driver para la conexión.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto PDO en caso de éxito.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>PDO::__construct</function> lanza una <classname>PDOException</classname> si el intento
   de conexión a la base de datos requerida falla.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Crea una instancia PDO a través de una invocación del driver</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Conectar a una base de datos ODBC invocando al driver  */
$dsn = 'mysql:dbname=testdb;host=127.0.0.1';
$user = 'dbuser';
$password = 'dbpass';

try {
    $dbh = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
   <example><title>Crear una instancia PDO a través de un URI</title>
    <para>
     El siguiente ejemplo asume que el archivo
     <filename>/usr/local/dbconnect</filename> existe, con los permisos
     necesarios para que PHP lea el archivo. Éste contiene el DSN para el PDO
     necesario para conectarse a una base de datos DB2 a través de un driver PDO_ODBC:
    </para>
    <screen>
<![CDATA[
odbc:DSN=SAMPLE;UID=john;PWD=mypass
]]>
    </screen>
    <para>
     El programa PHP puede crear una conexión a una base de datos simplemente
     pasando el parámetro <literal>uri:</literal> y apuntando al fichero URI:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Conectar a la base de datos ODBC invocando al driver */
$dsn = 'uri:file:///usr/local/dbconnect';
$user = '';
$password = '';

try {
    $dbh = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
   <example><title>Crea una instancia de PDO usando un alias</title>
    <para>
     El siguiente ejemplo asume que &php.ini; contiene la siguiente
     entrada para permitir la conexión a una base de datos MySQL usando
     sólo el alias <literal>mydb</literal>:
    </para>
    <programlisting role="ini">
[PDO]
pdo.dsn.mydb="mysql:dbname=testdb;host=localhost"
    </programlisting>
    <programlisting role="php">
<![CDATA[
<?php
/* Conectar a la base de datos ODBC invocando al driver */
$dsn = 'mydb';
$user = '';
$password = '';

try {
    $dbh = new PDO($dsn, $user, $password);
} catch (PDOException $e) {
    echo 'Connection failed: ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
