<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: alejandrorodas Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdo.begintransaction" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::beginTransaction</refname>
  <refpurpose>
   Inicia una transacción
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>PDO::beginTransaction</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Desctiva el modo 'autocommit'. Mientras el modo 'autocommit' esté desactivado, no se
   consignarán los cambios realizados en la base de datos a través de una instancia de
   PDO hasta que se finalice la transacción con una llamada a <function>PDO::commit</function>.
   Una llamada a <function>PDO::rollBack</function> revertirá todos los cambios de
   la base de datos y devolverá la conexión al modo 'autocommit'.
  </para>
  <para>
   Algunas bases de datos, incluida MySQL, ejecután automáticamente un 
   CCOMMIT implícito cuando una sentencia de definición de lenguaje de base de datos (DDL),
   tales como DROP TABLE o CREATE TABLE, se ejecutan en una transacción. El CCOMMIT
   implícito prevendrá de la reversión de cualquier otro cambio dentro del límite
   de la transacción.
  </para>
  
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Revertir una transacción</title>
    <para>
     El siguiente ejemplo inicia una transacción y ejecuta dos sentencias
     que modifican la base de datos antes de revertir los cambios. En MySQL,
     sin embargo, la sentencia DROP TABLE automáticamente consigna
     la transacción, con lo cual, ninguno de los cambios en la transacción son
     revertidos.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Iniciar una transacción, desactivando 'autocommit' */
$gbd->beginTransaction();

/* Cambiar el esquema y datos de la base de datos */
$gsent = $gbd->exec("DROP TABLE fruit");
$gsent = $gbd->exec("UPDATE dessert
    SET name = 'hamburger'");

/* Reconocer un error y revertir los cambios */
$gbd->rollBack();

/* La conexión a la base de datos ahora vuelve al modo 'autocommit' */
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::commit</function></member>
    <member><function>PDO::rollBack</function></member>
    <member><link linkend="pdo.transactions">Transacciones y auto-commits</link></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
