<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 288721 $ -->
<!-- EN-Revision: 288721 Maintainer: yago Status: ready -->
<refentry xml:id="function.memcache-delete" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::delete</refname>
  <refpurpose>Elimina un valor del servidor</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Memcache::delete</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>Memcache::delete</function> elimina el valor según la
   <parameter>key</parameter>. Si el parámetro <parameter>timeout</parameter>
   es especificado, el valor expirará después de
   <parameter>timeout</parameter> segundos.
   También se puede usar la función <function>memcache_delete</function>.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       La clave asociada con el valor a eliminar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Tiempo de ejecucción de valor. Si es igual a cero, el valor será 
       eliminado inmediatamente mientras que si es 30, el vaor será eliminado
       en 30 segundos.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>Memcache::delete</function></title>
    <programlisting role="php">
<![CDATA[
<?php

/* API por procesos */
$memcache_obj = memcache_connect('memcache_host', 11211);

/* Después de 10 segundos el valor será eliminado por el servidor */
memcache_delete($memcache_obj, 'key_to_delete', 10);

/* API OO */
$memcache_obj = new Memcache;
$memcache_obj->connect('memcache_host', 11211);

$memcache_obj->delete('key_to_delete', 10);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::set</function></member>
    <member><function>Memcache::replace</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
