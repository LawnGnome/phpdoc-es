<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 288721 $ -->
<!-- EN-Revision: 288721 Maintainer: yago Status: ready -->
<refentry xml:id="function.curl-multi-info-read" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_multi_info_read</refname>
  <refpurpose>Obtiene información de las transferencias en curso</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>curl_multi_info_read</methodname>
   <methodparam><type>resource</type><parameter>mh</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">msgs_in_queue</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
   Pregunta al multi recurso si hay algún mensaje o información de cada una de las transferencias.
   Los mensajes quizá incluyen información como códigos de error de la transferencia o simplemente
   que la transferencia ha sido completada.
  </para>
  <para>   
   Cada vez que se llame a esta función devolverá un nuevo resultado, hasta que se devuelva &false;
   como indicador de que no hay nada más que obtener por el momento. El integer que devuelve
   <parameter>msgs_in_queue</parameter> contendrá el número de mensajes que quedan después de
   que la función sea llamada.
  </para>
  <warning>
   <para>
    Los datos que devuelve el recurso no permanecerán si se llama a la función
    <function>curl_multi_remove_handle</function>.
   </para>
  </warning>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &curl.mh.description;
    <varlistentry>
     <term><parameter>msgs_in_queue</parameter></term>
     <listitem>
      <para>
       Número de mensajes que todavía están en la cola
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si funciona, devuelve un array asociativo como mensaje, si falla devuelve &false;.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.0</entry>
       <entry>
        <parameter>msgs_in_queue</parameter> fue añadido.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_multi_init</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
