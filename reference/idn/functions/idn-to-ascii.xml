<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 301119 Maintainer: yago Status: ready -->
<refentry xml:id="function.idn-to-ascii" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>idn_to_ascii</refname>
  <refpurpose>Convierte un nombre dominio codificado con UTF-8 a ASCII</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>idn_to_ascii</methodname>
   <methodparam><type>string</type><parameter>utf8_domain</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">errorcode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función convierte un nombre de dominio codificado con UTF-8 a ASCII según la especificación IDNA toUnicode().
   Si la entrada no tiene caracteres non-ASCII, la salida estará en la "xn--" ACE notation.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>utf8_domain</parameter></term>
     <listitem>
      <para>
      El nombre de dominio codificado en UTF-8.
        <warning>
         <para>
         Si p.e.j. una cadena codificada en ISO-8859-1 (aka Western Europe latin1) es
         pasada lo convertirá en una cadena de codificación ACE "xn--".
         Sin embargo ¡no es lo que se espera!         
         </para>
        </warning>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>errorcode</parameter></term>
     <listitem>
      <para>
       Estará definido el código de error IDNA.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <!-- See also &return.success; -->
  <para>
    La versión codificada en ACE del nombre de dominio &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si ocurre un error devuelve &false; y se define el errorcode opcional.
   Además se mostrará un E_WARNING.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>idn_to_ascii</function></title>
    <para>
     Primero un ejemplo sencillo y luego una explicación de como capturar errores.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

// Cadena codificada en ISO-8859-1
echo idn_to_ascii(utf8_encode('täst.de')); 

// No se puede convertir un nombre de dominio a ASCII que contiene caracteres non-ASCII pero que ya empieza con "xn--"
$ascii = idn_to_ascii("xn--".chr(0xC3).chr(0xA4), $errorcode);
if ($ascii === false) {
    printf("Error detectado %d: %s\n", $errorcode, idn_strerror($errorcode));
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
xn--tst-qla.de

Error detectado 8: Input already contain ACE prefix (`xn--')
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>utf8_encode</function></member>
    <member><function>idn_strerror</function></member>
    <member><function>idn_to_utf8</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
