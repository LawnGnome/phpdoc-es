<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.2 Maintainer: reven Status: ready -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.14 -->
  <refentry xml:id="function.array-diff-assoc" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_diff_assoc</refname>
    <refpurpose>Comprueba las diferencias entre matrices teniendo en cuenta los &iacute;ndices</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>array</type><methodname>array_diff_assoc</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_diff_assoc</function> devuelve una matriz que contiene 
     todos los valores de <parameter>array1</parameter> que no est&eacute;n 
     presentes en ninguna de las otras matrices que se pasan como argumento.
     Hay que tener en cuenta que las claves de los valores se utilizan en la
     comparaci&oacute;n, a diferencia de <function>array_diff</function>.
    </para>
    <para>
     <example>
      <title>Ejemplo de <function>array_diff_assoc</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array ("a" => "verde", "b" => "negro", "c" => "azul", "rojo");
$array2 = array ("a" => "verde", "amarillo", "rojo");
$result = array_diff_assoc ($array1, $array2);

/* El resultado es:
Array
(
    [b] => negro
    [c] => azul
    [0] => rojo
)
*/
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     En el ejemplo anterior se ve que el par <literal>"a" =&gt; "verde"</literal>
     est&aacute; presente en ambas matrices y por ello no aparece en la matriz
     resultado. Por el contrario, el par <literal>0 =&gt; "rojo"</literal> 
     s&iacute; aparece en el resultado puesto que en el segundo argumento el 
     valor <literal>"red"</literal> tiene la clave <literal>1</literal>. 
    </simpara>
    <simpara>
     Dos valores de pares <emphasis>clave =&gt; valor</emphasis> se consideran 
     iguales si y s&oacute;lo si 
     <literal>(string) $elem1 === (string) $elem2</literal>, es decir, 
     cuando la representaci&oacute;n de cadena es la misma.
     <!-- TODO: example of it... -->
    </simpara>
    <note>
     <simpara>
     Hay que tener en cuenta que esta funci&oacute;n s&oacute;lo comprueba 
     una dimensi&oacute;n de una matriz n-dimensional. Por supuesto, se 
     pueden comprobar dimensiones sucesivas mediante:
     <literal>array_diff_assoc($array1[0], $array2[0]);</literal>.
     </simpara>
    </note>
    <para>
     V&eacute;ase tambi&eacute;n <function>array_diff</function>,
     <function>array_intersect</function>,
     y <function>array_intersect_assoc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
