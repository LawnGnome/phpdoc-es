<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.12 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.12 -->
<refentry xml:id="function.array-merge-recursive" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_merge_recursive</refname>
  <refpurpose>Une dos o más matrices recursivamente</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_merge_recursive</methodname>
   <methodparam><type>array</type><parameter>matriz1</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_merge_recursive</function> une los elementos de una o más
   matrices de modo tal que los valores de cada una sean añadidos al final
   de la matriz previa. Devuelve la matriz resultante.
  </para>
  <para>
   Si las matrices de entrada tienen las mismas claves tipo cadena, entonces
   los valores de estas claves son unidas en una matriz, y esto es hecho
   recursivamente, de modo que si uno de los valores es una matriz misma, la
   función unirá también ésta con la correspondiente entrada de otra matriz.
   Sin embargo, si las matrices tienen la misma clave numérica, el valor más
   cercano al final no sobrescribirá el valor original, sino que será
   añadido al final.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>matriz1</parameter></term>
     <listitem>
      <para>
       Matriz inicial a unir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>matriz</parameter></term>
     <listitem>
      <para>
       Lista variable de matrices a unir recursivamente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Una matriz de valores resultante de la unión de los argumentos.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>array_merge_recursive</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$m1 = array("color" => array("favorito" => "rojo"), 5);
$m2 = array(10, "color" => array("favorito" => "verde", "azul"));
$resultado = array_merge_recursive($m1, $m2);
print_r($resultado);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [color] => Array
        (
            [favorito] => Array
                (
                    [0] => rojo
                    [1] => verde
                )

            [0] => azul
        )

    [0] => 5
    [1] => 10
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_merge</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
