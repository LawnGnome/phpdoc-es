<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: baoengb Status: ready -->
<!-- splitted from ./es/functions/array.xml, last change in rev 1.1 -->
  <refentry xml:id="function.extract" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>extract</refname>
    <refpurpose>
     Importa variables a la tabla de s&iacute;mbolos desde una matriz
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>void</type><methodname>extract</methodname>
     <methodparam><type>array</type><parameter>matriz_vars</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>tipo_extraccion</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>prefijo</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esta funci&oacute;n se utiliza para importar variables desde una matriz
     a la tabla de s&iacute;mbolos actual. Toma la matriz asoiativa
     <parameter>matriz_vars</parameter> y trata las claves como nombres
     de variable y los valores como los valores de &eacute;stas. Para cada
     par clave/valor crear&aacute; una variable en la tabla de s&iacute;mbolos actual,
     sujeto a los par&aacute;metros <parameter>tipo_extraccion</parameter> y
     <parameter>prefijo</parameter>.
    </para>
    <note>
     <para>
      Empezando de la versi&oacute;n 4.0.5, esta funci&oacute;n regresa el 
      n&uacute;mero de variables extra&iacute;das.
     </para>
    </note>
    <note>
     <para>
      <constant>EXTR_IF_EXISTS</constant> y 
      <constant>EXTR_PREFIX_IF_EXISTS</constant> fueron introducidas en la 
      versi&oacute;n 4.2.0.
     </para>
    </note>
    <note>
     <para>
      <constant>EXTR_REFS</constant> fue introducida en la versi&oacute;n 4.3.0.
     </para>
    </note>
    <para>
     <function>extract</function> controla las colisiones con las
     variables que ya existen. La forma de tratar &eacute;stas se determina
     por el <parameter>tipo_extraccion</parameter>. Puede tener &uacute;nicamente
     uno de los siguientes valores:
     <variablelist>
      <varlistentry>
       <term>EXTR_OVERWRITE</term>
       <listitem>
	      <simpara>
	       Si hay colisi&oacute;n, sobreescribe la variable existente.
	      </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_SKIP</term>
       <listitem>
	      <simpara>
	       Si hay colisi&oacute;n, no sobreescribas la variable existente.
	      </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_PREFIX_SAME</term>
       <listitem>
	      <simpara>Si hay una colisi&oacute;n, a&ntilde;ade el <parameter>prefijo</parameter>
	       a la nueva variable.
	      </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>EXTR_PREFIX_ALL</term>
       <listitem>
	      <simpara>
	       A&ntilde;ade el <parameter>prefijo</parameter> a todas las variables.
	      </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_PREFIX_INVALID</constant></term>
       <listitem>
        <simpara>
         Solo agrega el <parameter>prefijo</parameter> a nombres de variables 
         invalidas/num&eacute;ricas. Este fue agregado en PHP 4.0.5. 
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_IF_EXISTS</constant></term>
       <listitem>
        <simpara>
         Solo sobreescribe la variable si ya existe en la tabla de s&iacute;mbolos 
         actual, de otra manera no hace nada. Esto es &uacute;til para definir
         una lista de variables validas y entonces extraer solo aquellas variables
         que esten definidas fuera de $_REQUEST por ejemplo. Esta bandera
         fue agregada en PHP 4.2.0.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_PREFIX_IF_EXISTS</constant></term>
       <listitem>
        <simpara>
         Solo crea los nombres de variables con el prefijo si la versi&oacute;n
         de la variable sin prefijo existe en la tabla de s&iacute;mbolos. Esta
         bandera fue agregada en PHP 4.2.0.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_REFS</constant></term>
       <listitem>
        <simpara>
         Extrae las variables como referencias. Esto efectivamente significa
         que los valores de las variables importadas est&aacute;n a&uacute;n 
         referenciando a los valores del par&aacute;metro 
         <parameter>matriz_var</parameter>. Puede usar esta bandera por s&iacute;
         sola o combinada con cualquier otra bandera haciendo (OR) el 
         par&aacute;metro <parameter>tipo_extraccion</parameter>. Esta bandera
         fue agregada en PHP 4.3.0. 
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     Si no se especifica <parameter>tipo_extraccion</parameter>, se asume que
     vale EXTR_OVERWRITE.
    </para>
    <para>
     N&oacute;tese que el <parameter>prefijo</parameter> s&oacute;lo se necesita
     si <parameter>tipo_extraccion</parameter> vale 
     <constant>EXTR_PREFIX_SAME</constant>, <constant>EXTR_PREFIX_ALL</constant>, 
     <constant>EXTR_PREFIX_INVALID</constant> o 
     <constant>EXTR_PREFIX_IF_EXISTS</constant>. Si el resultado con prefijo no 
     es un nombre de variable valido, no es importado en la tabla de 
     s&iacute;mbolos.
    </para>
    <para>
     <function>extract</function> regresa el n&uacute;mero de variables
     exitosamente importadas en la tabla de s&iacute;mbolos.
    </para>
    <warning>
     <para>
      No use <function>extract</function> en datos no confiables, como 
      entradas de usuario ($_GET, ...). pero si lo hace, por ejemplo, si quiere
      correr codigo anterior que conf&iacute;a temporalmente en 
      <link linkend="security.globals">register_globals</link>,
      asegurese de que usa una de los valores de no-sobreescribir del 
      par&aacute;metro <parameter>tipo_extraccion</parameter> tales como
      <constant>EXTR_SKIP</constant> y asegurese de extrar las variables 
      <varname>$_SERVER</varname>, <varname>$_SESSION</varname>,
      <varname>$_COOKIE</varname>, <varname>$_POST</varname> y
      <varname>$_GET</varname> ese orden.
     </para>
    </warning>
    <para>
     Un uso posible para extract ser&iacute;a importar en la tabla de 
     s&iacute;mbolos las variables contenidas en la matriz asociativa que 
     devuelve <function>wddx_deserialize</function>.
    </para>
    <para>
     <example>
      <title>Ejemplo de <function>extract</function></title>
      <programlisting role="php">
<![CDATA[
<?php

/* Suponemos que $matriz_var es una matriz devuelta por 
   wddx_deserialize */

$tamano = "grande";
$matriz_var = array ("color" => "azul",
                    "tamano"  => "media",
                    "forma" => "esfera");
extract ($matriz_var, EXTR_PREFIX_SAME, "wddx");

print "$color, $tamano, $forma, $wddx_tamano\n";

?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
azul, grande, esfera, media
]]>
      </screen>
     </example>
    </para>
    <para>
     La variable <varname>$tamano</varname> no fue sobreescrita porque 
     especificamos <constant>EXTR_PREFIX_SAME</constant>, que provoc&oacute; 
     la creaci&oacute;n de <varname>$wddx_tamano</varname>. Si se hubiera 
     especificado <constant>EXTR_SKIP</constant>, <varname>$wddx_tamano</varname> 
     ni siquiera habr&iacute;a sido creada. 
     <constant>EXTR_OVERWRITE</constant> habr&iacute;a provocado que 
     <varname>$tamano</varname> tuviera el valor "media", y 
     <constant>EXTR_PREFIX_ALL</constant> habr&iacute;a provocado que
     aparecieran nuevas variables llamadas <varname>$wddx_color</varname>, 
     <varname>$wddx_tamano</varname>,
     y <varname>$wddx_forma</varname>.
    </para>
    <para>
     Debe usar matrices asociativas, las matrices num&eacute;ricamente indexadas
     no producir&aacute;n resultados a menos que use 
     <constant>EXTR_PREFIX_ALL</constant> o <constant>EXTR_PREFIX_INVALID</constant>.
    </para>
    <para>
     Vea tambi&eacute;n <function>compact</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
