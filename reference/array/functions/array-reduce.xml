<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.9 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.2 -->
  <refentry id="function.array-reduce">
   <refnamediv>
    <refname>array_reduce</refname>
    <refpurpose>
    Reduce iterativamente una matriz a un solo valor usando una
    funci&oacute;n llamada de retorno
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>mixed</type><methodname>array_reduce</methodname>
      <methodparam><type>array</type><parameter>entrada</parameter></methodparam>
      <methodparam><type>callback</type><parameter>funcion</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>inicial</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_reduce</function> aplica iterativamente la
     funci&oacute;n <parameter>funcion</parameter> a los elementos de
     la matriz <parameter>entrada</parameter>, con el prop&oacute;sito
     de reducir la matriz a un solo valor. Si el argumento opcional
     <parameter>inicial</parameter> est&aacute; disponible,
     &eacute;ste ser&aacute; usado al inicio del proceso, o como
     resultado final en caso de que la matriz est&aacute;
     vac&iacute;a. Si la matriz est&aacute; vac&iacute;a y no se pasa
     el par&aacute;metro <parameter>inicial</parameter>,
     <function>array_reduce</function> devuelve &null;.
    </para>
    <para>
     <example>
      <title>Ejemplo de <function>array_reduce</function></title>
      <programlisting role="php">
<![CDATA[
<?php
function rsum($v, $w)
{
    $v += $w;
    return $v;
}

function rmul($v, $w)
{
    $v *= $w;
    return $v;
}

$a = array(1, 2, 3, 4, 5);
$x = array();
$b = array_reduce($a, "rsum");
$c = array_reduce($a, "rmul", 10);
$d = array_reduce($x, "rsum", 1);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Este ejemplo resultar&aacute; en <varname>$b</varname>
     conteniendo el valor <literal>15</literal>, <varname>$c</varname>
     conteniendo <literal>1200</literal> (= 10*1*2*3*4*5), y
     <varname>$d</varname> conteniendo <literal>1</literal>.
    </para>
    <para>
     Vea tambi&eacute;n <function>array_filter</function>,
     <function>array_map</function>,
     <function>array_unique</function>, y
     <function>array_count_values</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
