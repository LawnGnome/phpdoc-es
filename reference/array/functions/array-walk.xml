<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 297028 $ -->
<!-- EN-Revision: 297028 Maintainer: seros Status: ready -->
<refentry xml:id="function.array-walk" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk</refname>
  <refpurpose>Aplicar una función de usuario a cada miembro de un array</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_walk</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>callback</type><parameter>funcname</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>userdata</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Aplica la función definida por el usuario dada por <parameter>funcname</parameter> a cada
   elemento del array dado por <parameter>array</parameter>.
  </simpara>
  <para>
   <function>array_walk</function> no le afecta el puntero de arrays
   interno de <parameter>array</parameter>. <function>array_walk</function>
   recorrerá el array completo sin tener en cuenta la posición del puntero.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       El array de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>funcname</parameter></term>
     <listitem>
      <para>
       Normalmente, <parameter>funcname</parameter> asume dos parámetros.
       El primero, los valores de los parámetros de <parameter>array</parameter>, y el segundo
       la clave/índice.
      </para>
      <note>
       <para>
        Si <parameter>funcname</parameter> necesita trabajar con los
        valores reales del array, especifique el primer parámetro de
        <parameter>funcname</parameter> como una
        <link linkend="language.references">referencia</link>. Así,
        cualquier cambio hecho a esos elementos serán hechos al mismo
        array original.
       </para>
      </note>
      <para>
       Los usuarios no pueden cambiar el <parameter>array</parameter> mismo desde la
       función de llamada de retorno, p.ej. añadir/borrar elementos, destruir elementos, etc. Si
       el array al que se aplica <function>array_walk</function> es cambiado,
       el comportamiento de esta función será indefinido e impredecible.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>userdata</parameter></term>
     <listitem>
      <para>
       Si se proporciona el parámetro opcional <parameter>userdata</parameter>, éste
       será pasado como el tercer parámetro de la función de llamada de retorno dada por
       <parameter>funcname</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si la función <parameter>funcname</parameter> requiere más parámetros que
   los dados, se generará un error de nivel <link linkend="errorfunc.constants">
   E_WARNING</link> cada vez que <function>array_walk</function>
   llame a <parameter>funcname</parameter>. Estas advertencias pueden ser suprimidas
   añadiendo al inicio el operador de error de PHP
   <link linkend="language.operators.errorcontrol">@</link> en la llamada a
   <function>array_walk</function>, o usando
   <function>error_reporting</function>.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>array_walk</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$frutas = array("d" => "limón", "a" => "naranja", "b" => "banana", "c" => "manzana");

function test_alter(&$elemento1, $clave, $prefijo)
{
    $elemento1 = "$prefijo: $elemento1";
}

function test_print($elemento2, $clave)
{
    echo "$clave. $elemento2<br />\n";
}

echo "Antes ...:\n";
array_walk($frutas, 'test_print');

array_walk($frutas, 'test_alter', 'fruta');
echo "... y después:\n";

array_walk($frutas, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Antes ...:
d. limón
a. naranja
b. banana
c. manzana
... y después:
d. fruta: limón
a. fruta: naranja
b. fruta: banana
c. fruta: manzana
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk_recursive</function></member>
    <member><function>iterator_apply</function></member>
    <member><function>create_function</function></member>
    <member><function>list</function></member>
    <member><function>each</function></member>
    <member><function>call_user_func_array</function></member>
    <member><function>array_map</function></member>
    <member>&seealso.callback;</member>
    <member>&foreach;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
