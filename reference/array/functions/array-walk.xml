<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: baoengb Status: ready -->
<!-- splitted from ./es/functions/array.xml, last change in rev 1.1 -->
  <refentry xml:id="function.array-walk" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_walk</refname>
    <refpurpose>
     Aplica una función del usuario a cada elemento de una matriz.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
     <methodsynopsis>
     <type>int</type><methodname>array_walk</methodname>
     <methodparam><type>array</type><parameter role="reference">matriz</parameter></methodparam>
     <methodparam><type>string</type><parameter>func</parameter></methodparam>
     <methodparam choice="opt"><type>mixed</type><parameter>datosvarios</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     &return.success;
    </simpara>
    <simpara>
     Aplica la función llamada <parameter>func</parameter> a cada elemento de 
     la <parameter>matriz</parameter>. La función 
     <parameter>func</parameter> recibirá el valor de la matriz como primer
     parámetro y la clave como segundo. Si se proporciona el
     parámetro <parameter>datosvarios</parameter> ser&aacute; pasado como
     tercer parámetro a la función de usuario.
    </simpara>
    <simpara>
     Si <parameter>func</parameter> necesita más de dos o 3 argumentos,
     dependiendo de <parameter>datosvarios</parameter>, se generará un
     aviso cada vez que <function>array_walk</function> llama a
     <parameter>func</parameter>. Estos avisos pueden suprimirse si
     se pone 
     <link linkend="language.operators.errorcontrol">@</link> antes de la 
     llamada a <function>array_walk</function>,
     o usando la función <function>error_reporting</function>.
    </simpara>
    <note>
     <para>
      Si <parameter>func</parameter> precisa trabajar con los valores
      reales de la matriz, especifique que el valor del primer parámetro
      de <parameter>func</parameter> debe pasarse por referencia. Desde ese
      instante, los cambios realizados sobre dichos elementos también serán
      realizados en la propia matriz.
     </para>
    </note>
    <note>
     <para>
      El pasar la clave y los datos de usuario a <parameter>func</parameter> 
      fue una característica añadida en PHP 4.0.0
     </para>
    </note>
    <para>
     <function>array_walk</function> no es afectado por el apuntador interno 
     del parámetro <parameter>matriz</parameter>. 
     <function>array_walk</function> avanzará por toda la matriz sin 
     importar la posición del apuntador. Para reinicializar el apuntador,
     use <function>reset</function>. en PHP 3, <function>array_walk</function> 
     reinicializa el apuntador.
    </para>
    <para>
     No se debe cambiar la matriz desde la llamada a la función, ej. 
     agregar/borrar elementos, vaciar elementos, etc. si la matriz que está 
     siendo usada por <function>array_walk</function> cambia, el comportamiento
     de esta función será indefinido e impredecible.
    </para>
    <para>
     <example>
      <title>Ejemplo de <function>array_walk</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$frutas = array ("d"=>"limon", "a"=>"naranja", "b"=>"platano", "c"=>"manzana");

function test_alterar ($item1, $clave, $prefix) {
   $item1 = "$prefix: $item1";
}

function test_ver ($item2, $clave) {
   echo "$clave. $item2<br />\n";
}

echo "Antes...:\n";
array_walk ($frutas, 'test_ver');

array_walk ($frutas, 'test_alterar', 'fruta');
echo "...y despues:\n";

array_walk ($frutas, 'test_ver');
?>
]]>
      </programlisting>
      &example.outputs;
      <screen role="php">
<![CDATA[
Antes...:
d. limon
a. naranja
b. platano
c. manzana
...y despues:
d. fruta: limon
a. fruta: naranja
b. fruta: platano
c. fruta: manzana
]]>
      </screen>
     </example>
    </para>
    <simpara>
     Vea también <function>array_walk_recursive</function>,
     <function>create_function</function>,
     <function>list</function>,
     <link linkend="control-structures.foreach">foreach</link>, 
     <function>each</function>,
     <function>call_user_func_array</function>, 
     <function>array_map</function>,
     &seealso.callback;.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
