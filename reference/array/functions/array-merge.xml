<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.18 Maintainer: baoengb Status: ready -->
<!-- splitted from ./es/functions/array.xml, last change in rev 1.1 -->
  <refentry xml:id="function.array-merge" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_merge</refname>
    <refpurpose>Combina dos o m&aacute;s matrices</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>array</type><methodname>array_merge</methodname>
     <methodparam><type>array</type><parameter>matriz1</parameter></methodparam>
     <methodparam choice="opt"><type>array</type><parameter>matriz2</parameter></methodparam>
     <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_merge</function> combina los elementos de dos o
     m&aacute;s matrices conjuntamente de modo que los valores de una son
     agregados al final de los valores de la anterior. Devuelve la 
     matriz resultante.
    </para>
    <para>
     Si las matrices de entrada tienen las mismas claves de cadena,
     el &uacute;ltimo valor para cada clave reemplazar&aacute; el valor previo de 
     la misma. Si, por el contrario, las matrices tienen la misma clave
     num&eacute;rica, esto no pasa y los valores son simplemente agregados.
    </para>
    <para>
     Si s&oacute;lo se da una matriz, y si tiene &iacute;ndices num&eacute;ricos,
     los &iacute;ndices son reacomodados. Para matrices asociativas, los 
     elementos duplicados se combinar&aacute;n en el &uacute;ltimo. Vea 
     el ejemplo tres para m&aacute;s detalles.
    </para>
    <para>
     <example>
      <title>Ejemplo de <function>array_merge</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array("color" => "red", 2, 4);
$array2 = array("a", "b", "color" => "green", "shape" => "trapezoid", 4);
$result = array_merge($array1, $array2);
print_r($result);
?>
]]>
      </programlisting>
      &example.outputs;
      <screen role="php">
<![CDATA[
Array
(
    [color] => green
    [0] => 2
    [1] => 4
    [2] => a
    [3] => b
    [shape] => trapezoid
    [4] => 4
)
]]>
      </screen>
     </example>
    </para>
    <para>
     <example>
      <title>Ejemplo simple de <function>array_merge</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "data");
$result = array_merge($array1, $array2);
?>
]]>
      </programlisting>
      <para>
       No olvide que los &iacute;ndices num&eacute;ricos ser&aacute;n reenumerados
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [0] => data
)
]]>
      </screen>
      <para>
       Si quiere preservar completamente las matrices y solo quiere agregarlos 
       unos a otros, use el operador <literal>+</literal> :
      </para>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "data");
$result = $array1 + $array2;
?>
]]>
      </programlisting>
      <para>
       Los &iacute;ndices num&eacute;ricos son preservados y por lo tanto
       la asocuaci&oacute;n permanece.
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [1] => data
)
]]>
      </screen>
     </example>
    </para>
    <warning>
     <para>
      El comportamient de <function>array_merge</function> fue modificado en
      PHP 5. A diferencia de PHP 4, la funci&oacute;n <function>array_merge</function>
      ahora acepta solo par&aacute;metros de tipo <type>array</type>. Sin 
      embargo, puede usar forzado de tipos para convertir otros tipos.
      Vea el siguiente ejemplo para m&aacute;s detalles.
     </para>
     <para>
      <example>
       <title>Ejemplo PHP 5 <function>array_merge</function></title>
       <programlisting role="php">
<![CDATA[
<?php
$beginning = 'foo';
$end = array(1 => 'bar');
$result = array_merge((array)$beginning, (array)$end);
print_r($result);
?>
]]>
       </programlisting>
       &example.outputs;
       <screen role="php">
<![CDATA[
Array
(
    [0] => foo
    [1] => bar
)
]]>
       </screen>
      </example>
     </para>
    </warning>
    <para>
     Vea tambi&eacute;n 
     <function>array_merge_recursive</function>,
     <function>array_combine</function>,
     <link linkend="language.operators.array">array operators</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
