<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.27 Maintainer: lboshell Status: ready -->
<refentry xml:id="function.usort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>usort</refname>
  <refpurpose>Ordena una matriz por sus valores usando una función de
  comparación definida por el usuario</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>usort</methodname>
   <methodparam><type>array</type><parameter role="reference">matriz</parameter></methodparam>
   <methodparam><type>callback</type><parameter>funcion_comp</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función ordenará una matriz por sus valores usando una función de
   comparación definida por el usuario. Si la matriz que desea ordenar
   necesita ser ordenada mediante ciertos criterios especiales, es buena
   idea usar esta función.
  </para>
  <note>
   <para>
    Si dos miembros son comparados como iguales, su orden en la matriz
    resultante es indefinido.
   </para>
  </note>
  &note.no-key-association;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>matriz</parameter></term>
     <listitem>
      <para>
       La matriz de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>funcion_comp</parameter></term>
     <listitem>
      <para>
       La función de comparación debe devolver un entero menor que, igual, o
       mayor que cero si el primer argumento es considerado menor, igual, o
       mayor que el segundo, respectivamente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Se introdujo un nuevo algoritmo. La función
        <parameter>funcion_comp</parameter> no mantiene el orden original
        para los elementos que son comparados como iguales.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>usort</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function cmp($a, $b)
{
    if ($a == $b) {
        return 0;
    }
    return ($a < $b) ? -1 : 1;
}

$a = array(3, 2, 5, 6, 1);

usort($a, "cmp");

foreach ($a as $clave => $valor) {
    echo "$clave: $valor\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
0: 1
1: 2
2: 3
3: 5
4: 6
]]>
    </screen>
   </example>
  </para>
  <note>
   <para>
    Obviamente en este ejemplo trivial, la función <function>sort</function>
    sería más apropiada.
   </para>
  </note>
  <para>
   <example>
    <title>
     Ejemplo de <function>usort</function> usando una matriz
     multi-dimensional
    </title>
    <programlisting role="php">
<![CDATA[
<?php
function cmp($a, $b)
{
    return strcmp($a["fruta"], $b["fruta"]);
}

$frutas[0]["fruta"] = "limones";
$frutas[1]["fruta"] = "bananos";
$frutas[2]["fruta"] = "granadillas";

usort($frutas, "cmp");

while (list($clave, $valor) = each($frutas)) {
    echo "\$frutas[$clave]: " . $valor["fruta"] . "\n";
}
?>
]]>
    </programlisting>
    <para>
     Cuando se ordena una matriz multi-dimensional, <varname>$a</varname> y
     <varname>$b</varname> contienen referencias al primer índice de la
     matriz.
    </para>
    &example.outputs;
    <screen>
<![CDATA[
$frutas[0]: bananos
$frutas[1]: granadillas
$frutas[2]: limones
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>
     Ejemplo de <function>usort</function> usando una función miembro de un
     objeto
    </title>
    <programlisting role="php">
<![CDATA[
<?php
class ObjPrueba {
    var $nombre;

    function ObjPrueba($nombre)
    {
        $this->nombre = $nombre;
    }

    /* Esta es la función estática de comparación: */
    static function cmp_obj($a, $b)
    {
        $al = strtolower($a->nombre);
        $bl = strtolower($b->nombre);
        if ($al == $bl) {
            return 0;
        }
        return ($al > $bl) ? +1 : -1;
    }
}

$a[] = new ObjPrueba("c");
$a[] = new ObjPrueba("b");
$a[] = new ObjPrueba("d");

usort($a, array("ObjPrueba", "cmp_obj"));

foreach ($a as $item) {
    echo $item->nombre . "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
b
c
d
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>uasort</function></member>
    <member><function>uksort</function></member>
    <member><function>sort</function></member>
    <member><function>asort</function></member>
    <member><function>arsort</function></member>
    <member><function>ksort</function></member>
    <member><function>natsort</function></member>
    <member><function>rsort</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
