<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.2 Maintainer: baoengb Status: ready -->
  <refentry xml:id="function.array-intersect-ukey" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_intersect_ukey</refname>
    <refpurpose>Calcula la intersecci&oacute; de matrices usando una
    funci&oacute;n de usuario para la comparaci&oacute;n de los &iacute;ndices</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>array</type><methodname>array_intersect_ukey</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
      <methodparam><type>callback</type><parameter>key_compare_func</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_intersect_ukey</function> regresa una matriz que contiene
     todos los valores de <parameter>array1</parameter> los cuales tienen 
     &iacute;ndices que est&aacute;n presentes en todos los argumentos.
    </para>
    <para>
     Esta comparaci&oacute;n es hecha por una funci&oacute;n del usuario. 
     La cual debe regresar un entero menor que, igual a, o mayor que cero 
     si el primer &iacute;ndice es considerado ser menor que, igual a o mayor que 
     el segundo, respectivamente.
    </para>
    <para>
     <example>
      <title>Ejemplo <function>array_intersect_ukey</function></title>
      <programlisting role="php">
<![CDATA[
<?php
function key_compare_func($key1, $key2)
{
    if ($key1 == $key2)
        return 0;
    else if ($key1 > $key2)
        return 1;
    else
        return -1;
}

$array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);
$array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);

var_dump(array_intersect_ukey($array1, $array2, 'key_compare_func'));
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
array(2) {
  ["blue"]=>
  int(1)
  ["green"]=>
  int(3)
})
]]>
      </screen>
     </example>
    </para>
    <para>
     En nuestro ejemplo ve que solo los &iacute;ndices <literal>'blue'</literal>
     y <literal>'green'</literal> est&aacute;n presentes en ambas matrices y 
     por lo tanto son regresados. Tambi&eacute;n note los valores de los 
     &iacute;ndices <literal>'blue'</literal> y <literal>'green'</literal>
     son diferentes entre las dos matrices. A&uacute;n as&iacute; coinciden 
     porque solo los &iacute;ndices son checados. Los valores regresados son
     los de <parameter>array1</parameter>.
    </para>
    <para>
     Los dos &iacute;ndices del par <literal>key =&gt; value</literal> son
     considerados igual solo si 
     <literal>(string) $key1 === (string) $key2 </literal>. En otras palabras
     se hace un chequeo estricto de tipo, de tal manera que la representaci&oacute;n
     de la cadena sea la misma.
    </para>
    <para>
     Vea tambi&eacute;n: <function>array_diff</function>,
     <function>array_udiff</function>
     <function>array_diff_assoc</function>,
     <function>array_diff_uassoc</function>,
     <function>array_udiff_assoc</function>,
     <function>array_udiff_uassoc</function>,
     <function>array_diff_key</function>,
     <function>array_diff_ukey</function>,
     <function>array_intersect</function>,
     <function>array_intersect_assoc</function>,
     <function>array_intersect_uassoc</function> y 
     <function>array_intersect_key</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
