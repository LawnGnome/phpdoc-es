<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 301530 Maintainer: yago Status: ready -->
<refentry xml:id="function.array-unique" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_unique</refname>
  <refpurpose>Elimina valores duplicados de un array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_unique</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sort_flags</parameter><initializer>SORT_STRING</initializer></methodparam>
  </methodsynopsis>
  <para>
   Toma un <parameter>array</parameter> y devuelve un nuevo array
   sin valores duplicados.
  </para>
  <para>
   Nótese que se conservan las claves. <function>array_unique</function> ordena
   los valores tratándolos como cadenas, manteniendo la primera clave encontrada
   por cada valor e ignorando las demás claves. Esto no significa
   que será mantenida la clave relacionada con el primer valor encontrado del
   <parameter>array</parameter> no ordenado.
  </para>
  <note>
   <simpara>
    Dos elementos son considerados iguales solo si
    <literal>(string) $elem1 === (string) $elem2</literal>. En otras palabras:
    cuando la representación en formato cadena es la misma.
   </simpara>
   <simpara>
    El primer elemento a ser usado.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       El array de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sort_flags</parameter></term>
     <listitem>
      <para>
       El segundo parámetro opcional <parameter>sort_flags</parameter>
       puede ser usado para modificar el tipo de orden usando estos valores:
      </para>
      <para>
       Flags de tipos de orden:
       <itemizedlist>
        <listitem>
         <simpara><constant>SORT_REGULAR</constant> - compara ítems normalmente
         (no cambia los tipos)</simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_NUMERIC</constant> - compara ítems numéricamente</simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_STRING</constant> - compara ítems como cadenas</simpara>
        </listitem>
        <listitem>
         <simpara><constant>SORT_LOCALE_STRING</constant> - compara ítems como
          cadenas, basados en la localización actual.
          <!--
          FIXME: PHP_6
          Before PHP 6, it uses the system locale, which can be changed using
          <function>setlocale</function>. Since PHP 6, you must use the
          <function>i18n_loc_set_default</function> function.
          -->
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el array filtrado.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.9</entry>
       <entry>
        Añadido el parámetro opcional <parameter>sort_flags</parameter> con el
        valor por defecto SORT_REGULAR. Antes de 5.2.9, esta función era usada para ordenar
        el array con SORT_STRING internamente.
       </entry>
      </row>
      <row>
       <entry>5.2.10</entry>
       <entry>
        Cambiado el valor por defecto de <parameter>sort_flags</parameter> a
        SORT_STRING.
       </entry>
      </row>
      <row>
       <entry>5.0.2</entry>
       <entry>
        <parameter>sort_flags</parameter> ahora acepta
        <constant>SORT_LOCALE_STRING</constant>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>array_unique</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array("a" => "verde", "rojo", "b" => "verde", "azul", "rojo");
$result = array_unique($input);
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [a] => verde
    [0] => rojo
    [1] => azul
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>array_unique</function> y tipos</title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array(4, "4", "3", 4, 3, "3");
$result = array_unique($input);
var_dump($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
array(2) {
  [0] => int(4)
  [2] => string(1) "3"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Nótese que <function>array_unique</function> no está pensado
    para funcionar en arrays multi-dimensionales.
   </simpara>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
