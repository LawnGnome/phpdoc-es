<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yago Status: ready -->
<refentry xml:id="function.array-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_replace</refname>
  <refpurpose>Remplaza los elementos de los arrays pasados en el primer array</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_replace</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">array1</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_replace</function> reemplaza los valores del primer
   <parameter>array</parameter> con los mismos valores de todos los siguientes
   arrays. Si la clave del primer array existe en el segundo array, su valor
   será reemplazado por el valor del segundo array. Si la clave existe en el
   segundo array y no en el primero, será creado en el primer array.
   Si la clave sólo existe en el primer array, se dejará como está.
   Si varios array son pasados para ser reemplazados, se procederá
   en orden, Los arrays posteriores sobreescribirán los valores anteriores.
  </para>
  <para>
   <function>array_replace</function> no es recursivo: reemplazará
   valores en el primer array por el tipo que sea en el segundo array.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       El array cuyos elementos son reemplazados.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>array1</parameter></term>
     <listitem>
      <para>
       El array del cual se extraerán los elementos. 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un <type>array</type>, o &null; en caso de error.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>array_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$base = array("orange", "banana", "apple", "raspberry");
$replacements = array(0 => "pineapple", 4 => "cherry");
$replacements2 = array(0 => "grape");

$basket = array_replace($base, $replacements, $replacements2);
print_r($basket);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [0] => grape
    [1] => banana
    [2] => apple
    [3] => raspberry
    [4] => cherry
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_replace_recursive</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
