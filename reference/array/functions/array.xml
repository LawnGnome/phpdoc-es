<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.12 Maintainer: baoengb Status: ready -->
<!-- splitted from ./es/functions/array.xml, last change in rev 1.1 -->
  <refentry id="function.array">
   <refnamediv>
    <refname>array</refname>
    <refpurpose>
     Crear una matriz
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
     <type>array</type><methodname>array</methodname>
     <methodparam rep="repeat"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Devuelve una matriz con los par&aacute;metros que se le pasan. A dichos 
     par&aacute;metros se les puede dar un &iacute;ndice usando el operador 
     <literal>=&gt;</literal>. Lea la secci&oacute;n sobre los 
     <link linkend="language.types.array">tipos de matrices</link> para m&aacute;s
     informaci&oacute;n sobre matrices.
     <note>
      <para>
       <function>array</function> es una construcci&oacute;n del lenguaje que se 
       utiliza para representar matrices literales, no una funci&oacute;n regular.
      </para>
     </note>
    </para>
    <para>
     La forma "&iacute;ndice =&gt; valor" separada por comas, define &iacute;ndices 
     y valores. el &iacute;ndice puede ser de tipo cadena o num&eacute;rico. 
     Cuando el &iacute;ndice es omitido, se genera autom&aacute;ticamente un 
     &iacute;ndice num&eacute;rico, empezando en cero. Si el &iacute;ndice es 
     un entero, el siguiente &iacute;ndice generado ser&aacute; igual al &iacute;ndice
     con n&uacute;mero mayor + 1. Note que cuando se definen dos &iacute;ndices 
     id&eacute;nticos, el &uacute;ltimo sobre escribe al primero.
    </para>
    <para>
     Tener una coma despu&eacute;s del &uacute;ltimo elemento de la matriz, aunque
     inusual, es sint&aacute;cticamente valido.
    </para>
    <para>
     El siguiente ejemplo demuestra c&oacute;mo crear una matriz 
     bidimensional, c&oacute;mo especificar claves para matrices
     asociativas, y c&oacute;mo especificar &iacute;ndices no consecutivos
     en matrices normales.
     <example>
      <title>Ejemplo de <function>array</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$frutas = array (
    "frutas"  => array("a"=>"naranja", "b"=>"pl&aacute;tano", "c"=>"manzana"),
    "n&uacute;meros" => array(1, 2, 3, 4, 5, 6),
    "hoyos"   => array("primero", 5 => "segundo", "tercero")
);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>&Iacute;ndice autom&aacute;tico con <function>array</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array = array(1, 1, 1, 1,  1, 8 => 1,  4 => 1, 19, 3 => 13);
print_r($array);
?>
]]>
      </programlisting>
      <para>
       Desplegar&aacute;:
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
]]>
      </screen>
     </example>
    </para>
    <para>
     Note que el &iacute;ndice '3' es definido dos veces, y permanece su valor 
     final de '13'. El &iacute;ndice 4 es definido depu&eacute;s del &iacute;ndice
     8, y en seguida se genera el &iacute;ndice 9 (para el valor 19), porque 
     el &iacute;ndice mayor era 8.
    </para>
    <para>
     Este ejemplo crea una matriz en donde los &iacute;ndices inician en 1. 
     <example>
      <title>&Iacute;ndice base 1 con <function>array</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$primercuarto = array(1 => 'Enero', 'Febrero', 'Marzo');
print_r($primercuarto);
?>
]]>
      </programlisting>
      <para>
       Desplegar&aacute;:
      </para>
      <screen>
<![CDATA[
Array
(
    [1] => Enero
    [2] => Febrero
    [3] => Marzo
)
]]>
      </screen>
     </example>
    </para>
    <para>
     Como en Perl, puede accesar un valor de la matriz desde dentro de una 
     cadena contenida en dobles comillas. Sin embargo, con PHP necesitar&aacute; 
     encerrar la matriz entre las llaves curvas.
     <example>
      <title>Accesando una matriz dentro de una cadena</title>
      <programlisting role="php">
<![CDATA[
<?php

$foo = array('bar' => 'baz');
echo "Hello {$foo['bar']}!"; // Hello baz!

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Vea tambi&eacute;n <function>array_pad</function>,
     <function>list</function>,
     <function>count</function>,
     <link linkend="control-structures.foreach">foreach</link>,  
     <function>range</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
