<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: gustavo Status: ready -->
  <refentry xml:id="function.array-intersect-assoc" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_intersect_assoc</refname>
    <refpurpose>Calcula la intersecci&oacute;n de matrices verificando que
    tambi&eacute;n coincidan los &iacute;ndices</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>array</type><methodname>array_intersect_assoc</methodname>
      <methodparam><type>array</type><parameter>matriz1</parameter></methodparam>
      <methodparam><type>array</type><parameter>matriz2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>array_intersect_assoc</function> devuelve una matriz
     que contiene todos los valores de la <parameter>matriz1</parameter>
     que est&aacute;n presentes en todos los argumentos. N&oacute;tese que
     las claves son consideradas en la comparaci&oacute;n, a diferencia de
     <function>array_intersect</function>.
    </simpara>
    <para>
     <example>
      <title>Ejemplo de <function>array_intersect_assoc</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$matriz1 = array("a" => "verde", "b" => "marron", "c" => "azul", "rojo");
$matriz2 = array("a" => "verde", "amarillo", "rojo");
$matriz_resultante = array_intersect_assoc($matriz1, $matriz2);
?>
]]>
      </programlisting>
      <para>
       $matriz_resultante lucir&iacute;a como:
      </para>
      <screen>
<![CDATA[
Array
(
    [a] => verde
)
]]>
      </screen>
     </example>
    </para>
    <simpara>
     En nuestro ejemplo usted ve que s&oacute;lo el par <literal>"a" =&gt;
     "verde"</literal> est&aacute; presente en ambas matrices, y por lo
     tanto es devuelto. El valor <literal>"rojo"</literal> no es devuelto
     porque en <varname>$matriz1</varname> su clave es <literal>0</literal>
     mientras que la clave de "rojo" en <varname>$matriz2</varname> es 
     <literal>1</literal>.
    </simpara>
    <simpara>
     Los dos valores de los pares <literal>clave =&gt; valor</literal> son
     considerados iguales s&oacute;lo si 
     <literal>(string) $elem1 === (string) $elem2 </literal>. En otras
     palabras, se lleva a cabo una estricta verificaci&oacute;n del
     tipo de manera que la representaci&oacute;n de la cadena debe ser
     la misma. 
     <!-- TODO: example of it... -->
    </simpara>
    <simpara>
     V&eacute;ase tambi&eacute;n <function>array_intersect</function>,
     <function>array_uintersect_assoc</function>,
     <function>array_intersect_uassoc</function>,
     <function>array_uintersect_uassoc</function>,
     <function>array_diff</function> and
     <function>array_diff_assoc</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
