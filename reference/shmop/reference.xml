<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.14 Maintainer: javi Status: ready -->
<reference xml:id="ref.shmop" xmlns="http://docbook.org/ns/docbook">
  <title>Funciones de Memoria Compartida</title>
  <titleabbrev>shmop</titleabbrev>

  <partintro>
   <section xml:id="shmop.intro">
    &reftitle.intro;
    <para>
     Shmop es un conjunto de funciones que permiten a PHP leer, escribir, crear 
y borrar de forma sencilla segmentos de memoria compartida de tipo UNIX.
	</para>
	<note>
     <simpara>
 Se debe tener en cuenta que las versiones de Windows anteriores a Windows 2000 no 
soportan el uso de memoria compartida. En sistemas Windows, Shmop solamente funciona cuando PHP se ejecuta como m&oacute;dulo de un servidor web como Apache o IIS (por tanto, no funciona si PHP se ejecuta como CGI o desde linea de comandos CLI).
    </simpara>
    </note>
    <note>
     <simpara>
      En PHP 4.0.3, el nombre de todas estas funciones estaba precedido por el
prefijo <literal>shm</literal> y actualmente lo est&aacute;n por el 
prefijo <literal>shmop</literal>.
     </simpara>
    </note>
   </section>

   <section xml:id="shmop.requirements">
    &reftitle.required;
    &no.requirement;
   </section>

   &reference.shmop.configure;

   <section xml:id="shmop.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section xml:id="shmop.resources">
    &reftitle.resources;
    <para>
    </para>
   </section>

   <section xml:id="shmop.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section xml:id="shmop.examples">
    &reftitle.examples;
    <para>
     <example>
      <title>Resumen de las operaciones con Memoria Compartida</title>
      <programlisting role="php">
<![CDATA[
<?php
   
// Creacion de un segmento de memoria compartida de 100 bytes y con un
// identificador igual a 0xff3
$shm_id = shmop_open(0xff3, "c", 0644, 100);
if(!$shm_id) {
    echo "No se pudo crear el segmento de memoria compartida\n";
}

// Obtencion del tama&ntilde;o del segmento de memoria compartida
$shm_size = shmop_size($shm_id);
echo "Segmento de memoria: se han reservado ".$shm_size. " bytes.\n";

// Escritura de una cadena de texto de prueba en la memoria compartida
$shm_bytes_written = shmop_write($shm_id, "mi segmento de memoria compartida",
0);
if($shm_bytes_written != strlen("mi segmento de memoria compartida")) {
    echo "No se pudieron escribir todos los datos indicados\n";
}

// Lectura de la cadena de texto de prueba
$my_string = shmop_read($shm_id, 0, $shm_size);
if(!$my_string) {
    echo "No se pudo leer el segmento de memoria compartida\n";
}
echo "Los datos que contenia el segmento de memoria compartida son los 
siguientes:".$my_string."\n";

// Borrado y eliminacion del segmento de memoria compartida
if(!shmop_delete($shm_id)) {
    echo "No se pudo borrar el segmento de memoria compartida.";
}
shmop_close($shm_id);
   
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>
 
&reference.shmop.entities.functions;

 </reference> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

