<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 288721 $ -->
<!-- EN-Revision: 297028 Maintainer: seros Status: ready -->
<!-- Purpose: remote.other -->
<!-- Membership: core -->

<book xml:id="book.stream" xmlns="http://docbook.org/ns/docbook">
 <title>Flujos</title>

  <preface xml:id="intro.stream">
   &reftitle.intro;
   <simpara>
    Los flujos fueron introducidios en PHP 4.3.0 como
    como una manera de generalizar operaciones con archivos, redes, y compresión de información, entre
    otras, que comparten un conjunto de funciones y usos. En
    su definición más simple, un <literal>flujo</literal> (stream) es un
    objeto <literal>recurso</literal> que exhibe un comportamiento
    similar a un flujo. Es decir, puede ser leído o escrito de una manera
    lineal, y ser capaz de usar <function>fseek</function> para buscar
    posiciones arbitrarias dentro del flujo.
   </simpara>
   <simpara>
    Una <literal>envoltura</literal> (wrapper) es un códido adicional que le indica al flujo cómo
    manejar protocolos/codificaciones específicos. Por ejemplo, la envoltura <literal>http</literal>
    sabe cómo traducir una URL en una petición <literal>HTTP/1.0</literal>
    de un archivo en un servidor remoto. Hay muchas envolturas
    incluidas en PHP de manera predeterminada (véase <xref linkend="wrappers"/>),
    y además se pueden añadir envolturas personalizadas dentro de un
    script de PHP usando <function>stream_wrapper_register</function>, o
    directamente desde una extensión usando la Referencia de la API en <xref linkend="internals2.streams"/>.
    Ya que se puede añadir a PHP cualquier clase de envoltura, 
    no hay un límite establecido sobre lo que se puede hacer con ellas. Para acceder a la lista
    de las envolturas actualmente registradas, use <function>stream_get_wrappers</function>.
   </simpara>
   <para>
    Un flujo es referenciado como: <parameter>scheme</parameter>://<parameter>target</parameter>
    <itemizedlist>
     <listitem>
      <simpara>
       <parameter>scheme</parameter>(string) -
       El nombre de la envoltura que se va a usar. Algunos ejemplos incluyen: file, 
       http, https, ftp, ftps, compress.zlib, compress.bz2, y php. Véase
       <xref linkend="wrappers"/> para una lista de envolturas incluidas en PHP. Si
       no se especifica una envoltura, se usa la función por defecto (normalmente
       <literal>file</literal>://).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <parameter>target</parameter> - 
       El objetivo. Depende de la envoltura usada. Para flujos relacionados con sistemas de archivos
       nomrmalmente es una ruta y un nombre de archivo del archivo deseado. Para flujos relacionados con
       redes normalmente es un nombre de host, a menudo con una ruta añadida al final. De nuevo, véase
       <xref linkend="wrappers"/> para una descripción de los objetivos de los flujos internos.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    <note>
     <para>
      Se puede encontrar información sobre el uso de flujos dentro del código fuente de PHP en la
      <link linkend="internals2.ze1.streams">Referencia de la API de Flujos para Autores de Extensiones de PHP</link>.
     </para>
    </note>
   </para>
  </preface>

 &reference.stream.setup;
 &reference.stream.constants;
 &reference.stream.filters;
 &reference.stream.contexts;
 &reference.stream.errors;
 &reference.stream.examples;
 &reference.stream.streamwrapper;
 &reference.stream.reference;
 
</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

