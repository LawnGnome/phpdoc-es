<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.9 Maintainer: lboshell Status: ready -->
  <refentry id="function.stream-filter-append">
   <refnamediv>
    <refname>stream_filter_append</refname>
    <refpurpose>Adjuntar un filtro a una secuencia.</refpurpose> 
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>bool</type><methodname>stream_filter_append</methodname>
      <methodparam><type>resource</type><parameter>secuencia</parameter></methodparam>
      <methodparam><type>string</type><parameter>nombre_filtro</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>lectura_escritura</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>parametros</parameter></methodparam>
     </methodsynopsis>
    <para>
Agrega el <parameter>nombre_filtro</parameter> a la lista de filtros
adjuntos a la <parameter>secuencia</parameter>. Este filtro
ser&aacute; a&ntilde;adido con los <parameter>parametros</parameter>
especificados al <emphasis>final</emphasis> de la lista y por lo tanto
ser&aacute; llamado al &uacute;ltimo durante las operaciones de la
secuencia. Para agregar un filtro al comienzo de la lista,
use <function>stream_filter_prepend</function>.
    </para>
    <para>
Por defecto, <function>stream_filter_append</function>
adjuntar&aacute; el filtro a la <literal>cadena de filtros de
lectura</literal> si el archivo fue abierto para lectura (esto quiere
decir, Modo del Archivo: <literal>r</literal>,
o <literal>+</literal>). El filtro tambi&eacute;n se adjuntar&aacute;
a la <literal>cadena de filtros de escritura</literal> si el archivo
fue abierto para escritura (esto quiere decir, Modo del
Archivo: <literal>w</literal>, <literal>a</literal>,
O <literal>+</literal>). Las constantes
<constant>STREAM_FILTER_READ</constant>,
<constant>STREAM_FILTER_WRITE</constant>, o
<constant>STREAM_FILTER_ALL</constant> pueden ser pasadas
tambi&eacute;n al
par&aacute;metro <parameter>lectura_escritura</parameter> para
sobrescribir este comportamiento.
    </para>
    <para>
     <example>
      <title>Control del lugar en el que se aplican los filtros</title>
      <programlisting role="php">
<![CDATA[
<?php
/* Abrir un archivo de prueba para lectura y escritura */
$da = fopen("prueba.txt", "rw");

/* Aplicar el filtro ROT13 a la cadena de filtros de escritura, pero
 * no a la cadena de filtros de lectura */
stream_filter_append($da, "string.rot13", STREAM_FILTER_WRITE);

/* Escribir una cadena simple al archivo, la cual sera transformada
   mediante ROT13 en su camino de salida */
fwrite($da, "Esta es una prueba\n");

/* Volver al inicio del archivo */
rewind($da);

/* Leer los contenidos del archivo de vuelta. Si hubiesemos aplicado
 * el filtro a la cadena de filtros de lectura tambien, veriamos el
 * texto de vuelta a su estado original debido a la retransformacion
 * con ROT133 */
fpassthru($da);

fclose($da);

/* Salida Esperada
   ---------------

Rfgn rf han cehron

 */
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <title>Cuando se usan filtros personalizados (de usuario)</title>
     <simpara>
La funci&oacute;n <function>stream_filter_register</function> debe ser
llamada primero para registrar el filtro de usuario deseado
para <parameter>nombre_filtro</parameter>.
     </simpara>
    </note>
    <simpara>
     Vea tambi&eacute;n
     <function>stream_filter_register</function>, y
     <function>stream_filter_prepend</function>
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
