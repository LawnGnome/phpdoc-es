<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.4 Maintainer: lboshell Status: ready -->
<!-- splitted from ./en/functions/filesystem.xml, last change in rev 1.2 -->
  <refentry id="function.stream-set-write-buffer">
   <refnamediv>
    <refname>stream_set_write_buffer</refname>
    <refpurpose>Establece el uso de b&uacute;feres de archivo en la
    secuencia dada</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
     <methodsynopsis>
      <type>int</type><methodname>stream_set_write_buffer</methodname>
      <methodparam><type>resource</type><parameter>secuencia</parameter></methodparam>
      <methodparam><type>int</type><parameter>bufer</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     La salida al usar <function>fwrite</function> se acumula
     normalmente en un b&uacute;fer a los 8K. Esto quiere decir que si
     existen dos procesos que desean escribir sobre la misma secuencia
     de salida (un archivo), cada uno es pausado despu&eacute;s de los
     8K de datos para permitir que el otro
     escriba. <function>stream_set_write_buffer</function> establece
     el uso del b&uacute;fer para operaciones de escritura sobre el
     apuntador de archivo dado <parameter>secuencia</parameter> a
     <parameter>bufer</parameter> bytes. Si
     <parameter>bufer</parameter> es 0, entonces las operaciones de
     escritura no usan el b&uacute;fer. Esto se asegura de que todas
     las escrituras con <function>fwrite</function> sean completadas
     antes de que a otros procesos les sea permitido escribir sobre
     esa secuencia de salida.
    </simpara>
    <simpara>
     La funci&oacute;n devuelve 0 en caso de &eacute;xito, o EOF si la
     petici&oacute;n no puede ser cumplida.
    </simpara>
    <para>
     El siguiente ejemplo demuestra el modo de usar
     <function>stream_set_write_buffer</function> para crear una
     secuencia sin uso de b&uacute;feres.
     <example>
      <title>Ejemplo de
      <function>stream_set_write_buffer</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$da = fopen($archivo, "w");
if ($da) {
  stream_set_write_buffer($da, 0);
  fwrite($da, $salida);
  fclose($da);
}
?>
]]>
      </programlisting>
     </example>
    </para>

    <simpara>
     Vea tambi&eacute;n <function>fopen</function> y
     <function>fwrite</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
