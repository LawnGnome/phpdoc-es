<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.13 Maintainer: lboshell Status: ready -->
  <refentry id="function.stream-wrapper-register">
   <refnamediv>
    <refname>stream_wrapper_register</refname>
    <refpurpose>Registrar una envoltura URL implementada como una
    clase PHP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <methodsynopsis>
     <type>bool</type><methodname>stream_wrapper_register</methodname>
     <methodparam><type>string</type><parameter>protocolo</parameter></methodparam>
     <methodparam><type>string</type><parameter>nombre_clase</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>stream_wrapper_register</function> le permite
     implementar sus propios gestores y secuencias de protocolo para
     su uso con todas las funciones de sistema de archivos (tales como
     <function>fopen</function>, <function>fread</function> etc.).
    </para>
    <para>
     Para implementar una envoltura, necesita definir una clase con un
     n&uacute;mero de funciones miembro, tal y como se define
     m&aacute;s adelante. Cuando alguien abre su secuencia mediante
     fopen, PHP crear&aacute; una instancia de
     <parameter>nombre_clase</parameter> y luego llamar&aacute;
     algunos m&eacute;todos en esa instancia. Debe implementar los
     m&eacute;todos exactamente como se describe a continuaci&oacute;n
     - de no ser as&iacute;, producir&aacute; comportamientos
     indefinidos.
    </para>
    <note>
     <simpara>
      A partir de PHP 5.0.0, la instancia de
      <parameter>nombre_clase</parameter> ser&aacute; poblada con una
      propiedad <parameter>contexto</parameter> que hace referencia a
      un <literal>Recurso de Contexto</literal>, el cual puede
      obtenerse con
      <function>stream_context_get_options</function>. Si no se ha
      pasado ning&uacute;n contexto a la funci&oacute;n de
      creaci&oacute;n de secuencia, <parameter>contexto</parameter>
      ser&aacute; definido como &null;.
     </simpara>
    </note>
    <para>
     <function>stream_wrapper_register</function> devolver&aacute;
     &false; si el <parameter>protocolo</parameter> ya tiene un
     gestor.
    </para>

    <methodsynopsis>
     <type>bool</type><methodname>stream_open</methodname>
     <methodparam><type>string</type><parameter>ruta</parameter></methodparam>
     <methodparam><type>string</type><parameter>modo</parameter></methodparam>
     <methodparam><type>int</type><parameter>opciones</parameter></methodparam>
     <methodparam><type>string</type><parameter>ruta_abierta</parameter></methodparam>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado inmediatamente despu&eacute;s de
     que su objeto de secuencia es creado. <parameter>ruta</parameter>
     especifica la URL pasada a <function>fopen</function> y que
     &eacute;ste objeto supuestamente debe recuperar. Puede
     usar <function>parse_url</function> para separar la ruta.
    </para>
    <para>
     <parameter>modo</parameter> es el modo usado para abrir el
     archivo, tal y como se proporciona
     en <function>fopen</function>. Usted es responsable por el
     chequeo de la validez del <parameter>modo</parameter> para
     la <parameter>ruta</parameter> solicitada.
    </para>
    <para>
     <parameter>opciones</parameter> contiene banderas adicionales
     definidas por la interfaz de programaci&oacute;n de las
     secuencias. Puede contener uno o m&aacute;s de los siguientes
     valores, unidos mediante la operaci&oacute;n l&oacute;gica OR.
     <informaltable>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Bandera</entry>
         <entry>Descripci&oacute;n</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>STREAM_USE_PATH</entry>
         <entry>
         Si <parameter>ruta</parameter> es relativa, buscar por el
         recurso usando include_path.
         </entry>
        </row>
        <row>
         <entry>STREAM_REPORT_ERRORS</entry>
         <entry>
          Si esta bandera est&aacute; activa, usted se hace
          responsable por la generaci&oacute;n de errores
          usando <function>trigger_error</function> durante la
          apertura de la secuencia. Si esta bandera no est&aacute;
          definida, no debe generar ning&uacute;n error.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     Si la <parameter>ruta</parameter> es abierta satisfactoriamente,
     y STREAM_USE_PATH es definida en <parameter>opciones</parameter>,
     usted debe definir <parameter>ruta_abierta</parameter> como la
     ruta completa hacia el archivo/recurso que fue abierto en
     realidad.
    </para>
    <para>
     Si el recurso solicitado fue abierto satisfactoriamente, debe
     devolver &true;, o &false; de lo contrario.
    </para>

    <methodsynopsis>
     <type>void</type><methodname>stream_close</methodname>
     <void/>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado cuando la secuencia es cerrada,
     usando
     <function>fclose</function>. Debe liberar cualquier recurso que
     haya sido bloqueado o reservado por la secuencia.
    </para>

    <methodsynopsis>
     <type>string</type><methodname>stream_read</methodname>
     <methodparam><type>int</type><parameter>conteo</parameter></methodparam>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamadas
     de <function>fread</function> y <function>fgets</function> en la
     secuencia. Usted debe devolver
     hasta <parameter>conteo</parameter> bytes de datos desde su
     posici&oacute;n actual de lectura/escritura como una cadena. Si
     hay menos de <parameter>conteo</parameter> bytes disponibles,
     devuelva tantos como pueda. Si no hay m&aacute;s datos
     disponibles, devuelva &false; o una cadena
     vac&iacute;a. Tambi&eacute;n debe actualizar la posici&oacute;n
     de lectura/escritura de la secuencia en el n&uacute;mero de bytes
     que fueron le&iacute;dos con &eacute;xito.
    </para>

    <methodsynopsis>
     <type>int</type><methodname>stream_write</methodname>
     <methodparam><type>string</type><parameter>datos</parameter></methodparam>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamadas
     de <function>fwrite</function> en el sistema. Debe
     guardar <parameter>datos</parameter> en el modelo de
     almacenamiento base usado por su secuencia. Si no hay suficiente
     espacio disponible, intente almacenar tantos bytes como le sea
     posible. Debe devolver el n&uacute;mero de bytes que fueron
     almacenados satisfactoriamente en la secuencia, o 0 si no fue
     posible almacenar ninguno. Tambi&eacute;n debe actualizar la
     posici&oacute;n de lectura/escritura de la secuencia en el
     n&uacute;mero de bytes que fueron escritos con &eacute;xito.
    </para>
   
    <methodsynopsis>
     <type>bool</type><methodname>stream_eof</methodname>
     <void/>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamados
     de <function>feof</function> en la secuencia. Debe devolver
     &true; si la posici&oacute;n de lectura/escritura se encuentra al
     final de la secuencia y no hay m&aacute;s datos disponibles para
     su lectura, o &false; de lo contrario.
    </para>

    <methodsynopsis>
     <type>int</type><methodname>stream_tell</methodname>
     <void/>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamados
     de <function>ftell</function> en la secuencia. Debe devolver la
     posici&oacute;n actual de lectura/escritura en la secuencia.
    </para>

    <methodsynopsis>
     <type>bool</type><methodname>stream_seek</methodname>
     <methodparam><type>int</type><parameter>desplazamiento</parameter></methodparam>
     <methodparam><type>int</type><parameter>punto_partida</parameter></methodparam>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamadas
     de <function>fseek</function> en la secuencia. Debe actualizar la
     posici&oacute;n de lectura/escritua en la secuencia de acuerdo
     a <parameter>desplazamiento</parameter>
     y <parameter>punto_partida</parameter>. Vea <function>fseek</function>
     para m&aacute;s informaci&oacute;n sobre &eacute;stos
     par&aacute;metros. Devuelva &true; si la posici&oacute;n fue
     actualizada, &false; de lo contrario.
    </para>

    <methodsynopsis>
     <type>bool</type><methodname>stream_flush</methodname>
     <void/>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamadas
     de <function>fflush</function> en la secuencia. Si ha usado un
     cach&eacute; con los datos de su secuencia, pero no los ha
     guardado aun en el modelo de almacenamiento base, debe hacerlo
     ahora. Devuelva &true; si los datos en cach&eacute; fueron
     almacenados satisfactoriamente (o si no hab&iacute;an datos a
     almacenar), o &false; si los datos no pudieron ser almacenados.
    </para>

    <methodsynopsis>
     <type>array</type><methodname>stream_stat</methodname>
     <void/>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamadas
     de <function>fstat</function> en la secuencia y debe devolver una
     matriz que contenga los mismos valores que sean apropiados para
     la secuencia.
    </para>

    <methodsynopsis>
     <type>bool</type><methodname>unlink</methodname>
     <methodparam><type>string</type><parameter>ruta</parameter></methodparam>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamadas
     de <function>unlink</function> sobre rutas URL asociadas con la
     envoltura y debe intentar la eliminaci&oacute;n del item
     especificado por <parameter>ruta</parameter>. Debe devolver
     &true; de tener &eacute;xito o &false; en caso de fallo. Para
     asegurarse de que el mensaje de error correcto sea devuelto, no
     defina &eacute;ste m&eacute;todo si su envoltura no soporta
     eliminaciones.
    </para>
    <note>
     <simpara>
      El m&eacute;todo de envoltura en espacio de usuario unlink no es
      soportado antes de PHP 5.0.0.
     </simpara>
    </note>

    <methodsynopsis>
     <type>bool</type><methodname>rename</methodname>
     <methodparam><type>string</type><parameter>ruta_fuente</parameter></methodparam>
     <methodparam><type>string</type><parameter>ruta_destino</parameter></methodparam>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamadas
     de <function>rename</function> en rutas URL asociadas con la
     envoltura y debe intentar renombrar el item especificado
     por <parameter>ruta_fuente</parameter> a la cadena dada
     por <parameter>ruta_destino</parameter>. Debe devolver &true; en
     caso de &eacute;xito o &false; en caso de fallo. Para asegurarse
     de que el mensaje de error correcto sea devuelto, no defina
     &eacute;ste m&eacute;todo si su envoltura no soporta el
     renombramiento de rutas.
    </para>
    <note>
     <simpara>
      El m&eacute;todo de envoltura en espacio de usuario rename no es
      soportado antes de PHP 5.0.0.
     </simpara>
    </note>

    <methodsynopsis>
     <type>bool</type><methodname>mkdir</methodname>
     <methodparam><type>string</type><parameter>ruta</parameter></methodparam>
     <methodparam><type>int</type><parameter>modo</parameter></methodparam>
     <methodparam><type>int</type><parameter>opciones</parameter></methodparam>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamadas
     de <function>mkdir</function> en rutas URL asociadas con la
     envoltura y debe intentar crear el directorio especificado
     por <parameter>ruta</parameter>. Debe devolver &true; de tener
     &eacute;xito o &false; en caso de fallo. Para asegurarse de que
     el mensaje de error correcto sea devuelto, no defina &eacute;ste
     m&eacute;todo si su envoltura no soporta la creaci&oacute;n de
     directorios. Valores posibles
     para <parameter>opciones</parameter>
     incluyen <constant>STREAM_REPORT_ERRORS</constant>
     y <constant>STREAM_MKDIR_RECURSIVE</constant>.
    </para>
    <note>
     <simpara>
      El m&eacute;todo de envoltura en espacio de usuario mkdir no es
      soportado antes de PHP 5.0.0.
     </simpara>
    </note>

    <methodsynopsis>
     <type>bool</type><methodname>rmdir</methodname>
     <methodparam><type>string</type><parameter>ruta</parameter></methodparam>
     <methodparam><type>int</type><parameter>opciones</parameter></methodparam>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamadas
     de <function>rmdir</function> sobre rutas URL asociadas con la
     envoltura y deber&iacute;a intentar eliminar el directorio
     especificado por <parameter>ruta</parameter>. Debe devolver
     &true; de tener &eacute;xito o &false; en caso de fallo. Para
     asegurarse de que el mensaje de error correcto sea devuelto, no
     defina &eacute;ste m&eacute;todo si su envoltura no soporta la
     eliminaci&oacute;n de directorios. Posibles valores
     para <parameter>opciones</parameter>
     incluyen <constant>STREAM_REPORT_ERRORS</constant>.
    </para>
    <note>
     <simpara>
      El m&eacute;todo de envoltura en espacio de usuario rmdir no es
      soportado antes de PHP 5.0.0.
     </simpara>
    </note>

    <methodsynopsis>
     <type>bool</type><methodname>dir_opendir</methodname>
     <methodparam><type>string</type><parameter>ruta</parameter></methodparam>
     <methodparam><type>int</type><parameter>opciones</parameter></methodparam>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado inmediatamente cuando su objeto de
     secuencia es creado para examinar contenidos de directorio
     con <function>opendir</function>. <parameter>ruta</parameter>
     especifica la URL que fue pasada a <function>opendir</function> y
     que &eacute;ste objeto supuestamente va a explorar. Puede
     usar <function>parse_url</function> para separar &eacute;sta
     ruta.
    </para>

    <methodsynopsis>
     <type>array</type><methodname>url_stat</methodname>
     <methodparam><type>string</type><parameter>ruta</parameter></methodparam>
     <methodparam><type>int</type><parameter>banderas</parameter></methodparam>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta a llamadas
     de <function>stat</function> en rutas URL asociadas con la
     envoltura y debe devolver tantos elementos en com&uacute;n con la
     funci&oacute;n del sistema como sea posible. Los valores
     desconocidos o no disponibles deben definirse con valores
     razonables (usualmente <constant>0</constant>).
    </para>
    <para>
     <parameter>banderas</parameter> contiene banderas adicionales
     definidas por la interfaz de programaci&oacute;n de
     secuencias. Puede contener uno o m&aacute;s de los siguientes
     valores, unidos mediante la operaci&oacute;n l&oacute;gica OR.
     <informaltable>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Bandera</entry>
         <entry>Descripci&oacute;n</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>STREAM_URL_STAT_LINK</entry>
         <entry>
          Para recursos con la habilidad de mantener un enlace con
          otro recurso (tales como una redirecci&oacute;n HTTP
          Location:, o un enlace simb&oacute;lico en el sistema de
          archivos). Esta bandera indica que solo se devolver&aacute;
          informaci&oacute;n sobre el enlace mismo, no sobre el
          recurso apuntado por el enlace. Esta bandera es definida en
          respuesta a llamadas
          de <function>lstat</function>, <function>is_link</function>,
          o <function>filetype</function>.
         </entry>
        </row>
        <row>
         <entry>STREAM_URL_STAT_QUIET</entry>
         <entry>
          Si &eacute;sta bandera es definida, su envoltura no debe
          generar error alguno. Si esta bandera no est&aacute;
          definida, usted es responsable por el reporte de errores
          usando la funci&oacute;n <function>trigger_error</function>
          durante la ejecuci&oacute;n del proceso stat en la ruta.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>

    <methodsynopsis>
     <type>string</type><methodname>dir_readdir</methodname>
     <void/>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta
     a <function>readdir</function> y debe devolver una cadena que
     represente el siguiente nombre de archivo en la ubicaci&oacute;n
     abierta por <function>dir_opendir</function>.
    </para>

    <methodsynopsis>
     <type>bool</type><methodname>dir_rewinddir</methodname>
     <void/>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta
     a <function>rewinddir</function> y debe restablecer la salida
     generada por <function>dir_readdir</function>. Esto quiere decir,
     la siguiente llamada a <function>dir_readdir</function> debe
     devolver la primera entrada en la ubicaci&oacute;n devuelta
     por <function>dir_opendir</function>.
    </para>

    <methodsynopsis>
     <type>bool</type><methodname>dir_closedir</methodname>
     <void/>
    </methodsynopsis>
    <para>
     Este m&eacute;todo es llamado en respuesta
     a <function>closedir</function>. Debe liberar cualquier recurso
     que haya sido bloqueado o reservado durante la apertura y uso de
     la secuencia de directorio.
    </para>
    <para>
     El siguiente ejemplo implementa un gestor del protocolo var://
     que permite el acceso para lectura/escritura a una variable
     global con nombre, usando las funciones de secuencia de sistema
     de archivos, como <function>fread</function>. El protocolo var://
     implementado a continuaci&oacute;n leer&aacute;/escribir&aacute;
     datos desde/hacia $GLOBALS["foo"] dada la URL "var://foo".
     <example> 
      <title>Una Secuencia para la lectura/escritura de variables
      globales</title>
      <programlisting role="php">
<![CDATA[
<?php

class SecuenciaVariable {
    var $posicion;
    var $nombre_var;
   
    function stream_open($ruta, $modo, $opciones, &$ruta_abierta)
    {
        $url = parse_url($ruta);
        $this->nombre_var = $url["host"];
        $this->posicion = 0;
        
        return true;
    }

    function stream_read($conteo)
    {
        $ret = substr($GLOBALS[$this->nombre_var], $this->posicion, $conteo);
        $this->posicion += strlen($ret);
        return $ret;
    }

    function stream_write($datos)
    {
        $izq = substr($GLOBALS[$this->nombre_var], 0, $this->posicion);
        $der = substr($GLOBALS[$this->nombre_var], $this->posicion + strlen($datos));
        $GLOBALS[$this->nombre_var] = $izq . $datos . $der;
        $this->posicion += strlen($datos);
        return strlen($datos);
    }

    function stream_tell()
    {
        return $this->posicion;
    }

    function stream_eof()
    {
        return $this->posicion >= strlen($GLOBALS[$this->nombre_var]);
    }

    function stream_seek($desplazamiento, $partida)
    {
        switch ($partida) {
            case SEEK_SET:
                if ($desplazamiento < strlen($GLOBALS[$this->nombre_var]) && $desplazamiento >= 0) {
                     $this->posicion = $desplazamiento;
                     return true;
                } else {
                     return false;
                }
                break;
                
            case SEEK_CUR:
                if ($desplazamiento >= 0) {
                     $this->posicion += $desplazamiento;
                     return true;
                } else {
                     return false;
                }
                break;
                
            case SEEK_END:
                if (strlen($GLOBALS[$this->nombre_var]) + $desplazamiento >= 0) {
                     $this->posicion = strlen($GLOBALS[$this->nombre_var]) + $desplazamiento;
                     return true;
                } else {
                     return false;
                }
                break;
                
            default:
                return false;
        }
    }
}

stream_wrapper_register("var", "SecuenciaVariable")
    or die("Fall&oacute; el registro del protocolo");

$mi_var = "";
    
$da = fopen("var://mi_var", "r+");

fwrite($da, "linea1\n");
fwrite($da, "linea2\n");
fwrite($da, "linea3\n");

rewind($da);
while (!feof($da)) {
    echo fgets($da);
}
fclose($da);
var_dump($mi_var);

?>
]]>
      </programlisting>
     </example>
    </para>
  
   </refsect1>
  </refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
