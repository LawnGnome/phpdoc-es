<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.29 Maintainer: lboshell Status: ready -->
 <chapter id="faq.databases">
  <title>Problemas con bases de datos</title>
  <titleabbrev>Problemas con bases de datos</titleabbrev>

  <para>
   Esta secci&oacute;n contiene preguntas comunes sobre la
   relaci&oacute;n entre PHP y bases de datos. S&iacute;, PHP puede
   acceder a pr&aacute;cticamente cualquier base de datos disponible
   hoy en d&iacute;a.
  </para>

  <qandaset>
   <qandaentry id="faq.databases.mssql">
    <question>
     <para>
      He escuchado que es posible acceder a Microsoft SQL Server desde
      PHP. &iquest;C&oacute;mo?
     </para>
    </question>
    <answer>
     <para>
      En m&aacute;quinas Windows, puede simplemente usar el soporte
      ODBC incluido y el controlador ODBC apropiado.
     </para>
     <para>
      En m&aacute;quinas Unix, es posible usar el controlador
      Sybase-CT para acceder a Servidores Microsoft SQL ya que son
      compatibles (en su mayor&iacute;a) al nivel del
      protocolo. Sybase ha creado una <ulink
      url="&url.sybase.ctlib;">versi&oacute;n gratuita de las
      bibliotecas necesarias para sistemas Linux</ulink>. Para otros
      sistemas operativos Unix, necesita ponerse en contacto con
      Sybase para obtener las bibliotecas correctas. Consulte
      tambi&eacute;n la respuesta a la siguiente pregunta.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.access">
    <question>
     <para>&iquest;Puedo acceder a bases de datos Microsoft
     Access?</para>
    </question>
    <answer>
     <para>
      Si. Usted ya tiene todas las herramientas necesarias si
      est&aacute; corriendo enteramente bajo Windows 9x/Me, o NT/2000,
      en donde es posible usar ODBC y los controladores ODBC para
      bases de datos Microsoft Access.
     </para>
     <para>
      Si est&aacute; corriendo PHP en una m&aacute;quina Unix y desea
      comunicarse con MS Access en una m&aacute;quina Windows,
      necesitar&aacute; controladores ODBC para Unix.  <ulink
      url="&url.openlink;">OpenLink Software</ulink> tiene
      controladores ODBC basados en Unix que tienen esa
      capacidad. Existe un programa piloto gratuito en donde puede
      descargar una copia de evaluaci&oacute;n que no expira y los
      precios comienzan en $675 para la versi&oacute;n con soporte
      comercial.
     </para>
     <para>
      Otra alternativa consiste en usar un servidor SQL que tenga
      controladores ODBC Windows y usarlo para almacenar los datos, a
      los cuales puede acceder desde Microsoft Access (usando ODBC) y
      PHP (usando los controladores incorporados), o usar un formato
      de archivo intermedio que Access y PHP entiendan, como archivos
      planos o bases de datos dBase. Sobre este punto, Tim Hayes de
      OpenLink software escribe:
      <blockquote>
       <para>
        Usar otra base de datos como intermediario no es una buena
        idea, cuando es posible usar ODBC desde PHP directamente a su
        base de datos - es decir, con los controladores de
        OpenLink. Si realmente necesita usar un formato de archivo
        intermedio, OpenLink ha lanzado ahora Virtuoso (un motor de
        bases de datos virtual) para NT, Linux y otras plataformas
        Unix. Por favor visite nuestro <ulink
        url="&url.openlink;">sitio web</ulink> para una descarga
        gratuita.
       </para>
      </blockquote>
     </para>
     <para>
      Una opci&oacute;n que ha sido probada con &eacute;xito es usar
      MySQL y sus controladores MyODBC en Windows y sincronizar las
      bases de datos. Steve Lawrence escribe:
     </para>
     <para>
      <itemizedlist>
       <listitem>
        <simpara>
         Instale MySQL en su plataforma de acuerdo a las instrucciones
         de MySQL. La &uacute;ltima versi&oacute;n disponible se
         encuentra en <ulink url="&url.mysql;">www.mysql.com</ulink>
         (&iexcl;obt&eacute;ngala desde un servidor espejo
         cercano!). No se requiere ninguna configuraci&oacute;n
         especial, exceptuando al momento de configurar una base de
         datos, y al configurar la cuenta de usuario, debe poner % en
         el campo de host, o el nombre del host del equipo Windows a
         la que desea acceder desde MySQL. Anote su nombre de
         servidor, nombre de usuario y contrase&ntilde;a.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Descargue el controlador MyODBC para Windows desde el sitio
         de MySQL. La &uacute;ltima versi&oacute;n disponible es
         myodbc-2_50_19-win95.zip (la versi&oacute;n NT est&aacute;
         disponible tambi&eacute;n, al igual que su c&oacute;digo
         fuente). Inst&aacute;lelo en su equipo Windows. Es posible
         probar su operaci&oacute;n con las utilidades incluidas con
         este programa.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Cree un usuario o dsn de sistema en su administrador de ODBC,
         ubicado en el panel de control. Cree un nombre dsn, ingrese
         su nombre de host, nombre de usuario, contrase&ntilde;a,
         puerto, etc. para su base de datos MySQL configurada en el
         paso 1.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Instale Access usando la instalaci&oacute;n completa, esto
         asegura que tenga las elementos adicionales apropiados.. por
         lo menos requerir&aacute; el soporte ODBC y el gestor de
         tablas enlazadas.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         &iexcl;Ahora la parte divertida! Cree una nueva base de datos
         access. En la ventana de tabla use el clic derecho y
         seleccione Enlazar Tablas, o bajo la opci&oacute;n del
         men&uacute; de archivo, seleccione Obtener Datos Externos y
         luego Enlazar Tablas. Cuando el cuadro de navegaci&oacute;n
         de archivos aparezca, seleccione archivos de tipo:
         ODBC. Seleccione dsn de Sistema y el nombre de su dsn creado
         en el paso 3. Seleccione la tabla a enlazar, presione
         Aceptar, y &iexcl;listo! &iexcl;Ahora es posible abrir la
         tabla y agregar/eliminar/editar datos en su servidor MySQL!
         Tambi&eacute;n es posible construir consultas,
         importar/exportar tablas a MySQL, construir formularios y
         reportes, etc.
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
     <para>
      Consejos y Trucos:
      <itemizedlist>
       <listitem>
        <simpara>
         Es posible construir sus tablas en Access y exportarlas a
         MySQL, y luego enlazarlas de vuelta. Esto facilita la
         r&aacute;pida creaci&oacute;n de tablas.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Cuando se crean tablas en Access, es necesario tener una
         llave primaria definida para tener acceso de escritura a la
         tabla en access. Aseg&uacute;rese de crear una llave primaria
         en MySQL antes de enlazar en access.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Si modifica una tabla en MySQL, es necesario re-enlazarla en
         Access. Dir&iacute;jase a herramientas&gt;adiciones&gt;gestor
         de tablas enlazadas, vaya a su DSN ODBC, y seleccione la
         tabla a re-enlazar desde all&iacute;. Tambi&eacute;n es
         posible transladar su fuente dsn all&iacute;, simplemente
         active el cuadro de verificaci&oacute;n "siempre preguntar
         por una ubicaci&oacute;n nueva" antes de presioner Aceptar.
        </simpara>
       </listitem>
      </itemizedlist>
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.upgraded">
    <question>
     <para>
      He actualizado a PHP 4, y ahora mysql me dice persistentemente
      "Warning: MySQL: Unable to save result set in
      ...". &iquest;Qu&eacute; sucede?
     </para>
    </question>
    <answer>
     <para>
      Lo m&aacute;s posible es que PHP 4 haya sido compilado con la
      opci&oacute;n <option role="configure">--with-mysql</option>,
      sin especificar la ruta a MySQL. Esto quiere decir que PHP
      est&aacute; usando su biblioteca cliente de MySQL
      incorporada. Si su sistema est&aacute; ejecutando aplicaciones,
      tales como PHP 3 como un m&oacute;dulo concurrente de Apache, o
      auth-mysql, que usan otras versiones de cliente MySQL, entonces
      existe un conflicto entre las dos versiones diferentes de esos
      clientes.
     </para>
     <para>
      Recompilar PHP 4, y agregar la ruta a la bandera MySQL, '<link
      linkend="mysql.configure">--with-mysql=/su/ruta/hacia/mysql</link>'
      por lo general resuelve este problema.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.mysql.php5">
    <question>
     <para>
      PHP 5 ya no incluye bibliotecas cliente de MySQL,
      &iquest;qu&eacute; representa esto para m&iacute;? &iquest;Aun
      puedo usar MySQL con PHP? Intento usar MySQL y obtengo errores
      de tipo "function undefined", &iquest;qu&eacute; pasa?
     </para>
    </question>
    <answer>
     <para>
      Si. Siempre habr&aacute; soporte MySQL en PHP en una forma u
      otra. El &uacute;nico cambio en PHP 5 es que ya no distribuimos
      la biblioteca cliente como tal. Algunas razones, sin orden
      alguno en particular:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        La mayor&iacute;a de sistemas en la actualidad ya tienen la
        biblioteca cliente instalada.
       </para>
      </listitem>
      <listitem>
       <para>
        Dado lo anterior, tener versiones m&uacute;ltiples de la
        biblioteca puede causar problemas. Por ejemplo, si enlaza
        mod_auth_mysql contra una versi&oacute;n y PHP contra otra, y
        luego habilita ambos en Apache, obtendr&aacute; un bonito y
        gordo fallo. Asimismo, la biblioteca distribuida no siempre
        jugaba bien con la versi&oacute;n del servidor instalada. El
        s&iacute;ntoma m&aacute;s obvio de esta situaci&oacute;n es el
        desacuerdo sobre el lugar en donde encontrar el archivo de
        sockets de dominio Unix mysql.socket.
       </para>
      </listitem>
      <listitem>
       <para>
        Su mantenimiento era un poco laxo y estaba qued&aacute;ndose
        cada vez m&aacute;s atr&aacute;s de la versiones lanzadas.
       </para>
      </listitem>
      <listitem>
       <para>
        Las versiones futuras de la biblioteca est&aacute;n bajo la
        GPL y por lo tanto no contamos con una ruta de
        actualizaci&oacute;n, ya que no podemos distribuir una
        biblioteca GPL en un proyecto con licencia tipo BSD/Apache. Un
        corte limpio en PHP 5 parec&iacute;a la mejor opci&oacute;n.
       </para>
      </listitem>
     </itemizedlist>
     <para>
      Esto en realidad no afectar&aacute; a muchos. Los usuarios de
      Unix, por lo menos aquellos que saben lo que est&aacute;n
      haciendo, tienden a compilar siempre PHP contra sus bibliotecas
      de sistema libmyqlclient agregando la opci&oacute;n <option
      role="configure">--with-mysql=/usr</option> cuando se compila
      PHP. Los usuarios de Windows pueden habilitar la
      extensi&oacute;n <filename>php_mysql.dll</filename> al interior
      de &php.ini;. Para m&aacute;s detalles, vea la <link
      linkend="ref.mysql">Referencia de MySQL</link> sobre las
      instrucciones de instalaci&oacute;n. Tambi&eacute;n,
      aseg&uacute;rese de que <filename>libmysql.dll</filename> se
      encuentre disponible en el PATH del sistema. Para m&aacute;s
      detalles sobre el c&oacute;mo, lea el FAQ sobre <link
      linkend="faq.installation.addtopath">configurar el valor PATH en
      sistemas Windows</link>. Dado que
      <filename>libmysql.dll</filename> (y varios otros archivos
      relacionados) existen en la carpeta de PHP, usted querr&aacute;
      agregar la carpeta de PHP al PATH del sistema.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.shared-mysql">
    <question>
     <para>
      Despu&eacute;s de instalar el soporte de MySQL compartido,
      Apache produce un volcado de memoria tan pronto libphp4.so se
      carga. &iquest;Puede solucionarse esto?
     </para>
    </question>
    <answer>
     <para>
      Si sus bibliotecas de MySQL est&aacute;n enlazadas contra
      pthreads ocurrir&aacute; esto. Verifique usando ldd. Si lo
      est&aacute;n, obtenga las fuentes de MySQL y compile desde
      all&iacute;, o re-compile desde el rpm fuente y elimine el
      conmutador en el archivo spec que habilita el c&oacute;digo de
      cliente con hilos. Cualquiera de estas sugerencias
      solucionar&aacute; el problema. Luego recompile PHP con las
      nueval bibliotecas MySQL.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.databases.mysqlresource">
    <question>
     <para>
      &iquest;Porqu&eacute; recibo un error que luce algo as&iacute;:
      "Warning: 0 is not a MySQL result index in &lt;archivo&gt; on
      line &lt;x&gt;" o "Warning: Supplied argument is not a valid
      MySQL result resource in &lt;archivo&gt; on line &lt;x&gt;?
     </para>
    </question>
    <answer>
     <para>
      Est&aacute; intentando usar un identificador de resultado que es
      0. El 0 indica que su consulta fall&oacute; por alguna
      raz&oacute;n. Necesita verificar errores despu&eacute;s de
      enviar una consulta y antes de que intente usar el identificador
      de resultado devuelto. La manera apropiada de hacerlo es con un
      c&oacute;digo similar al siguiente:
      <programlisting role="php">
<![CDATA[
<?php

$resultado = mysql_query("SELECT * FROM tablas_priv");
if (!$resultado) {
    echo mysql_error();
    exit;
}
?>
]]>
      </programlisting>
      o
      <programlisting role="php">
<![CDATA[
<?php

$resultado = mysql_query("SELECT * FROM tablas_priv")
    or die("Consulta fallida: " . mysql_error());
?>
]]>
      </programlisting>
     </para>
    </answer>
   </qandaentry>
  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
