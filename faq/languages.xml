<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.14 Maintainer: lboshell Status: ready -->
 <chapter id="faq.languages">
  <title>PHP y otros lenguajes</title>
  <titleabbrev>PHP y otros lenguajes</titleabbrev>

  <para>
PHP es el mejor lenguaje para programaci&oacute;n web, &iquest;pero
qu&eacute; hay de los otros lenguajes?
  </para>

  <qandaset>
   <qandaentry id="faq.languages.asp">
    <question>
     <para>&iquest;PHP vs. ASP?</para>
    </question>
    <answer>
     <para>
ASP no es realmente un lenguaje como tal, es el acr&oacute;nimo de
Active Server Pages, el lenguaje usado en realidad para programar ASP
es Visual Basic Script o JScript. El mayor inconveniente de ASP es que
se trata de un sistema propietario que es usado nativamente
s&oacute;lo por Microsoft Internet Information Server (IIS). Esto
limita su disponibilidad a servidores basados en Win32. Existe un par
de proyectos en desarrollo que permiten que ASP corra en otros
entornos y servidores web:
<ulink url="&url.instantasp;">InstantASP</ulink> de <ulink
url="&url.halcyon;">Halcyon</ulink> (comercial), Chili!Soft ASP de 
<ulink url="&url.chilisoft;">Chili!Soft</ulink> (comercial). Se dice
que ASP es un lenguaje m&aacute;s lento y pesado que PHP, y
tambi&eacute;n menos estable. Algunas de las ventajas de ASP consisten
en que debido a que usa principalmente VBScript, es relativamente simple
tratar con el lenguaje si usted ya conoce c&oacute;mo programar en
Visual Basic. El soporte de ASP tambi&eacute;n se encuentra habilitado
por defecto en el servidor IIS, facilitando su instalaci&oacute;n y
ejecuci&oacute;n. Los componentes integrados en ASP son bastante
limitados, de modo que si necesita usar caracter&iacute;sticas
"avanzadas", como interactuar con servidores FTP, necesita comprar
componentes adicionales.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.aspconverter">
    <question>
     <para>&iquest;Existe software de conversi&oacute;n de ASP a
     PHP?</para>
    </question>
    <answer>
     <para>
Si, la herramienta de lado del servidor <ulink
url="&url.asp2php;">asp2php</ulink> es una de las m&aacute;s
conocidas, as&iacute; como <ulink
url="&url.asptranslator;">&eacute;sta opci&oacute;n de lado del
cliente</ulink>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.coldfusion">
    <question>
     <para>&iquest;PHP vs. Cold Fusion?</para>
    </question>
    <answer>
     <para>
Com&uacute;nmente se dice que PHP es m&aacute;s r&aacute;pido y
eficiente para tareas complejas de programaci&oacute;n y cuando se
desea probar ideas nuevas. Asimismo, PHP se considera por lo general
m&aacute;s estable y menos intensivo en el uso de recursos. Cold
Fusion posee un mejor gestor de errores, asi como abstracciones de
bases de datos y procesamiente de fechas, aunque la abstracci&oacute;n
de bases de datos es parte de PHP 4. Otra de las cosas que se lista
como una de las fortalezas de Cold Fusion es su excelente motor de
b&uacute;squeda, pero se ha dicho que un motor de b&uacute;squeda no
es algo que deba ser incluido en un lenguaje de scripting orientado a
web. PHP corre en casi cualquier plataforma que existe; Cold Fusion
s&oacute;lo se encuentra disponible en Win32, Solaris, Linux y HP/UX.
Cold Fusion posee un buen entorno integrado de desarrollo, y es
generalmente m&aacute;s sencillo para principiantes, mientras que PHP
requiere inicialmente de un mayor conocimiento de
programaci&oacute;n. Cold Fusion est&aacute; dise&ntilde;ado hacia
personas sin experiencia en programaci&oacute;n, mientras que PHP se
concentra en los programadores.
     </para>
     <para>
Un excelente resumen sobre este tema, escrito por Michael J Sheldon,
ha sido publicado en la lista de correo de PHP. Puede encontrarse una
copia en <ulink
url="&url.coldfusion.summary;">&url.coldfusion.summary;</ulink>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.languages.perl">
    <question>
     <para>&iquest;PHP vs. Perl?</para>
    </question>
    <answer>
     <para>
La mayor ventaja de PHP sobre Perl es que PHP fue dise&ntilde;ado para
desarrollo de scripts orientados a web, mientras que Perl fue
dise&ntilde;ado para hacer muchas m&aacute;s cosas y debido a esto, se
hace muy complicado. La flexibilidad / complejidad de Perl facilitan
la escritura de c&oacute;digo que otro autor / programador puede
encontrar muy dif&iacute;cil de entender. PHP posee un formato menos
confuso y m&aacute;s estricto, sin perder flexibilidad. Con PHP es
m&aacute;s f&aacute;cil la integraci&oacute;n con HTML que con
Perl. PHP cuenta con pr&aacute;cticamente toda la funcionalidad
'buena' de Perl: construcciones del lenguaje, sintaxis y dem&aacute;s,
sin hacerlo tan complicado como Perl puede llegar a ser. Perl es un
lenguaje muy usado y aut&eacute;ntico, ha estado vigente desde finales
de los ochentas, pero PHP est&aacute; madurando muy
r&aacute;pidamente.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
