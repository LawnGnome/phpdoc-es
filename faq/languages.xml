<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.15 Maintainer: lboshell Status: ready -->
 <chapter xml:id="faq.languages" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>PHP y otros lenguajes</title>
  <titleabbrev>PHP y otros lenguajes</titleabbrev>

  <para>
   PHP es el mejor lenguaje para programación web, ¿pero qué hay de los
   otros lenguajes?
  </para>

  <qandaset>
   <qandaentry xml:id="faq.languages.asp">
    <question>
     <para>¿PHP vs. ASP?</para>
    </question>
    <answer>
     <para>
      ASP no es realmente un lenguaje como tal, es el acrónimo de Active
      Server Pages, el lenguaje usado en realidad para programar ASP es
      Visual Basic Script o JScript. El mayor inconveniente de ASP es que se
      trata de un sistema propietario que es usado nativamente sólo por
      Microsoft Internet Information Server (IIS). Esto limita su
      disponibilidad a servidores basados en Win32. Existe un par de
      proyectos en desarrollo que permiten que ASP corra en otros entornos y
      servidores web: <link xlink:href="&url.instantasp;">InstantASP</link>
      de <link xlink:href="&url.halcyon;">Halcyon</link> (comercial),
      Chili!Soft ASP de <link xlink:href="&url.chilisoft;">Chili!Soft</link>
      (comercial). Se dice que ASP es un lenguaje más lento y pesado que
      PHP, y también menos estable. Algunas de las ventajas de ASP consisten
      en que debido a que usa principalmente VBScript, es relativamente
      simple tratar con el lenguaje si usted ya conoce cómo programar en
      Visual Basic. El soporte de ASP también se encuentra habilitado por
      defecto en el servidor IIS, facilitando su instalación y ejecución.
      Los componentes integrados en ASP son bastante limitados, de modo que
      si necesita usar características "avanzadas", como interactuar con
      servidores FTP, necesita comprar componentes adicionales.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.aspconverter">
    <question>
     <para>¿Existe software de conversión de ASP a PHP?</para>
    </question>
    <answer>
     <para>
      Si, la herramienta de lado del servidor <link
      xlink:href="&url.asp2php;">asp2php</link> es una de las más conocidas,
      así como <link xlink:href="&url.asptranslator;">esta opción de lado
      del cliente</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.coldfusion">
    <question>
     <para>¿PHP vs. Cold Fusion?</para>
    </question>
    <answer>
     <para>
      Comúnmente se dice que PHP es más rápido y eficiente para tareas
      complejas de programación y cuando se desea probar ideas nuevas.
      Asimismo, PHP se considera por lo general más estable y menos
      intensivo en el uso de recursos. Cold Fusion posee un mejor gestor de
      errores, asi como abstracciones de bases de datos y procesamiente de
      fechas, aunque la abstracción de bases de datos es parte de PHP 4.
      Otra de las cosas que se lista como una de las fortalezas de Cold
      Fusion es su excelente motor de búsqueda, pero se ha dicho que un
      motor de búsqueda no es algo que deba ser incluido en un lenguaje de
      scripting orientado a web. PHP corre en casi cualquier plataforma que
      existe; Cold Fusion sólo se encuentra disponible en Win32, Solaris,
      Linux y HP/UX.  Cold Fusion posee un buen entorno integrado de
      desarrollo, y es generalmente más sencillo para principiantes,
      mientras que PHP requiere inicialmente de un mayor conocimiento de
      programación. Cold Fusion está diseñado hacia personas sin experiencia
      en programación, mientras que PHP se concentra en los programadores.
     </para>
     <para>
      Un excelente resumen sobre este tema, escrito por Michael J Sheldon,
      ha sido publicado en la lista de correo de PHP. Puede encontrarse una
      copia en <link
      xlink:href="&url.coldfusion.summary;">&url.coldfusion.summary;</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.perl">
    <question>
     <para>¿PHP vs. Perl?</para>
    </question>
    <answer>
     <para>
      La mayor ventaja de PHP sobre Perl es que PHP fue diseñado para
      desarrollo de scripts orientados a web, mientras que Perl fue diseñado
      para hacer muchas más cosas y debido a esto, se hace muy complicado.
      La flexibilidad / complejidad de Perl facilitan la escritura de código
      que otro autor / programador puede encontrar muy difícil de entender.
      PHP posee un formato menos confuso y más estricto, sin perder
      flexibilidad. Con PHP es más fácil la integración con HTML que con
      Perl. PHP cuenta con prácticamente toda la funcionalidad 'buena' de
      Perl: construcciones del lenguaje, sintaxis y demás, sin hacerlo tan
      complicado como Perl puede llegar a ser. Perl es un lenguaje muy usado
      y auténtico, ha estado vigente desde finales de los ochentas, pero PHP
      está madurando muy rápidamente.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
