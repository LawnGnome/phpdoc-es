<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: lboshell Status: ready -->
<chapter xml:id="faq.using" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Uso de PHP</title>
  <titleabbrev>Uso de PHP</titleabbrev>

  <para>
   Esta sección reúne varios errores comunes que usted puede enfrentar
   cuando escribe scripts PHP.
  </para>

  <qandaset>
   <qandaentry xml:id="faq.using.anyform">
    <question>
     <para>
      Quisiera escribir un script PHP genérico que pudiera manejar datos que
      lleguen desde cualquier formulario. ¿Cómo averiguo qué variables del
      método POST se encuentran disponibles?
     </para>
    </question>
    <answer>
     <para>
      PHP ofrece numerosas <link linkend="language.variables.predefined">
      variables predefinidas</link>, como la super-global <varname>
      $_POST</varname>. Usted podría recorrer <varname>$_POST</varname> con
      un ciclo ya que se trata de una matriz asociativa con todos los
      valores POST. Por ejemplo, puede recorrer la matriz simplemente con
      <link linkend="control-structures.foreach">foreach</link>, realizar un
      chequeo por valores <function>empty</function>, e imprimirlos.
      <programlisting role="php">
<![CDATA[
<?php
$vacio = $post = array();
foreach ($_POST as $nombre_var => $valor_var) {
    if (empty($valor_var)) {
        $vacio[$nombre_var] = $valor_var;
    } else {
        $post[$nombre_var] = $valor_var;
    }
}

print "<pre>";
if (empty($vacio)) {
    print "Ninguno de los valores POST están vacíos, se envió:\n";
    var_dump($post);
} else {
    print "Tenemos " . count($vacio) . " valores vacíos\n";
    print "Se envió:\n"; var_dump($post);
    print "Vacíos:\n";  var_dump($vacio);
    exit;
}
?>
]]>
      </programlisting>
     </para>

     &note.superglobals;

    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.addslashes">
    <question>
     <para>
      Necesito convertir todas las comillas sencillas (') en una barra
      invertida seguida de una comilla sencilla (\'). ¿Cómo puedo hacer esto
      con una expresión regular? También me gustaría convertir " en \" y \
      en \\.
     </para>
    </question>
    <answer>
     <para>
      La función <function>addslashes</function> hace esto. Vea también
      <function>mysql_escape_string</function>. También puede remover las
      barras invertidas con <function>stripslashes</function>.
     </para>

     &note.magicquotes.gpc;

    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.stripslashes">
    <question>
     <para>
      Todos mis caracteres " se convierten en \" y mis ' se convierten en
      \', ¿cómo me deshago de todas esas barras invertidas indeseadas? ¿Cómo
      y porqué llegaron allí?
     </para>
    </question>
    <answer>
     <para>
      La función de PHP <function>stripslashes</function> eliminará todas
      esas barras invertidas de su variable <type>string</type>. Lo más
      posible es que esas barras invertidas existen mágicamente por que la
      directiva de PHP <link
      linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> está activa.
     </para>

     &note.magicquotes.gpc;

    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.register-globals">
    <question>
     <para>
      ¿Cómo me afecta la directiva de PHP register_globals?
     </para>
    </question>
    <answer>
     <para>
      Primero, una explicación sobre lo que hace este parámetro. Digamos que
      la siguiente URL es usada:
      <literal>http://example.com/foo.php?animal=gato</literal> y en
      <filename>foo.php</filename> tenemos algo como lo siguiente:
     </para>
     <para>
      <programlisting role="php">
<![CDATA[
<?php
// El uso de $_GET aquí es lo más recomendable
echo $_GET['animal'];

// Para que $animal exista, register_globals debe habilitarse
// NO LO HAGA
echo $animal;

// Esto se aplica a todas las variables, así que ocurre lo mismo con
// $_SERVER
echo $_SERVER['PHP_SELF'];

// De nuevo, para que $PHP_SELF exista, register_globals debe habilitarse
// NO HAGA ESTO
echo $PHP_SELF;
?>
]]>
     </programlisting>
    </para>
    <para>
     El código anterior demuestro cómo register_globals crea bastantes
     variables. Por años, este tipo de código ha sido menospreciado, y por
     años esta opción ha estado deshabilitada de forma predeterminada. Note
     que PHP 6 elimina esta funcionalidad obsoleta. Así que aunque la
     mayoría de hospedajes web deshabilitan register_globals, aun existen
     artículos, tutoriales y libros desactualizados que dependen de su uso.
     Planee su código acordemente.
    </para>
    <para>
     Vea también los siguientes recursos para más información:
     <simplelist>
      <member>La directiva <link linkend="ini.register-globals">register_globals</link></member>
      <member>El <link linkend="security.globals">capítulo de seguridad
      sobre el registro de globales</link></member>
      <member><link linkend="language.variables.external">Gestión de
      variables externas</link></member>
      <member>Use las <link
      linkend="language.variables.superglobals">superglobales</link> en su
      lugar</member>
     </simplelist>
    </para>
    <note>
     <para>
      En el ejemplo anterior, usamos una <acronym>URL</acronym> que contenía
      una QUERY_STRING. El paso de información de esta manera se hace a
      través de una petición HTTP GET, así que por eso se usó la superglobal
      <varname>$_GET</varname>.
     </para>
    </note>
   </answer>
  </qandaentry>

   <qandaentry xml:id="faq.using.wrong-order">
    <question>
     <para>
      Cuando hago lo siguiente, la salida se imprime en el orden equivocado:
     <programlisting role="php">
<![CDATA[
<?php
function mi_funcion($argumento)
{
    echo $argumento + 10;
}
$variable = 10;
echo "mi_funcion($variable) = " . mi_funcion($variable);
?>
]]>
    </programlisting>
      ¿qué sucede?
     </para>
    </question>
    <answer>
     <para>
      Para poder usar los resultados de su función en una expresión (como
      ocurre al concatenar con otras cadenas, como en el ejemplo anterior),
      necesita devolver el valor mediante <function>return</function>, no
      imprimirlo con <function>echo</function>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.newlines">
    <question>
     <para>
      ¿Hey, qué ha sucedido con mis saltos de línea?
      <programlisting role="php">
<![CDATA[
<pre>
<?php echo "Esta debe ser la primera línea."; ?>
<?php echo "Esto debe aparecer después de la nueva línea anterior."; ?>
</pre>
]]>
      </programlisting>
     </para>
    </question>
    <answer>
     <para>
      En PHP, el final de un bloque de código es, o bien "?&gt;" o "?&gt;\n"
      (en donde \n quiere decir una nueva línea). De modo que en el ejemplo
      anterior, las sentencias impresas con echo estarán en una línea,
      puesto que PHP omite los saltos de línea después del final del bloque.
      Esto quiere decir que usted necesita insertar un salto de línea extra
      después de cada bloque de código PHP para hacer que imprima una nueva
      línea.
     </para>
     <para>
      ¿Porqué hace esto PHP? Por que al dar formato a un documento HTML
      normal, este comportamiento por lo general hace su vida más simple, ya
      que no desea ese salto de línea, pero tendría que crear líneas
      extremadamente largas o de otra forma hacer ilegible el código fuente
      base para lograr ese efecto.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.headers-sent">
    <question>
     <para>
      Recibo el mensaje 'Warning: Cannot send session cookie - headers
      already sent...' o 'Cannot add header information - headers already
      sent...'.
     </para>
    </question>
    <answer>
     <para>
      Las funciones <function>header</function>,
      <function>setcookie</function>, y las <link
      linkend="ref.session">funciones de sesión</link> necesitan agregar
      cabeceras a la secuencia de salida, pero las cabeceras sólo pueden ser
      enviadas antes del resto del contenido. No puede haber salida antes de
      usar éstas funciones, salida como HTML. La función
      <function>headers_sent</function> revisa si su script ya ha enviado
      las cabeceras, y asimismo consulte las <link
      linkend="ref.outcontrol">funciones de Control de Salida</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.header">
    <question>
     <para>
      Necesito acceder a información directamente de las cabeceras de la
      petición. ¿Cómo puedo hacer esto?
     </para>
    </question>
    <answer>
     <para>
      La función <function>getallheaders</function> hará esto si está
      ejecutando PHP como módulo de Apache. Así que, el siguiente segmento
      de código le mostrará todas las cabeceras de petición:
      <programlisting role="php">
<![CDATA[
<?php
$cabeceras = getallheaders();
foreach ($cabeceras as $nombre => $contenido) {
    echo "cabeceras[$nombre] = $contenido<br />\n";
}
?>
]]>
      </programlisting>
     </para>
     <para>
      Vea también <function>apache_lookup_uri</function>,
      <function>apache_response_headers</function>, y
      <function>fsockopen</function>
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.authentication">
    <question>
     <para>
      Cuando intento usar autenticación con IIS, recibo el mensaje 'No Input
      file specified'.
     </para>
    </question>
    <answer>
     <para>
      El modelo de seguridad de IIS es la causa del problema aquí. Este es
      un inconveniente común a todos los programas CGI que corren bajo IIS.
      Una forma de evitar el problema es crear un archivo HTML plano (no
      interpretado por PHP) como página de entrada en un directorio
      autenticado. Luego usar una etiqueta META para redirigir a la página
      PHP, o tener un enlace hacia la página PHP. PHP reconocerá entonces la
      autenticación correctamente. Con el módulo ISAPI, esto no es un
      problema. Este inconveniente no debe afectar otros servidores web NT.
      Para más información, vea: <link
      xlink:href="&url.iis;">&url.iis;</link> y la sección del manual sobre
      <link linkend="features.http-auth">Autenticación HTTP</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.iis.sharing">
    <question>
     <para>
      Windows: No puedo acceder a archivos compartidos en otra computadora
      usando IIS
     </para>
    </question>
    <answer>
     <para>
      Necesita modificar el valor <literal>Go to Internet Information
      Services</literal>. Ubique su archivo PHP y diríjase a sus
      propiedades. Vaya a la pestaña <literal>Seguridad de
      Archivo</literal>, <literal>Editar -&lt; Acceso anónimo y control de
      autenticación</literal>.
     </para>
     <para>
      Puede solucionar el problema ya sea deshabilitando <literal>Acceso
      Anónimo</literal> y dejando habilitado <literal>Autenticación
      Integrada</literal>, o habilitando <literal>Acceso Anónimo</literal> y
      editando el usuario ya que éste puede no tener el acceso bien
      definido.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.netscape">
    <question>
     <para>
      Mi script PHP funciona en IE y Lynx, pero en Netscape parte de mi
      salida está faltando. Cuando acciono "Ver código fuente" veo el
      contenido en IE pero no en Netscape.
     </para>
    </question>
    <answer>
     <para>
      Netscape es más estricto que IE en cuanto a etiquetas HTML (como
      tablas) se refiere. Pasar su salida HTML a través de un validador de
      HTML, como <link
      xlink:href="&url.w3.validator;">validator.w3.org</link>, puede ser de
      ayuda. Por ejemplo, una etiqueta &lt;/table&gt; faltante puede ser la
      causa de éste problema.
     </para>
     <para>
      Asimismo, tanto IE como Lynx ignoran los caracteres NUL
      (<literal>\0</literal>) en la secuencia HTML, mientras que Netscape
      no. La mejor manera de chequear esto es compilar la versión de <link
      linkend="features.commandline">línea de comandos</link> de PHP
      (también conocida como la versión CGI) y ejecutar su script desde la
      línea de comandos. En *nix, envíe la salida a través de un pipe a
      <literal>od -c</literal> y busque caracteres <literal>\0</literal>. Si
      se encuentra en Windows necesita un editor o algún otro programa que
      le permita ver archivos binarios. Cuando Netscape ve un NUL en un
      archivo, típicamente no imprimirá nada más en aquella línea, mientras
      que tanto IE como Lynx si lo hacen.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.mixml">
    <question>
     <para>
      ¿Cómo se supone que mezcle XML y PHP? ¡Se queja sobre mis etiquetas
      &lt;?xml!
     </para>
    </question>
    <answer>
     <para>
      Para poder embeber etiquetas &lt;?xml directamente en su código PHP,
      tendrá que deshabilitar las etiquetas cortas, definiendo la directiva
      PHP <link linkend="ini.short-open-tag">short_open_tags</link> como
      <literal>0</literal>. No puede definir esta directiva con
      <function>ini_set</function>. Independientemente del valor de <link
      linkend="ini.short-open-tag">short_open_tags</link>, usted puede hacer
      algo como: <literal>&lt;?php echo '&lt;?xml'; ?&gt;</literal>. El
      valor predeterminado para esta directiva es on.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.editor">
    <question>
     <para>
      ¿Cómo puedo usar PHP con FrontPage u otro editor HTML que insiste en
      mover mi código por todas partes?
     </para>
    </question>
    <answer>
     <para>
      Una de las cosas más fáciles es habilitar el uso de etiquetas ASP en
      su código PHP. Esto le permite usar el estilo de delimitadores de
      código ASP &lt;% y
      %&gt;. Algunos de los editores HTML populares gestionan
      éstas etiquetas de forma más inteligente (por ahora). Para habilitar
      las etiquetas estilo-ASP, necesita definir la variable &php.ini; <link
      linkend="ini.asp-tags">asp_tags</link>, o usar la directiva de Apache
      apropiada.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.variables">
    <question>
     <para>
      ¿En dónde puedo encontrar una lista completa de variables disponibles
      en PHP?
     </para>
    </question>
    <answer>
     <para>
      Consulte la página del manual sobre <link
      linkend="language.variables.predefined">variables predefinidas</link>,
      ya que allí se incluye una lista parcial de variables predefinidas
      disponibles para su script. Una lista completa de variables
      disponibles (y mucha más información) puede ser consultada al llamar
      la función <function>phpinfo</function>. Asegúrese de leer la sección
      del manual sobre <link linkend="language.variables.external">variables
      externas a PHP</link> ya que allí se describen escenarios comunes para
      variables externas, como las provenientes de formularios HTML, Cookies
      y URLs.
     </para>

     &note.registerglobals;

    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.freepdf">
    <question>
     <para>
      ¿Cómo puedo generar archivos PDF sin usar las bibliotecas no-libres y
      comerciales como <link linkend="ref.pdf">PDFLib</link>? Quisiera algo
      que fuera gratuito y no requiera de bibliotecas PDF externas.
     </para>
    </question>
    <answer>
     <para>
      Existen algunas pocas alternativas escritas en PHP, como <link
      xlink:href="&url.pdf.ros;">&url.pdf.ros;</link>, <link
      xlink:href="&url.pdf.fpdf;">&url.pdf.fpdf;</link>, <link
      xlink:href="&url.pdf.pdf4php;">&url.pdf.pdf4php;</link>, y <link
      xlink:href="&url.pdf.phppdflib;">&url.pdf.phppdflib;</link>. También
      existe el módulo <link xlink:href="&url.pdf.panda;">Panda</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.cgi-vars">
    <question>
     <para>
      Estoy tratando de acceder a una de las variables CGI estándar (como
      $DOCUMENT_ROOT o $HTTP_REFERER) en una función definida por el
      usuario, y parece que no la encuentra. ¿Qué está fallando?
     </para>
    </question>
    <answer>
     <para>
      Es importante darse cuenta de que la directiva PHP <link
      linkend="ini.register-globals">register_globals</link> también afecta
      a variables de servidor y de entorno. Cuando register_globals = off
      (el valor predeterminado es off a partir de PHP 4.2.0),
      <varname>$DOCUMENT_ROOT</varname> no existirá. En su lugar, use
      <varname>$_SERVER['DOCUMENT_ROOT']</varname>. Si register_globals = on
      entonces las variables <varname>$DOCUMENT_ROOT</varname> y
      <varname>$GLOBALS['DOCUMENT_ROOT']</varname> existirán también.
     </para>
     <para>
      Si está seguro de que register_globals = on y se pregunta porqué
      <varname>$DOCUMENT_ROOT</varname> no se encuentra disponible al
      interior de funciones, es porque éste tipo de variables es como
      cualquier otra, y requeriría de una sentencia <literal>global
      $DOCUMENT_ROOT</literal> al interior de la función. Vea también la
      página del manual sobre los <link
      linkend="language.variables.scope">contextos de variables</link>. Es
      recomendable escribir código bajo el modelo register_globals = off.
     </para>

     &note.superglobals;

    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.using.shorthandbytes">
    <question>
     <para>
      Algunas directivas de PHP pueden recibir también atajos de valores de
      bytes, en lugar de recibir sólamente valores de bytes tipo
      <type>integer</type>. ¿Cuáles son todas las opciones de atajos de
      valores de byte disponibles?  ¿Y puedo usarlos por fuera de &php.ini;?
     </para>
    </question>
    <answer>
     <para>
      Las opciones disponibles son K (para Kilobytes), M (para Megabytes) y
      G (para Gigabytes; disponible desde PHP 5.1.0), las cuales son
      insensibles a mayúsculas y minúsculas. Cualquier otro valor asume
      bytes. <literal>1M</literal> es igual a un Megabyte o
      <literal>1048576</literal> bytes. <literal>1K</literal> es igual a un
      Kilobyte o <literal>1024</literal> bytes. No debería usar éstas
      notaciones cortas por fuera de &php.ini;, en su lugar use un valor
      <type>integer</type> de bytes. Vea la documentación de
      <function>ini_get</function> para un ejemplo sobre cómo convertir
      tales valores.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
