<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: rafael Status: ready -->

<chapter xml:id="configuration" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Configuración del comportamiento de PHP</title>

 <sect1 xml:id="configuration.file">
  <title>El archivo de configuración</title>

  <simpara>
   El archivo de configuración (&php.ini;) es leído cuando arranca PHP. Para
   las versiones de PHP como módulo de servidor esto sólo ocurre una vez al
   arrancar el servidor web. Para la versión <acronym>CGI</acronym> y
   <acronym>CLI</acronym>, esto ocurre en cada llamada.
  </simpara>
  <para>
    &php.ini; es buscado en las siguientes ubicaciones (en orden):
    <itemizedlist>
     <listitem>
      <para>
       La ubicación particular del módulo SAPI (la directiva
       <literal>PHPIniDir</literal> en Apache 2, la opción de línea de
       comandos <literal>-c</literal> en CGI y CLI, el parámetro
       <literal>php_ini</literal> en NSAPI, la variable de entorno
       <literal>PHP_INI_PATH</literal> en THTTPD)
      </para>
     </listitem>
     <listitem>
      <para>
       La variable de entorno <varname>PHPRC</varname>. Antes de PHP 5.2.0,
       ésta era chequeada después que la llave de registro mencionada más
       adelante.
      </para>
     </listitem>
     <listitem>
      <para>
       A partir de PHP 5.2.0, las siguientes ubicaciones del registro son
       verificadas en orden:
       <literal>HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x.y.z\IniFilePath</literal>,
       <literal>HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x.y\IniFilePath</literal> y
       <literal>HKEY_LOCAL_MACHINE\SOFTWARE\PHP\x\IniFilePath</literal>, en
       donde x, y y z quieren decir las versiones mayor, menor y de
       lanzamiento.
      </para>
     </listitem>
     <listitem>
      <para>
       <literal>HKEY_LOCAL_MACHINE\SOFTWARE\PHP\IniFilePath</literal>
       (ubicación del Registro de Windows)
      </para>
     </listitem>
     <listitem>
      <para>
       El directorio actual de trabajo (excepto en CLI)
      </para>
     </listitem>
     <listitem>
      <para>
       El directorio del servidor web (para módulos SAPI), o el directorio
       de PHP (de otra forma en Windows)
      </para>
     </listitem>
     <listitem>
      <para>
       El directorio de Windows (<filename
       class="directory">C:\windows</filename> o <filename
       class="directory">C:\winnt</filename>) (para Windows), o la opción de
       tiempo de compilación <literal>--with-config-file-path</literal>
      </para>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Si <filename>php-SAPI.ini</filename> existe (en donde SAPI es la SAPI
    usada, entonces el nombre de archivo es p.ej.
    <filename>php-cli.ini</filename> o <filename>php-apache.ini</filename>),
    éste es usado en lugar de &php.ini;. El nombre de la SAPI puede
    determinarse por medio de <function>php_sapi_name</function>.
   </para>
  <note>
   <para>
    El servidor web Apache cambia al directorio raiz al arrancar, por ello
    PHP intentará leer el archivo &php.ini; en el directorio raiz, si
    existe.
   </para>
  </note>
  <para>
   Las directivas &php.ini; gestionadas por extensiones están documentadas
   en cada una de las páginas de las extensiones respectivamente. La <link
   linkend="ini">lista de directivas de núcleo</link> se encuentra
   disponible en el apéndice.La mayoria de directivas PHP estan listadas en
   <function>ini_set</function> con los respectivos permisos y enlaces a la
   documentacion. Para obtener una lista completa de todas las directivas
   disponibles en su versión de PHP, por favor lea su archivo &php.ini;, el
   cual debe estar bien documentado. Alternativamente, puede encontrar útil
   la última versión del archivo <link
   xlink:href="&url.php.cvs.phpini;">&php.ini;</link> desde CVS.
  </para>
  <para>
   <example>
    <title>Ejemplo de &php.ini;</title>
    <programlisting role="ini">
<![CDATA[
; todo texto en una línea después de un punto-y-coma sin escapar (;) es ignorado
[php] ; los marcadores de sección (texto entre corchetes) son ignorados también
; Los valores booleanos pueden definirse a cualquiera de los siguientes:
;    true, on, yes
; ó  false, off, no, none
register_globals = off
track_errors = yes

; es posible encerrar cadenas entre comillas dobles
include_path = ".:/usr/local/lib/php"

; las barras invertidas son tratadas igual que cualquier otro caracter
include_path = ".;c:\php\lib"
]]>
</programlisting>
<!-- TODO: add more details about values and expressions -->
   </example>
  </para>
   <para>
    Desde PHP 5.1.0, es posible hacer referencia a variables .ini existentes
    desde el interior de archivos .ini. Por ejemplo: <literal>open_basedir =
    ${open_basedir} ":/nuevo/directorio"</literal>.
   </para>
  </sect1>

  <sect1 xml:id="configuration.changes.modes">
   <title>En dónde puede definirse un valor de configuración</title>

   <para>
    Estos modos determinan cuándo y dónde puede o no definirse una directiva
    de PHP, y cada directiva dentro del manual hace referencia a uno de
    estos modos. Por ejemplo, algunos parámetros pueden definirse dentro de
    un script PHP usando <function>ini_set</function>, mientras que otros
    pueden requerir &php.ini; o &httpd.conf;.
   </para>

   <para>
    Por ejemplo, el parámetro <link
    linkend="ini.output-buffering">output_buffering</link> es de tipo
    <literal>PHP_INI_PERDIR</literal>, así que no puede definirse usando
    <function>ini_set</function>. Sin embargo, la directiva <link
    linkend="ini.display-errors">display_errors</link> es
    <literal>PHP_INI_ALL</literal>, así que puede definirse en cualquier
    lugar, incluyendo al interior de scripts con
    <function>ini_set</function>.
   </para>

   <para>
    <table>
     <title>Definición de modos PHP_INI_*</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Modo</entry>
        <entry>Significado</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><literal>PHP_INI_USER</literal></entry>
        <entry>
         La entrada puede definirse en scripts de usuario (como con
         <function>ini_set</function>) o en el <link
         linkend="configuration.changes.windows">registro de Windows</link>
        </entry>
       </row>
       <row>
        <entry><literal>PHP_INI_PERDIR</literal></entry>
        <entry>La entrada puede definirse en &php.ini;, &htaccess; o
        &httpd.conf;</entry>
       </row>
       <row>
        <entry><literal>PHP_INI_SYSTEM</literal></entry>
        <entry>La entrada puede definirse en &php.ini; o
        &httpd.conf;</entry>
       </row>
       <row>
        <entry><literal>PHP_INI_ALL</literal></entry>
        <entry>La entrada puede definirse en cualquier parte</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
 </sect1>

 <sect1 xml:id="configuration.changes">
   <title>Cómo cambiar los valores de la configuración</title>

   <sect2 xml:id="configuration.changes.apache">
   <title>Ejecución de PHP como un módulo de Apache</title>
   <simpara>
    Cuando se usa PHP como un módulo de Apache, se pueden cambiar valores de
    la configuración usando directivas en los archivos de configuración de
    apache, &httpd.conf; y &htaccess;. Necesitará de los privilegios
    "AllowOverride Options" o "AllowOverride All" para hacerlo.
   </simpara>

   <para>
    Hay varias directivas Apache que permiten cambiar la configuración de
    PHP desde los archivos de configuración de apache. Para obtener una
    lista de que directivas son del tipo <constant>PHP_INI_ALL</constant>,
    <constant>PHP_INI_PERDIR</constant>, ó
    <constant>PHP_INI_SYSTEM</constant>, consultar el apéndice <link
    linkend="ini.list">Lista de directivas php.ini</link>.
   </para>

   <para>
    <variablelist>
     <varlistentry>
      <term>
       <systemitem role="directive">php_value</systemitem>
       <parameter>nombre</parameter>
       <parameter>valor</parameter>
      </term>
      <listitem>
       <para>
        Asigna el valor de la directiva especificada. Puede ser usado
        solamente con directivas del tipo <constant>PHP_INI_ALL</constant> y
        <constant>PHP_INI_PERDIR</constant>. Para borrar un valor previo,
        asignar <literal>none</literal> como valor
       </para>
       <note>
        <simpara>
         No use <systemitem role="directive">php_value</systemitem> para
         definir valores booleanos. Debería usarse <systemitem
         role="directive">php_flag</systemitem> en su lugar (vea más abajo).
        </simpara>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_flag</systemitem>
       <parameter>nombre</parameter>
       <parameter>on|off</parameter>
      </term>
      <listitem>
       <para>
        Usado para asignar una directiva de configuración booleana. Puede
        ser usado solamente con directivas del tipo
        <constant>PHP_INI_ALL</constant> y
        <constant>PHP_INI_PERDIR</constant>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_admin_value</systemitem>
       <parameter>nombre</parameter>
       <parameter>valor</parameter>
      </term>
      <listitem>
       <para>
        Asigna el valor de la directiva especificada. Esto <emphasis>no
        puede usarse</emphasis> en archivos &htaccess;. Todo tipo de
        directiva asignada con <systemitem
        role="directive">php_admin_value</systemitem> no puede ser cambiada
        con &htaccess; ó <function>ini_set</function>.  Para borrar un valor
        previo, asignar <literal>none</literal> como valor.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>
       <systemitem role="directive">php_admin_flag</systemitem>
       <parameter>nombre</parameter>
       <parameter>on|off</parameter>
      </term>
      <listitem>
       <para>
        Usado para asignar una directiva de configuración
        booleana. Esto <emphasis>no puede usarse</emphasis> en
        archivos &htaccess;. Todo tipo de directiva asignada con
        <systemitem role="directive">php_admin_flag</systemitem> no
        puede ser cambiada con &htaccess;.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    <example>
     <title>Ejemplo de configuración de Apache</title>
     <programlisting role="ini">
<![CDATA[
<IfModule mod_php5.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
]]>
     </programlisting>
    </example>
   </para>
   <caution>
    <para>
     Las Constantes en PHP no existen fuera de PHP. Por ejemplo, en
     &httpd.conf; no se pueden usar constantes PHP tales como
     <constant>E_ALL</constant> ó
     <constant>E_NOTICE</constant> para definir la directiva <link
      linkend="ini.error-reporting">error_reporting</link>, ya que no
     tendrá ningún significado y será evaluada
     como <emphasis>0</emphasis>. Usar los valores asociados de
     "bitmask" en su lugar. Estas constantes pueden ser usadas en
     &php.ini;
    </para>
   </caution>
  </sect2>

  <sect2 xml:id="configuration.changes.windows">
   <title>Modificación de la configuración de PHP usando el registro de
   Windows</title>
   <simpara>
    Cuando se usa PHP en Windows, se pueden cambiar los valores de
    configuración para cada directorio por medio de los registros de
    Windows. Los valores de configuración se guardan en la llave de registro
    <literal>HKLM\SOFTWARE\PHP\Per Directory Values</literal>, en las
    subllaves correspondientes al PATH. Por ejemplo, los valores de
    configuracion del directorio <literal>c:\inetpub\wwwroot</literal> se
    guardarán en <literal>HKLM\SOFTWARE\PHP\Valores Por
    Directorio\c\inetpub\wwwroot</literal>. La configuración de un
    directorio es válida para todos los scripts ejecutados en el mismo y sus
    subdirectorios. Los valores en la llave deben de definirse con el nombre
    de la directiva de configuración de PHP y el valor tipo cadena. Las
    constantes PHP en los valores no son analizadas. Sin embargo, sólo los
    valores de configuración modificables en
    <constant>PHP_INI_USER</constant> pueden definirse de esta forma, los
    valores <constant>PHP_INI_PERDIR</constant> no.
   </simpara>
  </sect2>

  <sect2 xml:id="configuration.changes.other">
    <title>Otras interfaces con <literal>PHP</literal></title>

    <para>
     Independientemente del modo en que ejecute PHP, es posible
     cambiar ciertos valores en tiempo de ejecución usando
     <function>ini_set</function>. Vea la documentación en la
     página sobre <function>ini_set</function> para más
     información.
    </para>
    <para>
     Si está interesado en una lista completa de
     parámetros de configuración en su sistema con sus
     valores actuales, puede ejecutar la función
     <function>phpinfo</function>, y revisar la página
     resultante. También puede acceder a los valores de
     directivas de configuración individuales en tiempo de
     ejecución usando <function>ini_get</function> o
     <function>get_cfg_var</function>.
    </para>

   </sect2>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
