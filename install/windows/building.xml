<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 298269 Maintainer: jorgeolaya Status: ready -->
<sect1 xml:id="install.windows.building" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Construcción de la fuente</title>
 <para>
 En este capítulo se enseña a compilar PHP a partir de fuentes en Windows, usando 
 Microsoft's tools. Para compilar PHP con cygwin, por favor vaya a <xref
  linkend="install.unix"/>.
 </para>
 <para>
  Esta documentación le dará un entendimiento básico de cómo compilar 
  PHP en Windows. Esta guía toma ventajas de las mejoras introducidas 
  para el sistema de construcción disponible en PHP 5.3.0 y superiores. 
 </para>
 
 <sect2 xml:id="install.windows.building.getting-started">
  <title>Primeros pasos</title>
  <para>
   Antes de poder compilar PHP vamos a necesitar un compilador y 
   algunas de las muchas librerías que depende de PHP.
    El único compilador soportado en Windows es <literal>MSVC</literal>
   (Microsoft Visual C++). Es soportado las versiones 6 y superior, 
   sin embargo para un mejor rendimiento es recomendado Visual C++ 2008 o superior.
   Esta documentación utiliza Visual C++ 2008 
   y PHP 5.3.x como base. 
  </para>
  <para>
   Visual C++ existe en dos ediciones, una edición comercial (Visual Studio)
   y una "Express" edición, que es gratis disponible en Microsoft. 
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.building.install-vs">
  <title>Instalación usando Visual Studio</title>
  <para>
    Cuando instala Visual Studio, se le pide que elija 
   los componentes que desea utilizar, aquí tiene que marcar el componente
   "Visual C++". Si planea compilar versiones x64 
   de PHP, debe seleccionar el componente compilador x64 después de  
    "Visual C++".
  </para>
  <para>
   Si ya ha instalado Visual Studio, inserte el DVD 
   y seleccione "Agregar o quitar componentes", y siga el procedimiento 
   anterior para instalar el compilador. 
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.building.install-express">
  <title>Instalación utilizando Visual C++ Express</title>
  <para>
  Visual C++ Express está disponible de forma gratuita desde Microsoft en: 
   <link xlink:href="&url.vc2k8ee;">&url.vc2k8ee;</link>.
  </para>
  <para>
   Antes de la instalación, el asistente de instalación le pide que instale 
   componentes adicionales, tales como SQL Server, Silverlight y así sucesivamente, ninguno 
   de estos son necesarios para la compilación de PHP. 
  </para>
 </sect2>
 
  <sect2 xml:id="install.windows.building.install-sdk">
  <title>Instalación de la Plataforma Windows SDK</title>
  <para>
   Antes de PHP poder ser compilado, se necesita el SDK de la plataforma Windows. Por defecto 
   Visual C++ viene con Windows Platform SDK version 6.0A, sin embargo esto  
   no podra utilizarce debido a la incompatibilidad con las versiones anteriores de SDK. 
   Así Windows Platform SDK 2008, nesesita la versión 6.1.
    El SDK está libremente disponible en Microsoft en: 
  <link xlink:href="&url.win32.platform-sdk-2k8;">&url.win32.platform-sdk-2k8;</link>.
  </para>
  <para>
  Al descargar el SDK, seleccione instalar web, ya que sólo tendrá que seleccionar componentes. 
   Cuando la descarga se hace y la configuración le pide que seleccione 
   los componentes que  se necesitan, seleccione el compilador C++ (no olvide marcar el 
   compilador x64,  si quiere compilar la versión de 64 bits de PHP). No se necesita ninguna 
   otras herramientas, como CrystalReports, Mobile Development tools, ni otra, sólo las
   librerías C++, cabeceras y compiladores. 
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.building.setup-dir-struct">
  <title>Estructura de directorios</title>
  <para>
   Ahora tenemos que crear una estructura de directorios de los fuentes de PHP, donde es 
   situado, así como las librerías  predeterminadas necesarias para la compilación de PHP.
    La estructura de abajo es simple y facil de usar, sin embargo no se esta obligado a tenerla 
   exactamente como esta, pero es fácil examinar. 
  </para>
  <para>
   <example>
    <title>Origen y Estructura del directorio de fuentes y de cadena de herramientas</title>
    <programlisting role="txt">
<![CDATA[
C:.
+---php
|   +---src                       <- Aquí se encuentran lo fuentes de PHP
|   +---win32build                <- Cadena de herramientas y librerías para x86 (32 bit) versions
|   |   +---bin                   <- Cadena de herramientas
|   |   +---include               <- Ficheros de cabecera
|   |   +---lib                   <- Ficheros de libreria
|   +---win64build                <- Cadena de herramientas y librerías para  x64 (64 bit) versión (opcional)
|       +---bin                   <- Cadena de herramientas
|       +---include               <- Ficheros de cabecera
|       +---lib                   <- Ficheros de libreria
]]>
    </programlisting>
   </example>
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.building.setup-source">
  <title>Conseguir los fuentes de PHP</title>
  <para>
  Hay varias maneras de obtener los fuentes de PHP, ya sea desde los paquetes de código fuente o 
  directamente desde el repositorio SVN PHP. 
  Esta documentación simplemente asumirá cualquier opción y fuente que elija  o bien haber sido
   extraídos/chequeados en el directorio <literal>"C:\php\src\"</literal>
   de la estructura de directorios de arriba. 
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.building.setup-toolchain">
  <title>Obtener la cadena de herramientas PHP</title>
  <para>
   Para compilar PHP, se nesesita una cadena de herramientas de diferentes programas para la compilacion
   y la vinculación de extensiones por defecto. Estos estan disponibles en un único fichero zip 
   en el repositorio de PHP para Windows: 
   <link xlink:href="&url.win32.binary-tools;">&url.win32.binary-tools;</link>.
  </para>
  <para>
   Extraído este fichero zip se ajusta a la estructura de directorios para el directorio
   <literal>"C:\php\win32build\"</literal>. Si está planeando
   compilar versiones de 64 bits de PHP, tiene que hacer lo mismo con el directorio
   <literal>"C:\php\win64build\"</literal>.
   Esto está bien como las herramientas son independientes de la plataforma.
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.building.setup-libs">
  <title>Consiguiendo las librerías necesarias para PHP</title>
  <para>
   PHP es un lenguaje pegajoso , y depende de muchas librerías  
   para poder funcionar. Por defecto PHP requiere un conjunto de librerías 
   para la compilación del núcleo (Engine, CLI SAPI y las librerías estándar).
  </para>
  <para>
   Estas están disponibles en PHP.net, organizadas en las versiones de compilador y arquitecturas de máquina. 
   Un estándar de PHP requiere las siguientes 
   librerías obligatoria: 
  </para>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>ICU</simpara>
    </listitem>
    <listitem>
     <simpara>iconv (libiconv)</simpara>
    </listitem>
    <listitem>
     <simpara>libxml2</simpara>
    </listitem>
    <listitem>
     <simpara>zlib</simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
  Si planea compilar una versión  <literal>standard</literal> de PHP. 
  Compile todas las extensiones por defecto y ejecútelas <literal>configure</literal> sin argumentos,
   también necesitará las siguientes librerías adicionales para GD: 
  </para>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>FreeType</simpara>
    </listitem>
    <listitem>
     <simpara>libpng</simpara>
    </listitem>
    <listitem>
     <simpara>libjpeg</simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
  Todas estas librerías son paquetes y están publicadas en la siguiente URL: 
   <link xlink:href="&url.win32.build-libs;">&url.win32.build-libs;</link>.
  </para>
  <para>
   En el lugar anteriormente mencionado, las librerías están organizadas para cada compilador 
   que fueron usados para compilar cada  plataforma de arquitectura.
   A continuación se detalla el nombre de las diferentes variantes  
   para cada compilador. 
  </para>
  <para>
   <itemizedlist>
    <listitem>
     <simpara><literal>VC6</literal> - Visual C++ 6.0</simpara>
    </listitem>
    <listitem>
     <simpara><literal>VC8</literal> - Visual C++ 2005</simpara>
    </listitem>
    <listitem>
     <simpara><literal>VC9</literal> - Visual C++ 2008</simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   Cuando se ha descargado las librerías obligatorias y/o cualquier librería adicional que 
   se requiera, a continuación, respectivamente cada estructura de directorios establecidos 
   <literal>"C:\php\winXXbuild\"</literal>, Por lo que las cabeceras se encuentran en el directorio <literal>include</literal>
   y los ficheros de la libreria en el directorio <literal>libs</literal>. 
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.building.setup-env">
  <title>Configuración del entorno</title>
  <para>
  Antes de poder compilar PHP, debemos modificar la variable de entorno <varname>PATH</varname>  por lo que el <literal>configure</literal>
  script puede  recoger la cadena de herramientas  en el directorio <literal>"C:\php\winXXbuild\bin\"</literal> 
  Para ello, abra el menú Inicio y haga clic derecho en "PC" 
   y seleccione "Propiedades". Seleccione la pestaña "Avanzado", y pulsa el botón diciendo 
   "Las variables de entorno". En la sección de variables globales, encuentre la 
   <varname>PATH</varname> variable y seleccione "Editar". Anexe el texto siguiente a su 
   valor actual:<literal>;C:\php\win32build\bin</literal> y para soportar 64bit:
   <literal>;C:\php\win32build\bin;C:\php\win64build\bin</literal>.
  </para>
  <para>
  Ahora debe crear la siguiente estructura de directorio en el disco que está 
   utilizando para compilar en: 
  </para>
  <para>
   <example>
    <title>Estructura de directorios bison.simple</title>
    <programlisting role="txt">
<![CDATA[
C:.
+---usr
|   +---local
|       +---share
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Ahora copia el fichero <literal>"C:\php\win32build\bin\bison.simple"</literal> 
   dentro de el directorio <literal>"C:\usr\local\share"</literal>.
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.building.compiling">
  <title>Compilar</title>
  <para>
   Ahora PHP está listo para ser compilado, abra el menú Inicio, seleccione "Programas" 
   y encuentre "Microsoft Visual Studio" (o "Microsoft Visual C++"), seleccione la opción 
   carpeta de herramientas y abra "Visual Studio 2008 Command Prompt". Esto abrirá una 
   ventana de la consola diciendo "Configuración del entorno para XXX", donde XXX puede ser o bien 
   x86 o x64. Si desea compilar la versión de 64 bits de PHP, debe ejecutar
lo siguiente
  </para>   
  <para>
   <example>
    <title>Configuración del entorno para la compilación x64</title>
    <programlisting role="txt">
<![CDATA[
cd bin
vcvarsx86_amd64
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Ahora<literal>cd</literal> al <literal>"C:\php\src\"</literal> directorio y ejecute
   el script de esta manera <literal>buildconf</literal>:
  </para>
  <para>
   <example>
    <title>Correr buildconf</title>
    <programlisting role="txt">
<![CDATA[
buildconf
Now run 'configure --help'
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Esto significa que el <literal>configure</literal> script fue generado con éxito. Ahora 
   se necesita ejecutar el generador de script <literal>configure</literal> para generar los Makefiles para 
   el compilador. Basta con ejecutar <literal>configure</literal> de este modo: 
  </para>
  <para>
   <example>
    <title>Ejecución configurar</title>
    <programlisting role="txt">
<![CDATA[
configure
...
...
...
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Como <literal>buildconf</literal> anunciado, a continuación, <literal>configure --help</literal> se puede utilizar 
   para ver los comandos disponibles  <literal>configure</literal> . Si usted tiene múltiples núcleos disponibles 
   debe habilitar multi procesamiento, que optimiza y hace más rápida la compilación. 
   Multi procesamiento puede ser activado usando la <literal>--enable-one-shot</literal> opción para <literal>configure</literal>  
   así: 
  </para>
  <para>
   <example>
    <title>Habilitar la configuración multi procesamiento</title>
    <programlisting role="txt">
<![CDATA[
configure --enable-one-shot
...
...
...
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Si desea hacer una construcción mínima, entonces se necesita deshabilitar todas las extensiones habilitadas por defecto usando la opción
   <literal>--disable-all</literal>. Cuando deshabilité todas las extensiones y SAPIs, debe seleccionar por lop menos una antes de que pueda obtenerse un binario de PHP.
   El ejemplo a continuación le deshabilita todas las extensiones, habilita CLI SAPI y 
   habilita el multi procesamiento: 
  </para>
  <para>
   Si necesita exportar símbolos de depuración y hacer una depuración, también es necesario que habilite las dos siguientes
   opciones: <literal>--enable-debug</literal> y <literal>--enable-debug-pack</literal>.
  </para>
  <para>
   <example>
    <title>Configurar una mínima estructura de PHP con multi procesamiento</title>
    <programlisting role="txt">
<![CDATA[
configure --disable-all --enable-cli --enable-one-shot
...
...
...
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Si necesita compilar un NTS (<literal>NOT Thread Safe</literal>) de PHP, usted necesita para pasar la 
   <literal>--disable-zts</literal> opción de <literal>configure</literal>. Por defecto PHP está compilado con 
   hilo de seguridad. 
  </para>
  <para>
   Ahora estamos listos realmente para realizar la compilación, esto se hace mediante la ejecución de <literal>nmake</literal> , Así: 
  </para>
  <para>
   <example>
    <title>Ejecutando nmake</title>
    <programlisting role="txt">
<![CDATA[
nmake
...
...
...
]]>
    </programlisting>
   </example>
  </para>
 </sect2>
 
 <sect2 xml:id="install.windows.building.testing">
  <title>Prueba de la construcción/title>
  <para>
   Cuando el proceso de construcción se ha completado, el binario PHP, 
   junto con todos las extensiones compiladas se encuentra en un subdirectorio de el directorio de fuentes. Según 
   el tipo de compilación, estará ubicado en uno de los siguientes directorios: 
  </para>
  <para>
   <itemizedlist>
    <listitem>
     <simpara><literal>Debug</literal> - Debug, NOT Thread Safe</simpara>
    </listitem>
    <listitem>
     <simpara><literal>Debug_TS</literal> - Debug, Thread Safe</simpara>
    </listitem>
    <listitem>
     <simpara><literal>Release</literal> - Release, NOT Thread Safe</simpara>
    </listitem>
    <listitem>
     <simpara><literal>Release_TS</literal> - Release, Thread Safe</simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   Si está compilando la versión de 64 bits de PHP, estos directorios se ubicaran
   dentro de otro directorio llamado <literal>x64</literal> de la raíz de las fuentes. 
  </para>
  <para>
   Para probar el binario compilado, a continuación, <literal>cd</literal> a su directorio y ejecutar 
   lo siguiente:   
  </para>
  <para>
   <example>
    <title>Probando el PHP binario compilado</title>
    <programlisting role="txt">
<![CDATA[
C:\php\src\Release_TS\> php -v
PHP 5.3.X (cli) (built: XXX XX XXXX XX:XX:XX)
Copyright (c) 1997-2010 The PHP Group
Zend Engine v2.3.0, Copyright (c) 1998-2010 Zend Technologies
]]>
    </programlisting>
   </example>
  </para>
 </sect2>
   
</sect1>
   
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

