<reference id="ref.dbm">
  <title>Funciones dbm</title>
  <titleabbrev>DBM</titleabbrev>

  <partintro>
  <simpara>
   Estas funcione le permiten almacenar registros en una base de
   datos estilo dbm. Este tipo de base de datos (soportadas por
   las librer&iacute;as db y gdbm de Berkeley, as&iacute; como por algunas
   librer&iacute;as del sistema y por una librer&iacute;a inclu&iacute;da para acceso
   a archivos de texto) guarda pares clave/valor (en oposici&oacute;n a
   los registros completos soportados por las bases de datos
   relacionales).</simpara>
  <para>
   <example>
    <title>ejemplo de dbm</title>
    <programlisting role="php">
$dbm = dbmopen("vistoya", "w");
if (dbmexists($dbm, $idusuario)) {
  $visto_ya = dbmfetch($dbm, $idusuario);
} else {
  dbminsert($dbm, $idusuario, time());
}
do_stuff();
dbmreplace($dbm, $idusuario, time());
dbmclose($dbm);
</programlisting></example>
  </para>
  </partintro>

  <refentry id="function.dbmopen">
   <refnamediv>
    <refname>dbmopen</refname>
    <refpurpose>abre una base de datos dbm</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>dbmopen</function></funcdef>
     <paramdef>string <parameter>fichero</parameter></paramdef>
     <paramdef>string <parameter>indicadores</parameter></paramdef>
    </funcsynopsis>
    <para>
     El primer argumento es el nombre con sendero completo del archivo dbm que
     se va a abrir y el segundo es el modo de apertura, que puede ser "r", "n",
     "c" o "w", que significan s&oacute;lo lectura, nuevo (implica lectura/escritura
     y suele truncar una base de datos si ya exist&iacute;a con ese nombre), crear
     (implica lectura/escritura, pero sin truncar la base de datos) y abrir 
     para lectura/escritura, respectivamente.</para>
    <para>
     Devuelve un identificador que se pasa al resto de funciones dbm si tiene
     &eacute;xito, o &false; si falla.</para>
    <para>
     Si se utiliza el soporte de ndbm, este crear&aacute; los archivos fichero.dir y
     fichero.pag. gdbm s&oacute;lo utiliza un archivo y lo mismo hace el soporte interno
     de archivos de texto, mientras que el db de Berkeley crea un archivo fichero.db.
     N&oacute;tese que el PHP hace su propio bloqueo de archivo sobre el que pudiera
     realizar la propia librer&iacute;a dbm. El PHP no borra los archivos .lck que crea.
     Los utiliza simplemente como i-nodos fijos en los que hacer el bloqueo. Para
     m&aacute;s informaci&oacute;n sobre archivos dbm, vea las p&aacute;ginas man de su Unix o obtenga
     el gdbm de GNU desde <filename role="url">ftp://prep.ai.mit.edu/pub/gnu</filename>.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbmclose">
   <refnamediv>
    <refname>dbmclose</refname>
    <refpurpose>cierra una base de datos dbm</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>bool <function>dbmclose</function></funcdef>
     <paramdef>int <parameter>identif_dbm</parameter></paramdef>
    </funcsynopsis>
    <para>
     Desbloquea y cierra la base de datos especificada.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbmexists">
   <refnamediv>
    <refname>dbmexists</refname>
    <refpurpose>dice si existe un valor para una clave dada en la base de datos dbm</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>bool <function>dbmexists</function></funcdef>
     <paramdef>int <parameter>identif_dbm</parameter></paramdef>
     <paramdef>string <parameter>clave</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve &true; si hay un valor asociado con la <parameter>clave</parameter>.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbmfetch">
   <refnamediv>
    <refname>dbmfetch</refname>
    <refpurpose>obtiene un valor para una clave desde la base de datos dbm</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>dbmfetch</function></funcdef>
     <paramdef>int <parameter>identif_dbm</parameter></paramdef>
     <paramdef>string <parameter>clave</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve el valor asociado con la <parameter>clave</parameter>.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbminsert">
   <refnamediv>
    <refname>dbminsert</refname>
    <refpurpose>inserta un valor para una clave en la base de datos dbm</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>dbminsert</function></funcdef>
     <paramdef>int <parameter>identif_dbm</parameter></paramdef>
     <paramdef>string <parameter>clave</parameter></paramdef>
     <paramdef>string <parameter>valor</parameter></paramdef>
    </funcsynopsis>
    <para>
     A&ntilde;ade el valor a la base de datos con la clave especificada.</para>
    <para>
     Devuelve -1 si la base de datos se abr&iacute;o en modo s&oacute;lo lectura, 0
     si la inserci&oacute;n tuvo &eacute;xito y 1 si la clave ya exist&iacute;a (para sustituir
     el valor, utilice <function>dbmreplace</function>.)</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbmreplace">
   <refnamediv>
    <refname>dbmreplace</refname>
    <refpurpose>sustituye el valor de una clave en la base de datos dbm</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>bool <function>dbmreplace</function></funcdef>
     <paramdef>int <parameter>identif_dbm</parameter></paramdef>
     <paramdef>string <parameter>clave</parameter></paramdef>
     <paramdef>string <parameter>valor</parameter></paramdef>
    </funcsynopsis>
    <para>
     Sustituye el valor para la clave especificada de la base de datos.</para>
    <para>
     Tambi&eacute;n a&ntilde;adir&aacute; la clave a la base de datos si no exist&iacute;a antes.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbmdelete">
   <refnamediv>
    <refname>dbmdelete</refname>
    <refpurpose>borra el valor de una clave de una base de datos dbm</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>bool <function>dbmdelete</function></funcdef>
     <paramdef>int <parameter>identif_dbm</parameter></paramdef>
     <paramdef>string <parameter>clave</parameter></paramdef>
    </funcsynopsis>
    <para>
     Borra el valor para la <parameter>clave</parameter> en la base de datos.</para>
    <para>
     Devuelve &false; si la clave no exist&iacute;a en la base de datos.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbmfirstkey">
   <refnamediv>
    <refname>dbmfirstkey</refname>
    <refpurpose>obtiene la primera clave de una base de datos dbm</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>dbmfirstkey</function></funcdef>
     <paramdef>int <parameter>identif_dbm</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve la primera clave de la base de datos. N&oacute;tese que no se garantiza
     ning&uacute;n orden en particular, pues la base de datos se crea utilizando una
     tabla hash, que no garantiza ordenaci&oacute;n alguna.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbmnextkey">
   <refnamediv>
    <refname>dbmnextkey</refname>
    <refpurpose>obtiene la siguiente clave de una base de datos dbm</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>dbmnextkey</function></funcdef>
     <paramdef>int <parameter>identif_dbm</parameter></paramdef>
     <paramdef>string <parameter>clave</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve la clave que sigue a <parameter>clave</parameter>. Llamando a
     <function>dbmfirstkey</function> seguida de llamadas sucesivas
     a <function>dbmnextkey</function> se pueden visitar todos los
     pares clave/valor de la base de datos dbm. Por ejemplo:
    <example>
     <title>Visitanco cada par clave/valor en una base de datos dbm.</title>
     <programlisting>
$clave = dbmfirstkey($id_dbm);
while ($clave) {
    echo "$clave = " . dbmfetch($id_dbm, $clave) . "\n";
    $clave = dbmnextkey($id_dbm, $clave);
}
     </programlisting>
    </example></para>
   </refsect1>
  </refentry>

  <refentry id="function.dblist">
   <refnamediv>
    <refname>dblist</refname>
    <refpurpose>describe la librer&iacute;a compatible dbm que se est&aacute; usando</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>dblist</function></funcdef>
     <paramdef>void</paramdef>
    </funcsynopsis>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
