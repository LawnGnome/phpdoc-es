<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.dbase">
  <title>Funciones para dBase</title>
  <titleabbrev>dBase</titleabbrev>

  <partintro>
   <simpara>
    Estas funciones permiten el acceso a datos almacenados en formato
	dBase (dbf).</simpara>
   <simpara>
    No hay soporte para &iacute;ndices o campos Memo. Tampoco hay soporte
	para bloqueo: si dos procesos concurrentes en el servidor
	modifican el mismo fichero dBase, probablemente se destruir&aacute;n los
	datos.</simpara>
   <simpara>
    A diferencia de las bases de datos SQL, las "bases de datos" dBase
	no pueden cambiar su definici&oacute;n. Una vez creado el fichero, la
	definici&oacute;n de la base de datos es fija. No hay &iacute;ndices que
	aceleren la b&uacute;squeda u organicen los datos de distinto modo. Los
	ficheros dBase son simples ficheros secuenciales con registros de
	longitud fija. Los nuevos registros se a&ntilde;aden al final del fichero
	y los registros borrados se conservan hasta que se llama a la
	funci&oacute;n <function>dbase_pack()</function>.</simpara>
   <simpara>
    Se recomienda no utilizar ficheros dBase como bases de datos, sino
	elegir cualquier servidor SQL; MySQL o Postgres son opciones
	habituales con PHP. El soporte para dBase se proporciona para
	permitir importar y exportar datos a y desde la base
	de datos web, ya que este formato de ficheros es aceptado
	habitualmente por las hojas de datos y los organizadores de
	Windows. La importaci&oacute;n y exportaci&oacute;n de datos es lo &uacute;nico para lo
	que sirve el soporte dBase.</simpara>
  </partintro>

  <refentry id="function.dbase-create">
   <refnamediv>
    <refname>dbase_create</refname>
    <refpurpose>crea una base de datos dBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>int <function>dbase_create</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>array <parameter>fields</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	El par&aacute;metro <parameter>fields</parameter> es un array de arrays,
	cada uno de los cuales describe el formato de un campo de la base
	de datos. Cada campo consiste de un nombre, un car&aacute;cter que indica
	el tipo de campo, una longitud, y una precisi&oacute;n.</para>
	<para>
	Los tipos de campos disponibles son:
	<variablelist>
	 <varlistentry>
	  <term>L</term>
	  <listitem><simpara>
	   L&oacute;gico. No tienen longitud ni precisi&oacute;n.</simpara></listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>M</term>
	  <listitem><simpara>
	   Memo. (Sin soporte en PHP.)
	   No tienen longitud ni precisi&oacute;n.</simpara></listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>D</term>
	  <listitem><simpara>
	   Fecha (almacenada como AAAAMMDD). No tienen longitud ni
	   precisi&oacute;n.</simpara></listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>N</term>
	  <listitem><simpara>
	   N&uacute;mero. Tienen longitud y precisi&oacute;n (n&uacute;mero de cifras tras el
	   punto decimal).</simpara></listitem>
	 </varlistentry>
	 <varlistentry>
	  <term>C</term>
	  <listitem><simpara>
	   Cadena.</simpara></listitem>
	 </varlistentry>
	</variablelist></para>
	<para>
	Si la base de datos se crea con &eacute;xito, se devuelve un
	dbase_identifier; en caso contrario, devuelve &false;.

     <example>
      <title>Crear un fichero dBase</title>
<programlisting role="php">
// "database" name
$dbname = "/tmp/test.dbf";

// database "definition"
$def =
    array(
        array("date",     "D"),
        array("name",     "C",  50),
        array("age",      "N",   3, 0),
        array("email",    "C", 128),
        array("ismember", "L")
    );

// creation
if (!dbase_create($dbname, $def))
    print "&lt;strong>Error!&lt;/strong>";

</programlisting>
     </example></para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-open">
   <refnamediv>
    <refname>dbase_open</refname>
    <refpurpose>abre un fichero dBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>int <function>dbase_open</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	Los "flags" son los que utiliza la llamada al sistema open().
	Normalmente, 0 significa s&oacute;lo lectura, 1 s&oacute;lo escritura y 2
	lectura y escritura.</para>
	<para>
	Devuelve un dbase_identifier del fichero abierto, o &false; si no
	pudo abrirse el fichero.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-close">
   <refnamediv>
    <refname>dbase_close</refname>
    <refpurpose>cierra un fichero dBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>bool <function>dbase_close</function></funcdef>
     <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	Cierra el fichero asociado con
	<parameter>dbase_identifier</parameter>.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-pack">
   <refnamediv>
    <refname>dbase_pack</refname>
    <refpurpose>"empaqueta" un fichero dBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>bool <function>dbase_pack</function></funcdef>
     <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	Empaqueta el fichero especificado, borrando definitivamente todos
	los registros marcados con la funci&oacute;n
	<function>dbase_delete_record</function>.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-add-record">
   <refnamediv>
    <refname>dbase_add_record</refname>
    <refpurpose>a&ntilde;ade un registro a un fichero dBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>bool <function>dbase_add_record</function></funcdef>
     <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
     <paramdef>array <parameter>record</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	A&ntilde;ade los datos de <parameter>record </parameter>a la base de
	datos. Si el n&uacute;mero de elementos del registro proporcionado no es
	igual al n&uacute;mero de campos de la base de datos, la operaci&oacute;n
	fallar&aacute; y la funci&oacute;n devolver&aacute; &false;.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-replace-record">
   <refnamediv>
    <refname>dbase_replace_record</refname>
    <refpurpose>reemplaza un registro en un fichero dBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>bool <function>dbase_replace_record</function></funcdef>
     <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
     <paramdef>array <parameter>record</parameter></paramdef>
     <paramdef>int <parameter>dbase_record_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
	 Reemplaza los datos asociados con el registro
	 <parameter>record_number</parameter> con los datos de
	 <parameter>record</parameter> en el fichero de datos. Si el
	 n&uacute;mero de elementos del registro proporcionado no es igual al
	 n&uacute;mero de campos de la base de datos, la operaci&oacute;n fallar&aacute; y la
	 funci&oacute;n devolver&aacute; &false;.</simpara>
     
    <simpara>
	 <parameter>dbase_record_number</parameter> es un entero en el
	 rango de 1 al n&uacute;mero de registros en el fichero de datos
	 (devuelto por la funci&oacute;n
	 <function>dbase_numrecords</function>).</simpara>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-delete-record">
   <refnamediv>
    <refname>dbase_delete_record</refname>
	<refpurpose>borra un registro del fichero dBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>bool <function>dbase_delete_record</function></funcdef>
     <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
     <paramdef>int <parameter>record</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	Marca el registro <parameter>record</parameter> para ser borrado
	del fichero de datos. Para eliminar realmente el registro del
	fichero, debe llamarse a la funci&oacute;n
	<function>dbase_pack</function>.</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-get-record">
   <refnamediv>
    <refname>dbase_get_record</refname>
	<refpurpose>lee un registro de un fichero dBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>array <function>dbase_get_record</function></funcdef>
     <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
     <paramdef>int <parameter>record</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	Devuelve los datos del registro <parameter>record</parameter> en
	un array. El array se indexa a partir de 0, e incluye un elemento
	con el &iacute;ndice asociativo 'deleted', que vale 1 si el registro ha
	sido marcado para borrar (ver
	<function>dbase_delete_record</function>.</para>
    <para>
	    Cada campo se convierte al tipo PHP apropiado. (Las fechas se
		guardan como cadenas.)</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-get-record-with-names">
   <refnamediv>
    <refname>dbase_get_record_with_names</refname>
	<refpurpose>lee un registro de un fichero dBase como array
	asociativo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>array <function>dbase_get_record_with_names</function></funcdef>
     <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
     <paramdef>int <parameter>record</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	Devuelve los datos del registro <parameter>record</parameter> en
	un array asociativo. El array incluye tambi&eacute;n un elemento con
	&iacute;ndice 'deleted' que vale 1 si el registro ha sido marcado para
	borrar (ver <function>dbase_delete_record</function>.</para>
    <para>
	    Cada campo se convierte al tipo PHP apropiado. (Las fechas se
		transforman en cadenas.)</para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-numfields">
   <refnamediv>
    <refname>dbase_numfields</refname>
	<refpurpose>cuenta el n&uacute;mero de campos en un fichero
	dBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>int <function>dbase_numfields</function></funcdef>
     <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	Devuelve el n&uacute;mero de campos (columnas) en el fichero
	especificado. Los n&uacute;meros de campo va de 0 a
	dbase_numfields($db)-1, mientras los n&uacute;meros de registros van de 1
	a dbase_numrecords($db).
    <example>
     <title>Uso de <function>dbase_numfields</function></title>
     <programlisting>
$rec = dbase_get_record($db, $recno);
$nf  = dbase_numfields($db);
for ($i=0; $i &lt; $nf; $i++) {
    print $rec[$i]."&lt;br>\n";
}
</programlisting></example></para>
   </refsect1>
  </refentry>

  <refentry id="function.dbase-numrecords">
   <refnamediv>
    <refname>dbase_numrecords</refname>
	<refpurpose>cuenta el n&uacute;mero de registros en un fichero
	dBase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcprototype>
     <funcdef>int <function>dbase_numrecords</function></funcdef>
     <paramdef>int <parameter>dbase_identifier</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
	Devuelve el n&uacute;mero de registros (filas) en el fichero
	especificado. Los n&uacute;meros de registro van de 1 a
	dbase_numrecords($db), mientras los n&uacute;meros de campo van de 0 a
	dbase_numfields($db)-1.</para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
