<reference id="ref.var">
  <title>Funciones sobre variables</title>
  <titleabbrev>Variables</titleabbrev>

  <refentry id="function.doubleval">
   <refnamediv>
    <refname>doubleval</refname>
    <refpurpose>Obtiene el valor double (decimal) de una variable.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>double <function>doubleval</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
     Devuelve el valor double (decimal en punto flotante) de <parameter>var</parameter>.</simpara>

    <simpara>
     <parameter>var</parameter> puede ser cualquier tipo escalar. No se puede usar
     <function>doubleval</function> sobre arrays u objetos.</simpara>

    <simpara>
     Ver tambi&eacute;n <function>intval</function>,
     <function>strval</function>,
     <function>settype</function> y <link linkend="language.types.type-juggling">Type juggling</link>.</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.empty">
   <refnamediv>
    <refname>empty</refname>
    <refpurpose>Determina si una variable est&aacute; definida</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>empty</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    
    <simpara>
     Devuelve false si <parameter>var</parameter> est&aacute; definida y tiene un valor
     no-vac&iacute;o o distinto de cero; en otro caso devuelve true.</simpara>
    
    <simpara>
     Ver tambi&eacute;n <function>isset</function> y <function>unset</function>.</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.gettype">
   <refnamediv>
    <refname>gettype</refname>
    <refpurpose>Obtiene el tipo de una variable.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>gettype</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
     Devuelve el tipo de la variable PHP <parameter>var</parameter>.</para>

    <para>
     Los valores posibles de la cadena devuelta son:
     <itemizedlist>
      <listitem><simpara>"integer"</simpara></listitem>
      <listitem><simpara>"double"</simpara></listitem>
      <listitem><simpara>"string"</simpara></listitem>
      <listitem><simpara>"array"</simpara></listitem>
      <listitem><simpara>"object"</simpara></listitem>
      <listitem><simpara>"unknown type"</simpara></listitem>
     </itemizedlist></para>

    <para>
     Ver tambi&eacute;n <function>settype</function>.</para>

   </refsect1>
  </refentry>


  <refentry id="function.intval">
   <refnamediv>
    <refname>intval</refname>
    <refpurpose>Obtiene el valor entero de una variable.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>intval</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
     <paramdef>int <parameter><optional>base</optional></parameter></paramdef>
    </funcsynopsis>

    <simpara>
     Devuelve el valor entero de <parameter>var</parameter>,
     usando la base de conversi&oacute;n especificada (por defecto es
     base 10).</simpara>

    <simpara>
     <parameter>var</parameter> puede ser cualquier tipo escalar. No se puede usar
     <function>intval</function> sobre arrays u objetos.</simpara>

    <simpara>
     Ver tambi&eacute;n <function>doubleval</function>,
     <function>strval</function>,
     <function>settype</function> y <link linkend="language.types.type-juggling">Type juggling</link>.</simpara>

   </refsect1>
  </refentry>

  <refentry id="function.is-array">
   <refnamediv>
    <refname>is_array</refname>
    <refpurpose>Averigua si una variable es un array.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>is_array</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
     Devuelve true si <parameter>var</parameter> es un array, y false
     en otro caso.</para>

    <para>
     Ver tambi&eacute;n <function>is_double</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_real</function>,
     <function>is_string</function>,
     <function>is_long</function>, y
     <function>is_object</function>.</para>

   </refsect1>
  </refentry>


  <refentry id="function.is-double">
   <refnamediv>
    <refname>is_double</refname>
    <refpurpose>Averigua si una variable es un valor double (n&uacute;mero decimal).</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>is_double</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
     Devuelve true si <parameter>var</parameter> es un double (n&uacute;mero decimal),
     y false en otro caso.</para>

    <para>
     Ver tambi&eacute;n <function>is_array</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_real</function>,
     <function>is_string</function>,
     <function>is_long</function>, y
     <function>is_object</function>.</para>

   </refsect1>
  </refentry>


  <refentry id="function.is-float">
   <refnamediv>
    <refname>is_float</refname>
    <refpurpose>Averigua si una variable es un flotante.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>is_float</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
     Esta funci&oacute;n es un alias de <function>is_double</function>.</simpara>

    <simpara>
     Ver tambi&eacute;n <function>is_double</function>,
     <function>is_real</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_string</function>,
     <function>is_object</function>,
     <function>is_array</function>, y
     <function>is_long</function>.</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.is-int">
   <refnamediv>
    <refname>is_int</refname>
    <refpurpose>Averigua si una variable es un valor entero.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>is_int</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
     Esta funci&oacute;n es un alias de <function>is_long</function>.</simpara>

    <simpara>
     Ver tambi&eacute;n <function>is_double</function>,
     <function>is_float</function>,
     <function>is_integer</function>,
     <function>is_string</function>,
     <function>is_real</function>,
     <function>is_object</function>,
     <function>is_array</function>, y
     <function>is_long</function>.</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.is-integer">
   <refnamediv>
    <refname>is_integer</refname>
    <refpurpose>Averigua si una variable es un valor entero.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>is_integer</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
     Esta funci&oacute;n es un alias de <function>is_long</function>.</simpara>

    <simpara>
     Ver tambi&eacute;n <function>is_double</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_string</function>,
     <function>is_real</function>,
     <function>is_object</function>,
     <function>is_array</function>, y
     <function>is_long</function>.</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.is-long">
   <refnamediv>
    <refname>is_long</refname>
    <refpurpose>Averigua si una varible es un valor entero.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>is_long</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
     Devuelve true si <parameter>var</parameter> es un entero (long),
     y false en otro caso.</para>

    <para>
     Ver tambi&eacute;n <function>is_double</function>,
     <function>is_float</function>,
     <function>is_int</function>,
     <function>is_real</function>,
     <function>is_string</function>,
     <function>is_object</function>,
     <function>is_array</function>, y
     <function>is_integer</function>.</para>

   </refsect1>
  </refentry>


  <refentry id="function.is-object">
   <refnamediv>
    <refname>is_object</refname>
    <refpurpose>Averigua si una varible es un objeto.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>is_object</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
     Devuelve true si <parameter>var</parameter> es un objeto, y false
     en otro caso.</para>

    <para>
     Ver tambi&eacute;n <function>is_long</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_float</function>,
     <function>is_double</function>,
     <function>is_real</function>,
     <function>is_string</function>, y
     <function>is_array</function>.</para>

   </refsect1>
  </refentry>


  <refentry id="function.is-real">
   <refnamediv>
    <refname>is_real</refname>
    <refpurpose>Averigua si una varible es un n&uacute;mero real.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>is_real</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
     Esta funci&oacute;n es un alias de <function>is_double</function>.</simpara>

    <simpara>
     Ver tambi&eacute;n <function>is_long</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_float</function>,
     <function>is_double</function>,
     <function>is_object</function>,
     <function>is_string</function>, y
     <function>is_array</function>.</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.is-string">
   <refnamediv>
    <refname>is_string</refname>
    <refpurpose>Averigua si una varible es una cadena de caracteres (string).</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>is_string</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
     Devuelve true si <parameter>var</parameter> es una cadena,
     y false en otro caso.</para>

    <para>
     Ver tambi&eacute;n <function>is_long</function>,
     <function>is_int</function>,
     <function>is_integer</function>,
     <function>is_float</function>,
     <function>is_double</function>,
     <function>is_real</function>,
     <function>is_object</function>, y
     <function>is_array</function>.</para>

   </refsect1>
  </refentry>


  <refentry id="function.isset">
   <refnamediv>
    <refname>isset</refname>
    <refpurpose>Determina si una varible est&aacute; definida</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>isset</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>
    
    <simpara>
     Devuelve true si <parameter>var</parameter> existe;
     y false en otro caso.</simpara>
    
    <para>
     Si una variable ha sido destruida con <function>unset</function>,
     ya no estar&aacute; definida (no ser&aacute; <function>isset</function>).
    <informalexample><programlisting>
$a = "test";
echo isset($a); // true
unset($a);
echo isset($a); // false
</programlisting></informalexample></para>
    
    <simpara>
     Ver tambi&eacute;n <function>empty</function> y <function>unset</function>.</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.settype">
   <refnamediv>
    <refname>settype</refname>
    <refpurpose>Establece el tipo de una variable.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>settype</function></funcdef>
     <paramdef>string <parameter>var</parameter></paramdef>
     <paramdef>string <parameter>type</parameter></paramdef>
    </funcsynopsis>

    <para>
     Establece el tipo de la varible <parameter>var</parameter> como
     <parameter>type</parameter>.</para>

    <para>
     Los valores posibles para <parameter>type</parameter> son:
     <itemizedlist>
      <listitem><simpara>"integer"</simpara></listitem>
      <listitem><simpara>"double"</simpara></listitem>
      <listitem><simpara>"string"</simpara></listitem>
      <listitem><simpara>"array"</simpara></listitem>
      <listitem><simpara>"object"</simpara></listitem>
     </itemizedlist></para>

    <para>
     Devuelve true si se lleva a cabo con &eacute;xito; en otro caso devuelve false.</para>

    <para>
     Ver tambi&eacute;n <function>gettype</function>.</para>

   </refsect1>
  </refentry>


  <refentry id="function.strval">
   <refnamediv>
    <refname>strval</refname>
    <refpurpose>Obtiene una cadena de caracteres a partir de una variable.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>strval</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <simpara>
     Devuelve una cadena con el valor de <parameter>var</parameter>.</simpara>

    <simpara>
     <parameter>var</parameter> puede ser cualquier tipo escalar. No se puede usar
     <function>strval</function> sobre arrays u objetos.</simpara>

    <simpara>
     Ver tambi&eacute;n <function>doubleval</function>,
     <function>intval</function>,
     <function>settype</function> y <link linkend="language.types.type-juggling">Type juggling</link>.</simpara>

   </refsect1>
  </refentry>


  <refentry id="function.unset">
   <refnamediv>
    <refname>unset</refname>
    <refpurpose>Destruye una variable dada</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>unset</function></funcdef>
     <paramdef>mixed <parameter>var</parameter></paramdef>
    </funcsynopsis>

    <para>
     <function>unset</function> destruye la variable especificada y
     devuelve true.</para>

    <para>
     <example>
      <title>Ejemplo de <function>unset</function></title>
      <programlisting>
unset( $foo );
unset( $bar['quux'] );
      </programlisting>
     </example></para>

    <para>
     Ver tambi&eacute;n <function>isset</function> y <function>empty</function>.</para>
     
   </refsect1>
  </refentry>

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
