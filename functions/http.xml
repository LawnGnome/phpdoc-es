 <reference id="ref.http">
  <title>Funciones HTTP</title>
  <titleabbrev>HTTP</titleabbrev>

  <partintro>
  <simpara>
   Estas funciones permiten manipular la salida que se envía al navegador
   remoto a nivel de protocolo HTTP.</simpara>
  </partintro>

  <refentry id="function.header">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>Manda una cabecera HTTP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>int <function>header</function></funcdef>
     <paramdef>string <parameter>string</parameter></paramdef>
    </funcsynopsis>
    <para>
     La función <function>Header</function> se utiliza al comienzo de un
     fichero <acronym>HTML</acronym> para enviar las cadenas de texto de la
     cabecera <acronym>HTTP</acronym>.  Consulte la
     <ulink url="&spec.http1.1;">Especificación HTTP 1.1</ulink> para
     obtener más información sobre las cabeceras http.
     <emphasis>Nota:</emphasis> Recuerde que la función
     <function>Header</function> debe llamarse antes de que se genere
     salida alguna, bien con etiquetas HTML normales o con PHP.
     Un error muy frecuente consiste en leer código con
     <function>include</function> o con auto_prepend, y que dicho código
     inserte espacios o líneas en blanco antes de llamar a
     <function>header</function>.</para>

	<para>
	 Hay dos casos especiales de llamadas a header.  La primera es la
         cabecera &quot;Location&quot;.  No sólo envía esta cabecera al
         navegador, sino que también devuelve un código de estado REDIRECT
         a Apache.  Desde el punto de vista del programador de scripts esto
         no debería ser importante, pero para la gente que comprende las
         interioridades de Apache sí puede serlo.
     <informalexample><programlisting role="php">
header("Location: http://www.php.net");  /* Redirect browser to PHP web site */
exit;  /* Make sure that code below does not get executed when we redirect. */
</programlisting></informalexample></para>
	<para>
	 El segundo caso especial se produce con cualquier cabecera que
         comience con la cadena, &quot;HTTP/&quot; (las mayúsculas no son
         significativas).
	 Por ejemplo, si tiene la directiva ErrorDocument 404 de Apache
         apuntando a un script PHP, es una buena idea asegurarse de que
         su script de PHP genera realmente un 404. La primera cosa que debe
         hacer en su script sería:
     <informalexample><programlisting role="php">
header("http/1.0 404 Not Found");
	 </programlisting></informalexample>
	</para>

    <para>
     Los scripts de PHP a menudo generan HTML dinámico que no debe almacenarse
     en la caché del navegador cliente o en la caché de cualquier proxy
     situado entre el servidor y el navegador cliente. Se puede obligar
     a muchos proxies y clientes a que deshabiliten el almacenamiento en
     caché con <informalexample><programlisting role="php">
  header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");             // Date in the past
  header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT"); // always modified
  header("Cache-Control: no-cache, must-revalidate");           // HTTP/1.1
  header("Pragma: no-cache");                                   // HTTP/1.0
</programlisting></informalexample></para>
   </refsect1>
  </refentry>

  <refentry id="function.setcookie">
   <refnamediv>
    <refname>setcookie</refname>
    <refpurpose>Envía una cookie</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>int <function>setcookie</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>string <parameter>value</parameter></paramdef>
     <paramdef>int <parameter>expire</parameter></paramdef>
     <paramdef>string <parameter>path</parameter></paramdef>
     <paramdef>string <parameter>domain</parameter></paramdef>
     <paramdef>int <parameter>secure</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>setcookie</function> define una cookie para ser enviada
     con el resto de la información de la cabecera.  Las cookies deben
     enviarse <emphasis>antes</emphasis> de mandar cualquier otra cabecera
     (esta es una restricción de las cookies, no de PHP). Esto requiere
     que sitúe las llamadas a esta función antes de cualquier etiqueta
     <literal>&lt;html></literal> o <literal>&lt;head></literal>.</para>

    <para>
     Todos los parámetros excepto <parameter>name</parameter> son
     opcionales.  Si sólo se especifica el parámetro name, la cookie con
     ese nombre se borrará del cliente remoto.  También puede sustituir
     cualquier parámetro por una cadena de texto vacía
     (<emphasis>&quot;&quot;</emphasis>) y saltar así ese parámetro.  Los
     parámetros <parameter>expire</parameter> y <parameter>secure</parameter>
     son números enteros y no se pueden saltar con una cadena de texto
     vacía. En su lugar utilice un cero (<emphasis>0</emphasis>). El
     parámetro <parameter>expire</parameter> es un entero de tiempo
     típico de UNIX tal como lo devuelven las funciones
     <function>time</function> o <function>mktime</function>. El parámetro
     <parameter>secure</parameter> indica que la cookie se debe transmitir
     única y exclusivamente sobre una conexión segura HTTPS.</para>

    <para>  
     Fallos habituales:</para>

    <simpara>
     Las cookies no se hacen visibles hasta la siguiente carga de una
     página para la que la cookie deba estar visible.</simpara> 

    <simpara>
     Las llamadas múltiples a <function>setcookie</function> en el mismo script
     se ejecutarán en orden inverso. Si está intentando borrar una cookie
     antes de insertar otra, debe situar la llamada de inserción antes de
     la de borrado.</simpara>

    <para>
     A continuación se muestran algunos ejemplos::
     <example>
      <title><function>setcookie</function>, ejemplos</title>
      <programlisting role="php">
setcookie("TestCookie","Test Value");
setcookie("TestCookie",$value,time()+3600);  /* expire in 1 hour */
setcookie("TestCookie",$value,time()+3600,"/~rasmus/",".utoronto.ca",1);
</programlisting></example></para>

    <para>
     Tenga en cuenta que el campo value de la cookie se codifica como URL
     (urlencode) automáticamente cuando envía la cookie. Cuando ésta se recibe,
     se descodifica autómaticamente y se asigna a una variable con el
     mismo nombre que el nombre de la cookie. Para ver el contenido de
     nuestra cookie de prueba en un script, simplemente utilice uno de
     los siguientes ejemplos:

<informalexample><programlisting role="php">
echo $TestCookie;
echo $HTTP_COOKIE_VARS["TestCookie"];
</programlisting></informalexample></para>

	<para>
         También puede utilizar arrays de cookies empleando la notación de
         array en el nombre de la cookie. Esto tiene como efecto establecer
         tantas cookies como elementos de array, pero cuando el script
         recibe la cookie, se guardan los valores en un array con el
         nombre de la cookie:
	 <informalexample>
	  <programlisting role="php">
setcookie( "cookie[three]", "cookiethree" );
setcookie( "cookie[two]", "cookietwo" );
setcookie( "cookie[one]", "cookieone" );
if ( isset( $cookie ) ) {
   while( list( $name, $value ) = each( $cookie ) ) {
	  echo "$name == $value&lt;br&gt;\n";
   }
}
	  </programlisting>
	 </informalexample>

	</para>

    <para>
     Para obtener más información sobre las cookies, consulte la
     especificación de cookies de Netscape, que se encuentra
     en <ulink url="&spec.cookies;">&spec.cookies;</ulink>.</para>

    <simpara>
     Microsoft Internet Explorer 4 con Service Pack 1 no
     funciona correctamente con las cookies que tienen asociado
     el parámetro path.</simpara>

    <simpara>
     Netscape Communicator 4.05 y Microsoft Internet Explorer 3.x
     funcionan aparentemente de manera incorrecta cuando no se
     especifican los parámetros path y time.</simpara>

   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
