<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.dir">
  <title>Funciones con directorios</title>
  <titleabbrev>Directorios</titleabbrev>

  <refentry id="function.chdir">
   <refnamediv>
    <refname>chdir</refname>
    <refpurpose>cambia de directorio</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>chdir</function></funcdef>
     <paramdef>string <parameter>directory</parameter></paramdef>
    </funcsynopsis>
    <para>
     Cambia el directorio PHP actual a <parameter>directory</parameter>.
     Devuelve &false; si no puede cambiar al directorio, &true; si todo va bien.
    </para>
   </refsect1>
  </refentry>

  <refentry id="class.dir">
   <refnamediv>
    <refname>dir</refname>
    <refpurpose>clase directorio</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripcion</title>
    <funcsynopsis>
     <funcdef>new <function>dir</function></funcdef>
     <paramdef>string <parameter>directory</parameter></paramdef>
    </funcsynopsis>
    <para>
     Un mecanismo semi-orientado a objetos para leer directorios. El
     parametro <parameter>directory</parameter> abre el directorio.
     Dos propiedades estan disponibles cuando el directorio ha sido
     abierto. La propiedad de manejo puede ser usada con otras funciones
     de directorios tal como <function>readdir</function>, 
     <function>rewinddir</function> y <function>closedir</function>. La
     propiedad de trayectoria (path) es fijada para encaminar el directorio 
     que ha sido abierto. Tres metodos estan disponibles: leer, rebobinar y cerrar.
     <example>
      <title><function>dir</function> Ejemplo</title>
      <programlisting role="php">
      $d = dir("/etc");
      echo "Handle: ".$d->handle."&lt;br>\n";
      echo "Path: ".$d->path."&lt;br>\n";
      while($entry=$d->read()) {
      echo $entry."&lt;br>\n";
      }
      $d->close();
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.closedir">
   <refnamediv>
    <refname>closedir</refname>
    <refpurpose>cierra el manejador de directorios</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripcion</title>
    <funcsynopsis>
     <funcdef>void <function>closedir</function></funcdef>
     <paramdef>int <parameter>dir_handle</parameter></paramdef>
    </funcsynopsis>
    <para>
     Cierra la secuencia de directorio determinada por <parameter>dir_handle</parameter>. 
     La secuencia debe de haber sido abierta previamente con <function>opendir</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.opendir">
   <refnamediv>
    <refname>opendir</refname>
    <refpurpose>abre el manejador de directorios</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripcion</title>
    <funcsynopsis>
     <funcdef>int <function>opendir</function></funcdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Devuelve un manejador de directorio para ser usado con las
     llamadas <function>closedir</function>, <function>readdir</function> y
     <function>rewinddir</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readdir">
   <refnamediv>
    <refname>readdir</refname>
    <refpurpose>lee las entradas del manejador de directorios</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripcion</title>
    <funcsynopsis>
     <funcdef>string <function>readdir</function></funcdef>
     <paramdef>int <parameter>dir_handle</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve el nombre del siguiente fichero en el directorio. Los
     nombres de ficheros no son devueltos en ningun orden especial .

     <example>
      <title>Listar todos los ficheros en un directorio</title>
      <programlisting role="php">
      &lt;?php
      $handle=opendir('.');
      echo "Directory handle: $handle\n";
      echo "Files:\n";
      while ($file = readdir($handle)) {
       echo "$file\n";
       }
       closedir($handle); 
       ?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Tener en cuenta que <function>readdir</function> devolvera
     tambien . y .. Si no quereis estas entradas podeis borrarlas:
     <example>
      <title>
       Listar todos los ficheros en un directorio excepto . y ..
      </title>
      <programlisting role="php">
      &lt;?php 
      $handle=opendir('.'); 
      while ($file = readdir($handle)) { 
       if ($file != "." && $file != "..") { 
         echo "$file\n"; 
	 } 
	 }
	 closedir($handle); 
	 ?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.rewinddir">
   <refnamediv>
    <refname>rewinddir</refname>
    <refpurpose>rebobinar el manejador de directorios</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripcion</title>
    <funcsynopsis>
     <funcdef>void <function>rewinddir</function></funcdef>
     <paramdef>int <parameter>dir_handle</parameter></paramdef>
    </funcsynopsis>
    <para>
     Inizializa la secuencia de directorio determinada por 
     <parameter>dir_handle</parameter> al principio del directorio.
    </para>

   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
