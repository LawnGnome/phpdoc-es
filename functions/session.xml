 <reference id="ref.session">
  <title>Funciones para la Gestión de Sesiones</title>
  <titleabbrev>Sesiones</titleabbrev>
  <partintro>
   <para>
    El soporte de sesiones en PHP es básicamente un sistema que preserva
    ciertos datos en una serie de accesos. Esto permite construir
    aplicaciones más personalizadas e incrementar el atractivo de un
    website.
   </para>

   <para>
    Si ya está familiarizado con la gestión de sesión de PHPLIB, apreciará
    que algunos conceptos son similares al soporte de sesiones de PHP.
   </para>

   <para>
    A cada visitante que acceda a su web se le asigan un único id,
    el conocido id de sesión.Éste se almacena en una cookie del usuario
    o bien se propaga con la URL.
   </para>

   <para>
    El soporte de sesión le permite transportar tantas variables como
    desee a través de las solicitudes del cliente. Cuando un visitante
    accede a su web, PHP chequea automáticamente (si session.auto_start
    está puesta a 1), manualmente (si añade el comando
    <function>session_start</function>) o implicitamente (al añadir
    <function>session_register</function>) si se ha establecido una sesión
    concreta con la llamada. Si es así, el entorno grabado es reproducido.
   </para>

   <para>
    Todas las variables registradas son serializadas tras finalizar la 
    solicitud. Las variables registradas que no estén definidas se marcan
    como no definidas. En los accesos posteriores, estas variables no
    las define el módulo de sisión, a no ser que las defina el usuario 
    después.
   </para>

   <para>
    Los parámetros de configuración
    <literal>track_vars</literal> y <literal>gpc_globals</literal>
    influyen en como se recuperan las variables de sesión. Si
    <literal>track_vars</literal> está activado, las variables
    recuperadas estarán guardadas en la matriz asociativa
    $HTTP_STATE_VARS. Si <literal>gpc_globals</literal> está activado,
    las variables de sesión se recuperarán como variables globales. Si
    ambos parámetros están activados, las variables globales y los
    registros de $HTTP_STATE_VARS valdrán lo mismo.
   </para>

   <para>
    Hay dos formas de propagar un id de sesión:
    
    <itemizedlist>
     <listitem><simpara>
      Cookies</simpara></listitem>
     <listitem><simpara>
      parámetros URL</simpara></listitem>
    </itemizedlist></para>

   <para>
    El módulo de sesión soporta ambos métodos. Las Cookies son ideales,
    pero como su permanencia no la controla el servidor, sino el 
    cliente no nos podemos fiar. El segundo método integra el id de
    sesión en las URLs.
   </para>

   <para>
    PHP es capaz de hacer esto de forma trasparente cuando se ha
    compilado con <literal>--enable-trans-sid</literal>. Si activa
    esta opción las URIs relativas se cambiarán automáticamente para 
    contener el id de sesión. Otra posibilidad es usar la constante
    <literal>SID</literal> siempre definida, si el cliente no manda
    la cookie apropiada.  <literal>SID</literal> es de la forma
    <literal>session_name=session_id</literal> o bien es una cadena
    vacía.
   </para>

   <para>
    El siguiente ejemplo muestra como registrar una variable y como 
    enlazarla correctamente a otra página usando SID.
  
   <example>
    <title>Contando el número de hits en un usuario sencillo</title>
    <programlisting>
&lt;?php

session_register("count");

$count++;

?&gt;

Hola, visitante, has visto esta página &lt;? echo $count; ?&gt; veces.&lt;p&gt;

&lt;?
# el &lt;?=SID?&gt; es necesario para preservar el id de la sesión
# para el caso en que el usuario haya descativado las Cookies
?&gt;

 Para continuar, &lt;A HREF="nextpage.php?&lt;?=SID?&gt;"&gt;pulse aquí&lt;/A&gt;
</programlisting></example></para>

   <para>
    Para implementar el almacenamiento en base de datos necesita código
    PHP y la función a nivel de usuario <function>session_set_save_handler</function>.
    Tendría que extender las siguientes funciones para soportar MySQL y 
    otras bases de datos.
   </para>
   <para>
    <example>
     <title>
      Manejo de <function>session_set_save_handler</function>
     </title>
     <programlisting role="php">
&lt;?php

function open ($save_path, $session_name) {
    echo "open ($save_path, $session_name)\n";
    return true;
}

function close () {
    echo "close\n";
    return true;
}

function read ($key) {
    echo "write ($key, $val)\n";
    return "foo|i:1;";
}

function write ($key, $val) {
    echo "write ($key, $val)\n";
    return true;
}

function destroy ($key)
    return true;
}

function gc ($maxlifetime) {
    return true;
}

session_set_save_handler ("open", "close", "read", "write", "destroy", "gc");

session_start ();

$foo++;

?>
     </programlisting>
    </example>
   </para> 

   <para>
    Producirá los siguientes resultados:
   </para>

   <para>
    <programlisting>
$ ./php save_handler.php
Content-Type: text/html
Set-cookie: PHPSESSID=f08b925af0ecb52bdd2de97d95cdbe6b

open (/tmp, PHPSESSID)
read (f08b925af0ecb52bdd2de97d95cdbe6b)
write (f08b925af0ecb52bdd2de97d95cdbe6b, foo|i:2;)
close
    </programlisting>
   </para>

   <para>
    El <literal>&lt;?=SID?&gt;</literal> no es necesario, si
    <literal>--enable-trans-sid</literal> se usó para compilar PHP.
   </para>
   
   <para>
    El sistema gestor de sesiones soporta una serie de opciones de 
    configuración que puede poner en su fichero php.ini. Las vemos 
    a continuación.

    <itemizedlist>
     <listitem><simpara>
      <literal>session.save_handler</literal> define el nombre del
      handler que se usa para almacenar y recuperar los datos asociados
      con la sesión.  Por defecto es
      <literal>files</literal>.</simpara></listitem>

     <listitem><simpara>
      <literal>session.save_path</literal> define el argumento que se
      pasa al handler de grabación. Si escoge el handler por defecto,
      éste es el path donde los ficheros son creados.  Por defecto es
      <literal>/tmp</literal>.</simpara></listitem>

     <listitem><simpara>
      <literal>session.name</literal> especifica el nombre de la sesión 
      el cual se usa como nombre de la cookie. Debe contener sólo 
      caracteres alfanuméricos.  Por defecto es 
      <literal>PHPSESSID</literal>.</simpara></listitem>

     <listitem><simpara>
      <literal>session.auto_start</literal> especifica si el módulo de 
      sesión inicia automáticamente una sesión en la solicitud inicial.
      Por defecto es <literal>0</literal>
      (disabled).</simpara></listitem>

     <listitem><simpara>
      <literal>session.lifetime</literal> especifica el tiempo de vida
      de una cookie en segundos que se le envía al navegador. El valor
      0 significa "hasta que se cierre el navegador". Por defecto es
      <literal>0</literal>.</simpara></listitem>

     <listitem><simpara>
      <literal>session.serialize_handler</literal> define el nombre del 
      handler que se usa para serializr/deserializar datos. Actualmente,
      están soportados un formato interno de PHP (con nombre 
      <literal>php</literal>) y WDDX (con nombre 
      <literal>wddx</literal>). WDDX sólo está disponible si se compila
      PHP con <link linkend="ref.wddx">WDDX
      support</link>. Por defecto es
      <literal>php</literal>.</simpara></listitem>

     <listitem><simpara>
      <literal>session.gc_probability</literal> especifica la 
      probabilidad en tanto por cien de que la rutina de gc (garbage 
      collection) se en cada solicitud. Por defecto es
      <literal>1</literal>.</simpara></listitem>

     <listitem><simpara>
      <literal>session.gc_maxlifetime</literal> especifica el número de
      segundos después de los cuales los datos son considerados como
      'basura' y por tanto limpiados mediante gc.</simpara></listitem>

     <listitem><simpara>
      <literal>session.referer_check</literal> determina si los ids
      de sesión referidos a sitios externos son eliminados. Si los ids
      de sesión se propagan usando el método de URL los usuarios que 
      no conocen sus implicaciones podrían exponer sin querer los ids de
      sesión. Esto podría generar problemas de seguridad, que este chequeo
      trata de eliminar. Por defecto es 
      <literal>0</literal>.</simpara></listitem>

     <listitem><simpara>
      <literal>session.entropy_file</literal> da una ruta a un recurso 
      externo (un fichero) que se usará como fuente adicional de entropía
      en la creación del id de sesión. Un ejemplo sería
      <literal>/dev/random</literal> o bien <literal>/dev/urandom</literal>
      que están disponibles en muchos sistemas Unix.</simpara></listitem>

     <listitem><simpara>
      <literal>session.entropy_length</literal> especifica el número de
      bytes que se leerán del fichero arriba indicado. Por defecto es
      <literal>0</literal>(desactivado).</simpara></listitem>

     <listitem><simpara>
      <literal>session.use_cookies</literal> especifica si el módulo usará
      cookies para almacenar el id de sesión en el lado del cliente. Por 
      defecto es <literal>1</literal>
      (activado).</simpara></listitem>

    </itemizedlist>

   <note>
    <para>
     La gestión de sesiones se añadió en PHP 4.0.</para>
   </note></para>
  </partintro>

  <refentry id="function.session-start">
   <refnamediv>
    <refname>session_start</refname>
    <refpurpose>Inicializa las variables de sesión</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>bool <function>session_start</function></funcdef>
     <void/>
    </funcsynopsis>
    <simpara>
     <function>session_start</function> crea una sesión (o continua
     con la actual basada en el id de sesión pasado mediante una
     variable GET (o una cookie).</simpara>
    <simpara>
     Esta función siempre devuelve true.</simpara>
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-destroy">
   <refnamediv>
    <refname>session_destroy</refname>
    <refpurpose>Elimina toda la información registrada en una sesión</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>bool <function>session_destroy</function></funcdef>
     <void/>
    </funcsynopsis>
    <simpara>
     <function>session_destroy</function> elimina todos los datos 
     asociados a la sesión en curso.</simpara>
    <simpara>
     Esta función siempre devuelve true.</simpara>
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-name">
   <refnamediv>
    <refname>session_name</refname>
    <refpurpose>Obtiene y/o establece el nombre de la sesión en curso</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>string <function>session_name</function></funcdef>
     <paramdef>string <parameter><optional>name</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_name</function> devuelve el nombre de la sesión en curso.
     Si <parameter>name</parameter> está especificado, el nombre de la sesión 
     en curso es cambiado por éste.</para>
    <para>
     El nombre de la sesión referencia el id de sesión en las cookies y en las 
     URLs. Debería contener sólo caracteres alfanuméricos; debe ser corto y
     descriptivo (para que lo vean los usuarios que tengan activados los warnings 
     de cookies en su navegador). El nombre de la sesión es inicializado a su
     valor por defecto guardado en <literal>session.name</literal>
     en el momento de inicio de la sesión. Así, se hace necesario llamar a
     <function>session_name</function> en cada solicitud (y antes de que 
     <function>session_start</function> o
     <function>session_register</function> sean llamados).</para> 
    <example>
     <title>Ejemplos de <function>session_name</function></title>
     <programlisting>
&lt;?php

# Define el nombre de sesión como WebsiteID

$previous_name = session_name("WebsiteID");

echo "El nombre anterior era $previous_name&lt;p&gt;";
     </programlisting>
    </example>
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-module-name">
   <refnamediv>
    <refname>session_module_name</refname>
    <refpurpose>Obtiene y/o establece el módulo de sesión en curso</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>string <function>session_module_name</function></funcdef>
     <paramdef>string <parameter><optional>module</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_module_name</function> devuelve el nombre del módulo 
     de sesión en curso. Si <parameter>module</parameter> está especificado,
     dicho módulo será usado en su lugar.
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note></para>
   </refsect1>
  </refentry>

  <refentry id="function.session-save-path">
   <refnamediv>
    <refname>session_save_path</refname>
    <refpurpose>Obtiene o establece el path de grabación de la sesión en curso</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>string <function>session_save_path</function></funcdef>
     <paramdef>string <parameter><optional>path</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_save_path</function> devuelve la ruta del directorio que se está 
     usando para grabar la sesión en curso. Si el parámetro <parameter>path</parameter>
     se indica, el path donde se graben los datos cambiará.
    <note>
     <para>
      En algunos sistemas operativos, puede que le interese especificar un path en el 
      sistema de ficheros que maneje eficazmente grandes cantidades de pequeños 
      ficheros. Por ejemplo, bajo Linux, reiserfs puede dar mejor rendimiento que
      ext2fs.</para>
    </note>
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note></para>
   </refsect1>
  </refentry>

  <refentry id="function.session-id">
   <refnamediv>
    <refname>session_id</refname>
    <refpurpose>Obtiene o establece el id de sesión en curso</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>string <function>session_id</function></funcdef>
     <paramdef>string <parameter><optional>id</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_id</function> devuelve el id de la sesión en curso. Si 
     se especifica <parameter>id</parameter>, se reemplazará el id de la actual
     sesión.</para>
    <para>
     directorio usado para grabar los datos de sesión. Si <parameter>path</parameter>
     se especifica, el path donde se graben los datos cambiará.</para>
    <para>
     La constante <systemitem>SID</systemitem> se puede usar también para 
     obtener el nombre e id de la sesión en curso como una cadena preparada
     para ser añadida a las URLs.
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note></para>
   </refsect1>
  </refentry>

  <refentry id="function.session-register">
   <refnamediv>
    <refname>session_register</refname>
    <refpurpose>Registra una o más variables en la sesión en
    curso</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>bool <function>session_register</function></funcdef>
     <paramdef>mixed <parameter>name</parameter></paramdef>
     <paramdef>mixed
      <parameter><optional>...</optional></parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_register</function> tiene un número variable 
     de argumentos, cada uno de los cuales puede ser una cadena que 
     contiene el nombre de la variable, o un vector que contenga 
     esos nombres de variables u otros vectores. Por cada variable que
     se encuentre, <function>session_register</function> registra el 
     nombre de la variable como variable global en la sesión en 
     curso.</para>
    <para>
     Esta función devuelve true cuando la variable se registra con 
     éxito en la sesión.
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note></para>
   </refsect1>
  </refentry>

  <refentry id="function.session-unregister">
   <refnamediv>
    <refname>session_unregister</refname>
    <refpurpose>Desliga una variable de la sesión en curso</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>bool <function>session_unregister</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_unregister</function> desliga (olvida)
     la variable global llamada <parameter>name</parameter> de la
     sesión en curso.</para>
    <para>
     Esta función devuelve true cuando la variable se ha desligado
     de la sesión.
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note></para>
   </refsect1>
  </refentry>

  <refentry id="function.session-is-registered">
   <refnamediv>
    <refname>session_is_registered</refname>
    <refpurpose>Aveigua si una variable está registrada en una
    sesión</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>bool <function>session_is_registered</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_is_registered</function> devuelve true si hay 
     una variable que se llame <parameter>name</parameter> registrada 
     en la sesión en curso.
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note></para>
   </refsect1>
  </refentry>

  <refentry id="function.session-decode">
   <refnamediv>
    <refname>session_decode</refname>
    <refpurpose>Extrae los datos de sesión a partir de una
    cadena</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>bool <function>session_decode</function></funcdef>
     <paramdef>string <parameter>data</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>session_decode</function> extrae los datos de
     sesión en <parameter>data</parameter>, dando valores a
     las variables almacenadas en la sesión.
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note></para>
   </refsect1>
  </refentry>

  <refentry id="function.session-encode">
   <refnamediv>
    <refname>session_encode</refname>
    <refpurpose>Codifica los datos de la sesión en curso en una
    cadena</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripción</title>
    <funcsynopsis>
     <funcdef>bool <function>session_encode</function></funcdef>
     <void/>
    </funcsynopsis>
    <para>
     <function>session_encode</function> devuelve una cadena
     con los contenidos de la sesión en curso dentro.
    <note>
     <para>
      Esta función se añadió en PHP 4.0.</para>
    </note></para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
