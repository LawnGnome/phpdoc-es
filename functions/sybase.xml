<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.sybase">
  <title>Funciones de Sybase</title>
  <titleabbrev>Sybase</titleabbrev>

  <refentry id="function.sybase-affected-rows">
   <refnamediv>
    <refname>sybase_affected_rows</refname>
    <refpurpose>obtiene el n&uacute;mero de filas afectadas por la &uacute;ltima consulta</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_affected_rows</function></funcdef>
     <paramdef>int <parameter><optional>link_identifier</optional>
                   </parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve: El n&uacute;mero de filas afectadas por la &uacute;ltima consulta.</para>
    <para>
     <function>sybase_affected_rows</function> devuelve el n&uacute;mero de
     filas afectadas por la &uacute;ltima acci&oacute;n e tipo INSERT, UPDATE o DELETE
     en el servidor asociado al identificador de enlace especificado. Si
     no se especifica un identificador de enlace, se asume el &uacute;ltimo enlace
     abierto.</para>
    <para>
     Esta instrucci&oacute;n no es efectiva para sentencias de tipo SELECT, s&oacute;lo
     en sentencias que modifican registros. Para obtener el n&uacute;mero de filas
     afectadas por un SELECT, use <function>sybase_num_rows</function>.
    <note>
     <para>
      Esta funci&oacute;n s&oacute;lo esta disponible usando el interface de la librer&iacute;a
      CT, y no con la librer&iacute;a DB.
     </para>
    </note></para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-close">
   <refnamediv>
    <refname>sybase_close</refname>
    <refpurpose>cierra una conexi&oacute;n Sybase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_close</function></funcdef>
     <paramdef>int <parameter>link_identifier</parameter></paramdef>
    </funcsynopsis>
    <para>Devuelve: &true; si lo consigue, &false; ante un error
    </para>
    <para> sybase_close() cierra el enlace a la base de datos Sybase
    asociada con el identificador de enlace especificado. Si
    no se especifica un identificador de enlace, se asume el &uacute;ltimo enlace
    abierto.
    </para>
    <para> Note que esto no es necesario usualmente, ya que los
    enlaces no persistentes abiertos son cerrados automaticamente
    al final de la ejecuci&oacute;n del script.
    </para>
    <para> sybase_close() no cerrar&aacute; enlaces persistentes generados por
    sybase_pconnect().
    </para>
    <para> Vea tambi&eacute;n: <function>sybase_connect</function>,
                     <function>sybase_pconnect</function>.
    </para> 
   </refsect1>
  </refentry>

  <refentry id="function.sybase-connect">
   <refnamediv>
    <refname>sybase_connect</refname>
    <refpurpose>abre una conexi&oacute;n con un servidor Sybase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_connect</function></funcdef>
     <paramdef>string <parameter>servername</parameter></paramdef>
     <paramdef>string <parameter>username</parameter></paramdef>
     <paramdef>string <parameter>password</parameter></paramdef>
    </funcsynopsis>
    <para> Devuelve: Un identificador de enlace Sybase positivo, o
    &false; ante un error.
    </para>
    <para> sybase_connect() establece una conexi&oacute;n son un servidor Sybase.
    El par&aacute;metro servername tiene que ser un nombre de servidor v&aacute;lido que
    esta definido en el fichero 'interfaces'.
    </para>
    <para> En el caso que se haga una segunda llamada a sybase_connect() 
    con los mismos argumentos, no se establecer&aacute; un nuevo enlace, en vez
    de esto, se devolver&aacute; el identificador de enlace que ya est&aacute; abierto.
    </para>
    <para> El enlace al servidor ser&aacute; cerrado tan pronto como
    la ejecuci&oacute;n del script finalice, a menos que sea cerrado antes
    llamando explicitamente a <function>sybase_close</function>.
    </para>
    <para>Vea tambi&eacute;n <function>sybase_pconnect</function>, 
                   <function>sybase_close</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-data-seek">
   <refnamediv>
    <refname>sybase_data_seek</refname>
    <refpurpose>mueve el puntero interno de la fila</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_data_seek</function></funcdef>
     <paramdef>int <parameter>result_identifier</parameter></paramdef>
     <paramdef>int <parameter>row_number</parameter></paramdef>
    </funcsynopsis>
    <para> Devuelve: &true; si lo hace, &false; en caso de fallo
    </para>
    <para> sybase_data_seek() mueve el puntero interno de la fila
    del resultado asociado con el identificador de resultado especificado
    hacia el n&uacute;mero de fila introducido. La siguiente llamada a
    <function>sybase_fetch_row</function> devolver&aacute; esa fila.
    </para>
    <para> Vea tambi&eacute;n: <function>sybase_data_seek</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-array">
   <refnamediv>
    <refname>sybase_fetch_array</refname>
    <refpurpose>carga una fila como un array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_fetch_array</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para> Returns: An array that corresponds to the fetched row, or
    &false; if there are no more rows.
    </para>
    <para>
     sybase_fetch_array() es la versi&oacute;n extendida de
     <function>sybase_fetch_row</function>.  Adem&aacute;s de almacenar los
     datos en los indices numericos del array de resultados, tambi&eacute;n
     almacena los datos en indices asociativos, usando los nombres de
     campo como claves.
    </para>
    <para>
     Una cosa importante a remarcar es que el uso de sybase_fetch_array() 
     NO es significativamente m&aacute;s lento que el uso de sybase_fetch_row(), 
     mientr&aacute;s que proporciona un valor a&ntilde;adido significativo.</para>
    <para>
     Para m&aacute;s detalles, vea tambi&eacute;n
     <function>sybase_fetch_row</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-field">
   <refnamediv>
    <refname>sybase_fetch_field</refname>
    <refpurpose>obtiene la informaci&oacute;n del campo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>object <function>sybase_fetch_field</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
     <paramdef>int <parameter>field_offset</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve un objeto conteniendo la informaci&oacute;n del campo
    </para>
    <para>
     sybase_fetch_field() puede usarse para obtener informaci&oacute;n sobre
     los campos de una consulta determinada. Si no se especifica el 
     offset del campo, el siguiente campo que a&uacute;n no halla sido tomado
     por sybase_fetch_field() es el que se obtiene.
    </para>
    <para>
     Las propiedades del objeto son:
    </para>

     <itemizedlist>
      <listitem><simpara>
	name - column name.  si la columna es el resultado de una funci&oacute;n, esta propiedad
	se establece a computed#N, donde #N es un n&uacute;mero de serie.
       </simpara></listitem>
      <listitem><simpara>
	column_source - la tabla de la cual se ha cogido la columna
       </simpara></listitem>
      <listitem><simpara>
	max_length - m&aacute;xima longitud de la columna
       </simpara></listitem>
      <listitem><simpara>
	numeric - 1 si la columna es num&eacute;rica
       </simpara></listitem> 
     </itemizedlist>

    <para>
     Vea tambi&eacute;n <function>sybase_field_seek</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-object">
   <refnamediv>
    <refname>sybase_fetch_object</refname>
    <refpurpose>carga una fila como un objeto</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_fetch_object</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para> Devuelve: Un objeto con las propiedades que corresponden a la
    fila tomada, o &false; si no hay m&aacute;s filas.
    </para>
    <para> sybase_fetch_object() es similar a
    <function>sybase_fetch_array</function>, con una diferencia - se
    devuelve un objeto, en vez de un array. Indirectamente, esto significa
    que s&oacute;lo se puede acceder a los datos por los nombres de campo, y no 
    por sus offsets (los n&uacute;meros son nombres de propiedades ilegales).</para>  
    <para>
    En el tema de velocidad, la funci&oacute;n es id&eacute;ntica a
    <function>sybase_fetch_array</function>, y al menos tan r&aacute;pida como
    <function>sybase_fetch_row</function> (la diferencia es
    insignificante).
    </para>
    <para> Vea tambi&eacute;n: <function>sybase_fetch-array</function> y
                     <function>sybase_fetch-row</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-fetch-row">
   <refnamediv>
    <refname>sybase_fetch_row</refname>
    <refpurpose>obtiene una fila como un array enumerado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>array <function>sybase_fetch_row</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para> Devuelve: Un array que corresponde a la fila obtenida, o
    &false; si no hay m&aacute;s filas.
    </para>
    <para>
     sybase_fetch_row() obtiene una fila de datos del resultado asociado
     con el identificador de resultado especificado. La fila se 
     devuelve como un array. Cada columna del resultado es almacenada en
     un offset del arrat, comenzando en el offset 0.
    </para>
    <para>
     Las siguientes llamadas a sybase_fetch_rows() devolver&aacute;n la siguiente
     fila del conjunto de resultados, o &false; si no hay m&aacute;s filas.
    </para>
    <para>
     Vea tambi&eacute;n: <function>sybase_fetch_array</function>,
               <function>sybase_fetch_object</function>,
               <function>sybase_data_seek</function>,
               <function>sybase_fetch_lengths</function>, y
               <function>sybase_result</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-field-seek">
   <refnamediv>
    <refname>sybase_field_seek</refname>
    <refpurpose>establece el offset de un campo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_field_seek</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
     <paramdef>int <parameter>field_offset</parameter></paramdef>
    </funcsynopsis>
    <para>
     Localiza el campo especificado por el offset. Si la siguiente llamada
     <function>sybase_fetch_field</function> no incluye un offset
     se devuelve este campo.</para>
    <para></para>
    <para>
     Vea tambi&eacute;n: <function>sybase_fetch_field</function>.</para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-free-result">
   <refnamediv>
    <refname>sybase_free_result</refname>
    <refpurpose>libera el resultado de la memoria</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_free_result</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>sybase_free_result</function> s&oacute;lo se necesita usar en
     el caso de que este preocupado por el uso de demasiada memoria
     mientras se ejecuta su script. Todos los resultados en memoria
     son liberados cuando el script finaliza, puede llamar a
     <function>sybase_free_result</function> con el identificador de resultado
     como argumento y la memoria asociada a ese resultado ser&aacute; liberada.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-num-fields">
   <refnamediv>
    <refname>sybase_num_fields</refname>
    <refpurpose>obtiene el n&uacute;mero de campos de un resultado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_num_fields</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para> sybase_num_fields() devuelve el n&uacute;mero de campos en un conjunto de resultados.
    </para>
    <para> 
     Vea tambi&eacute;n:  
     <function>sybase_db_query</function>, 
     <function>sybase_query</function>, 
     <function>sybase_fetch_field</function>, 
     <function>sybase_num_rows</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-num-rows">
   <refnamediv>
    <refname>sybase_num_rows</refname>
    <refpurpose>obtiene el n&uacute;mero de filas de un resultado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_num_rows</function></funcdef>
     <paramdef>string <parameter>result</parameter></paramdef>
    </funcsynopsis>
    <para>
     sybase_num_rows() devuelve el n&uacute;mero de filas de un conjunto de resultados.
    </para>
    <para>
     Vea tambi&eacute;n:  
     <function>sybase_db_query</function>, 
     <function>sybase_query</function> and, 
     <function>sybase_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-pconnect">
   <refnamediv>
    <refname>sybase_pconnect</refname>
    <refpurpose>abre una conexi&oacute;n con Sybase persistente</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_pconnect</function></funcdef>
     <paramdef>string <parameter>servername</parameter></paramdef>
     <paramdef>string <parameter>username</parameter></paramdef>
     <paramdef>string <parameter>password</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Devuelve: Un identificador de enlace persistente de Sybase positivo
     en caso de que pueda abrirlo, en caso de error devuelve &false;</para>
    <para>
     sybase_pconnect() actua de una forma muy parecida a
     <function>sybase_connect</function> con dos grandes diferencias.</para>
    <para> 
     Primera, cuando se conecta, esta funci&oacute;n primero tratar&aacute; de encontrar
     un enlace (persistente) que ya este abierto con el mismo host, 
     nombre de usuario y contrase&ntilde;a. Si encuentra uno, devolver&aacute; un
     identificador para &eacute;l en vez de abrir una nueva conexi&oacute;n.</para>
    <para> 
     Segunda, la conexi&oacute;n al servidor SQL no se cerrar&aacute; cuando finalice
     la ejecuci&oacute;n del script. En vez de esto, el enlace permanecer&aacute;
     abierto para un futuro uso (<function>sybase_close</function> no
     podr&aacute; cerrar enlaces establecidos con<literal>sybase_pconnect()</literal>).</para>
    <para> 
     Este tipo de enlaces son llamados 'persistentes'.</para>

   </refsect1>
  </refentry>

  <refentry id="function.sybase-query">
   <refnamediv>
    <refname>sybase_query</refname>
    <refpurpose>env&iacute;a una consulta a Sybase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_query</function></funcdef>
     <paramdef>string <parameter>query</parameter></paramdef>
     <paramdef>int <parameter>link_identifier</parameter></paramdef>
    </funcsynopsis>
    <para> Devuelve: Un identificador de resultado Sybase positivo si va bien, o
    &false; ante un error.
    </para>
    <para> sybase_query() env&iacute;a una consulta a la actual base de datos activa
    en el servidor que est&aacute; asociada con el identificador de enlace especificado.
    Si no se especifica un identificador de enlace, se asume el &uacute;ltimo
    enlace abierto. Si no hay un enlace abierto, la funci&oacute;n intentar&aacute;
    establecer un enlace como si <function>sybase_connect</function> 
    fuese llamada, y lo usar&aacute;.
    </para>
    <para>
     Vea tambi&eacute;n:  
     <function>sybase_db_query</function>, 
     <function>sybase_select_db</function>, y 
     <function>sybase_connect</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-result">
   <refnamediv>
    <refname>sybase_result</refname>
    <refpurpose>obtiene datos de un resultado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_result</function></funcdef>
     <paramdef>int <parameter>result</parameter></paramdef>
     <paramdef>int <parameter>i</parameter></paramdef>
     <paramdef>mixed <parameter>field</parameter></paramdef>
    </funcsynopsis>
    <para> Devuelve: El contenido de la celda en la fila y el offset especificado
    de un conjunto de resultados de Sybase.
    </para>
    <para>
     sybase_result() devuelve el contenido de una celda de un conjunto
     de resultados de Sybase. El par&aacute;metro field puede ser el offset del
     campo, o el nombre del campo, o el nombre de la tabla, un punto y el nombre 
     del campo (nombre_tabla.nombre_campo). Si el nombre de la columna
     tiene un alias ('select foo as bar from...'), use el alias en vez del 
     nombre de la columna.
    </para>
    <para>
     Cuando trabaje con conjuntos de resultados grandes, debe considerar
     el uso de alguna de las funciones que cargan una fila entera
     (especificadas abajo). Ya que estas funciones devuelven el contenido
     de multiples celdas en una &uacute;nica llamada, son MUCHO m&aacute;s r&aacute;pidas que
     sybase_result().  Adem&aacute;s, note que especificar un offset n&uacute;merico
     en el par&aacute;metro field es mucho m&aacute;s r&aacute;pido que especificar un nombre
     de campo o nombre_tabla.nombre_campo.
    </para>
    <para>
     Alternativas recomendadas para alto rendimiento:
     <function>sybase_fetch_row</function>, 
     <function>sybase_fetch_array</function>, y
     <function>sybase_fetch_object</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sybase-select-db">
   <refnamediv>
    <refname>sybase_select_db</refname>
    <refpurpose>seleccciona una base de datos Sybase</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>sybase_select_db</function></funcdef>
     <paramdef>string <parameter>database_name</parameter></paramdef>
     <paramdef>int <parameter>link_identifier</parameter></paramdef>
    </funcsynopsis>
    <para> Returns: &true; on success, &false; on error
    </para>
    <para> sybase_select_db() establece como activa la base de datos 
    en el servidor asociada con el identificador de enlace especificado.
    Si no se especifica un identificador de enlace, se asume el &uacute;ltimo
    enlace abierto. Si no hay un enlace abierto, la funci&oacute;n intentar&aacute;
    establecer un enlace como si <function>sybase_connect</function> 
    fuese llamada, y lo usar&aacute;.
    </para>
    <para>
     Cada llamada subsiguiente a <function>sybase_query</function> ser&aacute; hecha
     en la base de datos activa.
    </para>
    <para> Vea tambi&eacute;n:
     <function>sybase_connect</function>, 
     <function>sybase_pconnect</function>, y
     <function>sybase_query</function>
    </para>
   </refsect1>
  </refentry>

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
