 <reference id="ref.mysql">
  <title>Funciones MySQL</title>
  <titleabbrev>MySQL</titleabbrev>
  <partintro>
   <simpara>
    Estas funciones le permiten acceder a servidores de bases de datos MySQL.
   </simpara>
   <simpara>
    Puede encontrar m&aacute;s informaci&oacute;n sobre MySQL en <ulink
    url="http://www.mysql.com/">http://www.mysql.com/</ulink>.
   </simpara>
  </partintro>

  <refentry id="function.mysql-affected-rows">
   <refnamediv>
    <refname>mysql_affected_rows</refname>
    <refpurpose>Devuelve el n&uacute;mero de filas afectadas de la &uacute;ltima
     operaci&oacute;n MySQL
     </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_affected_rows</function></funcdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_affected_rows</function> devuelve el n&uacute;mero de
     filas afectadas en la ultima sentencia INSERT, UPDATE o DELETE sobre
     el servidor asociado con el identificador de enlace especificado. Si el
     identificador de enlace no ha sido especificado, se asume por defecto el
     &uacute;ltimo enlace.
    </para>
    <para>
     Si la &uacute;ltima sentencia fue un DELETE sin clausula WHERE, todos
     los registros han sido borrados de la tabla pero esta funci&oacute;n
     devolvera cero.
    </para>
    <para>
     Este comando no es efectivo para las sentencias SELECT, sino s&oacute;lo
     para las sentencias que modifican registros. Para conseguir el
     n&uacute;mero de lineas devueltos por un SELECT, usar
     <function>mysql_num_rows</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-change-user">
   <refnamediv>
    <refname>mysql_change_user</refname>
    <refpurpose>
     Cambia el usuario conectado en la conexi&oacute;n activa
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_change_user</function></funcdef>
     <paramdef>string <parameter>usuario</parameter></paramdef>
     <paramdef>string <parameter>password</parameter></paramdef>
     <paramdef>string
      <parameter>
       <optional>base_de_datos</optional>
      </parameter>
     </paramdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_change_user</function> cambia el usuario conectado
     en la actual conexi&oacute;n activa, o si se especifica, en la
     conexi&oacute;n determinada por el identificador de enlace. Si se
     especifica la base de datos, esta ser&aacute; la base por defecto
     despu&eacute;s del cambio de usuario. Si la nueva combinaci&oacute;n
     de usuario/ password no esta autorizada, el usuario actualmente
     conectado permanece activo.</para>
     <note><para>Esta funci&oacute;n fue introducida en PHP 3.0.13 y
     requiere MySQL 3.23.3 o superior.
    </para></note>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-close">
   <refnamediv>
    <refname>mysql_close</refname>
    <refpurpose>cierra el enlace con MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_close</function></funcdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Devuelve: verdadero si exito, falso si error.
    </para>
    <para>
     <function>mysql_close</function> cierra el enlace con la base MySQL
     que esta asociada con el identificador de enlace especificado.
     Si no se especifica el identificador de enlace, se asume por defecto
     el &uacute;ltimo enlace.
    </para>
    <note><para>
     Normalmente no es necesario ya que la aperturas no-persistentes
     son cerradas automaticamente al final de la ejecuci&oacute;n del
     script.
    </para></note>
    <para>
     <function>mysql_close</function> no cerrar&aacute; los enlaces
     persistentes generados con <function>mysql_pconnect</function>.
    </para>
    <example>
     <title>Ejemplo de MySQL close</title>
     <programlisting role="php">
&lt;?php
    $link = mysql_connect ("kraemer", "marliesle", "secret") {
        or die ("Could not connect");
    }
    print ("Connected successfully");
    mysql_close ($link);
?>
     </programlisting>
    </example>
    <para>
     Ver tambi&eacute;n: <function>mysql_connect</function>, y
     <function>mysql_pconnect</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-connect">
   <refnamediv>
    <refname>mysql_connect</refname>
    <refpurpose>Abre una conexi&oacute;n a un servidor MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_connect</function></funcdef>
     <paramdef>string
      <parameter>
       <optional>hostname
        <optional>:puerto</optional>
        <optional>:/camino/al/socket</optional>
       </optional>
      </parameter>
     </paramdef>
     <paramdef>string
      <parameter>
       <optional>usuario</optional>
      </parameter>
     </paramdef>
     <paramdef>string
      <parameter>
       <optional>password</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Devuelve: Un identificador de enlace positivo si tiene exito, o falso si
     error.
    </para>
    <para>
     <function>mysql_connect</function>establece una conexi&oacute;n a
     un servidor MySQL. Todos los argumentos son opcionales, y si no hay
     , se asumen los valores por defecto ('localhost', usuario propietario del
     proceso del servidor, password vacia).
    </para>
    <para>
     El hostname puede incluir tambien un n&uacute;mero de puerto
     . ej. &quot;hostname:puerto&quot; o un camino al socket
     ej. &quot;:/camino/al/socket&quot; para localhost.
     <note>
      <para>
       Soporte para &quot;:puerto&quot; fue a&ntilde;adido en PHP 3.0B4.
      </para>
      <para>
       Soporte para &quot;:/camino/al/socket&quot; fue a&ntilde;adido en
       PHP 3.0.10.
      </para>
     </note>
    </para>
    <para>
     En el caso de que se haga una llamada a
     <function>mysql_connect</function> con los mismos argumentos, no
     se establecer&aacute; un nuevo enlace, sino que se devolver&aacute;
     el enlace ya abierto.
    </para>
    <para>
     El enlace al servidor sera cerrado tan pronto como la ejecuci&oacute;n
     del script finalice, a menos que se cierre antes explicitamente llamando a
     <function>mysql_close</function>.
    </para>
    <example>
     <title>Ejemplo de MySQL connect</title>
     <programlisting role="php">
&lt;?php
    $link = mysql_connect ("kraemer", "marliesle", "secret") {
        or die ("Could not connect");
    }
    print ("Connected successfully");
    mysql_close ($link);
?>
     </programlisting>
    </example>
    <para> Ver tambi&eacute;n :
    <function>mysql_pconnect</function>, y
     <function>mysql_close</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-create-db">
   <refnamediv>
    <refname>mysql_create_db</refname>
    <refpurpose>Crea una base MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_create_db</function></funcdef>
     <paramdef>string <parameter>base_de_datos</parameter></paramdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_create_db</function> intenta crear una base
     nueva en el servidor asociado al identificador de enlace.
    </para>
    <example>
     <title>Ejemplo de MySQL create</title>
     <programlisting role="php">
&lt;?php
    $link = mysql_pconnect ("kron", "jutta", "geheim") {
        or die ("Could not connect");
    }
    if (mysql_create_db ("my_db")) {
        print ("Database created successfully\n");
    } else {
        printf ("Error creating database: %s\n", mysql_error ());
    }
?>
     </programlisting>
    </example>
    <para>
     Por razones de compatibilidad puede usarse <function>mysql_createdb</function>
     igualmente.
    </para>
    <para>
     Ver tambi&eacute;n: <function>mysql_drop_db</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-data-seek">
   <refnamediv>
    <refname>mysql_data_seek</refname>
    <refpurpose>Mueve el puntero interno</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_data_seek</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int <parameter>numero_de_fila</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve: verdadero si exito, falso si error.
    </para>
    <para>
     <function>mysql_data_seek</function> mueve el puntero de fila
     interno a la fila especificada para el identificador de resultado.
     La pr&oacute;xima llamada a <unction>mysql_fetch_row</function>
     devolver&aacute; esa fila.
    </para>
    <para>
     <parameter>numero_de_fila</parameter> empieza en 0.
    </para>

    <example>
     <title>Ejemplo de MySQL data seek</title>
     <programlisting role="php">
&lt;?php
    $link = mysql_pconnect ("kron", "jutta", "geheim") {
        or die ("Could not connect");
    }

    mysql_select_db ("samp_db") {
        or die ("Could not select database");
    }

    $query = "SELECT last_name, first_name FROM friends";
    $result = mysql_query ($query) {
        or die ("Query failed");
    }

    # fetch rows in reverse order

    for ($i = mysql_num_rows ($result) - 1; $i >=0; $i--) {
        if (!mysql_data_seek ($result, $i)) {
            printf ("Cannot seek to row %d\n", $i);
            continue;
        }

        if(!($row = mysql_fetch_object ($result)))
            continue;

        printf ("%s %s&lt;BR>\n", $row->last_name, $row->first_name);
    }

    mysql_free_result ($result);
?>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-db-query">
   <refnamediv>
    <refname>mysql_db_query</refname>
    <refpurpose>Envia una sentencia MySQL al servidor</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_db_query</function></funcdef>
     <paramdef>string <parameter>base_de_datos</parameter></paramdef>
     <paramdef>string <parameter>sentencia</parameter></paramdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Devuelve: Un identificador de resultado positivo o falso si error.
    </para>
    <para>
     <function>mysql_db_query</function> selecciona una base y ejecuta
     una sentencia en ella. Si el identificador de enlace no ha sido
     especificado, la funci&oacute;n intenta encontrar un enlace abierto
     al servidor MySQL y si no lo encuentra, intetar&aacute; crear uno
     como si fuera llamado <function>mysql_connect</function> sin
     argumentos
    </para>
    <para>
     Ver tambi&eacute;n<function>mysql_connect</function>.
    </para>
    <para>
     Por razones de compatibilidad puede usarse
     <function>mysql</function> igualmente.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-drop-db">
   <refnamediv>
    <refname>mysql_drop_db</refname>
    <refpurpose>Borra una base de datos MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_drop_db</function></funcdef>
     <paramdef>string <parameter>base_de_datos</parameter></paramdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Devuelve: verdadero si &eacute;xito, falso si error.
    </para>
    <para>
     <function>mysql_drop_db</function> intenta suprimir una base
     de datos completa del servidor asociado al identificador de
     enlace.
    </para>
    <para>
     Ver tambi&eacute;n: <function>mysql_create_db</function>. Por razones
     de compatibilidad puede usarse <function>mysql_dropdb</function> igualmente.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-errno">
   <refnamediv>
    <refname>mysql_errno</refname>
    <refpurpose>Deuelve el n&uacute;mero del mensaje de error de la 
     &uacute;ltima operaci&oacute;n MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_errno</function></funcdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Los errores devueltos por mySQL no indican los warnings.
     Usar estas funciones para encontrar el n&uacute;mero de 
     error.
     <informalexample>
      <programlisting role="php">
&lt;?php
mysql_connect("marliesle");
echo mysql_errno().": ".mysql_error()."&lt;BR>";
mysql_select_db("nonexistentdb");
echo mysql_errno().": ".mysql_error()."&lt;BR>";
$conn = mysql_query("SELECT * FROM nonexistenttable");
echo mysql_errno().": ".mysql_error()."&lt;BR>";
?>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Ver tambi&eacute;n: <function>mysql_error</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-error">
   <refnamediv>
    <refname>mysql_error</refname>
    <refpurpose>Devuelve el texto del mensaje de error de la &uacute;ltima
     operaci&oacute;n MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>mysql_error</function></funcdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Los errores devueltos por mySQL no indican los warnings.
     Usar estas funciones para encontrar el n&uacute;mero de 
     error.
     <informalexample>
      <programlisting role="php">
&lt;?php
mysql_connect("marliesle");
echo mysql_errno().": ".mysql_error()."&lt;BR>";
mysql_select_db("nonexistentdb");
echo mysql_errno().": ".mysql_error()."&lt;BR>";
$conn = mysql_query("SELECT * FROM nonexistenttable");
echo mysql_errno().": ".mysql_error()."&lt;BR>";
?>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Ver tambi&eacute;n: <function>mysql_errno</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-fetch-array">
   <refnamediv>
    <refname>mysql_fetch_array</refname>
    <refpurpose>
     Extrae la fila de resultado como una matriz asociativa
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>array <function>mysql_fetch_array</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int
      <parameter>
       <optional>tipo_de_resultado</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Devuelve una matriz que corresponde a la sentencia extraida, o falso
     si no quedan m&aacute;s filas.</para>
    <para>
     <function>mysql_fetch_array</function> es una versi&oacute;n extendida
     de <function>mysql_fetch_row</function>.  Adem&aacute;s de guardar los
     datos en el indice numerico de la matriz, guarda tambi&eacute;n los 
     datos en los indices asociativos, usando el nombre de campo como clave.
    </para>
    <para>
     Si dos o m&aacute;s columnas del resultado tienen el mismo nombre de
     campo, la &uacute;ltima columna toma la prioridad. Para acceder a la(s)
     otra(s) columna(s) con el mismo nombre, se debe escificar el indice 
     numerico o definir un alias para la columna.
     <informalexample>
      <programlisting>
select t1.f1 as foo t2.f1 as bar from t1, t2
      </programlisting>
     </informalexample>
    </para>
    <para>
     La funci&oacute;n <function>mysql_fetch_array</function> no es
     significativemente mas lenta que <function>mysql_fetch_row</function>,
     sin embargo tiene un valor a&ntilde;adido importante.
    </para>
    <para>
     El segundo argumento opcional <parameter>tipo_de_resultado</parameter>
     en <function>mysql_fetch_array</function> es una constante y puede tomar
     los valores siguientes: MYSQL_ASSOC, MYSQL_NUM, y MYSQL_BOTH. (Esta 
     funcionalidad fue a&ntilde;adida en PHP 3.0.7)
    </para>
    <para>
     Para m&aacute;s detalles, ver tambi&eacute;n
     <function>mysql_fetch_row</function>.
    </para>
    <example>
     <title>mysql fetch array</title>
     <programlisting role="php">
&lt;?php
mysql_connect($host,$user,$password);
$result = mysql_db_query("database","select * from table");
while($row = mysql_fetch_array($result)) {
    echo $row["user_id"];
    echo $row["fullname"];
}
mysql_free_result($result);
?>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-fetch-field">
   <refnamediv>
    <refname>mysql_fetch_field</refname>
    <refpurpose>
     Extrae la informaci&oacute;n de una columna y la devuelve como un objeto.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>object <function>mysql_fetch_field</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int
      <parameter>
       <optional>salto</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Devuelve un objeto que contiene la informaci&oacute;n del campo.
    </para>
    <para>
     Puede usarse <function>mysql_fetch_field</function> para obtener
     informaci&oacute;n sobre campos en un resultado. Si no se especifica
     el salto, se extrae el siguiente campo que todavia no ha sido extraido.
     con <function>mysql_fetch_field</function>.
    </para>
    <para>
     Las propiedades del objeto son:
     <itemizedlist>
      <listitem>
       <simpara>
        name - nombre de la columna
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        table - name de la tabla a la que pertenece la columna
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        max_length - longitud m&aacute;xima de la columna
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        not_null - 1 si la columna no puede contener un valor nulo
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        primary_key - 1 si la columna es clave primaria
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        unique_key - 1 si la columna es clave unica
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        multiple_key - 1 si la columna es clave no unica
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        numeric - 1 si la columna es numerica
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        blob - 1 si la columna es un BLOB
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        type - el tipo de la columna
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        unsigned - 1 si la columna es unsigned
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        zerofill - 1 si la columna es zero-filled
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Ver tambi&eacute;n <function>mysql_field_seek</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-fetch-lengths">
   <refnamediv>
    <refname>mysql_fetch_lengths</refname>
    <refpurpose>
     Devuelve la longitud de cada salida en un resultado
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>array <function>mysql_fetch_lengths</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve: Una matriz que contiene las longitudes de cada campo de
     la &uacute;ltima fila extraida por <function>mysql_fetch_row</function>,
     o falso si error.
    </para>
    <para>
     <function>mysql_fetch_lengths</function> almacena las longitudes de cada
     columna en la &uacute;ltima fila devuelta por
     <function>mysql_fetch_row</function>,
     <function>mysql_fetch_array</function>, y
     <function>mysql_fetch_object</function> en una matriz, empezando por 0.
    </para>
    <para>
     Ver tambi&eacute;n: <function>mysql_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-fetch-object">
   <refnamediv>
    <refname>mysql_fetch_object</refname>
    <refpurpose>Extrae una fila de resultado como un objeto</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>object <function>mysql_fetch_object</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int
      <parameter>
       <optional>tipo_de_resultado</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Devuelve un objeto con las propiedades aur corresponden a la 
     &uacute;ltima fila extraida, o falso si no quedan m&aacute;s filas.
    </para>
    <para>
     <function>mysql_fetch_object</function> es similar a
     <function>mysql_fetch_array</function>, con la diferencia que un 
     objeto es devuelto en lugar de una matriz.  Indirectamente, quiere decir
     que solo se puede aceder a los datos por el nombre del campo, y no por
     su posici&oacute;n.
    </para>
    <para>
     El argumento opcional <parameter>tipo_de_resultado</parameter> es una
     constante y puede tomar los valores siguientes: MYSQL_ASSOC,
     MYSQL_NUM, y MYSQL_BOTH.
    </para>
    <para>
     La funci&oacute;n es identica a 
     <function>mysql_fetch_array</function>, y casi tan r&aacute;pida como
     <function>mysql_fetch_row</function> (la diferencia es insignificante).
     <example>
      <title>mysql fetch object</title>
      <programlisting role="php">
&lt;?php
mysql_connect($host,$user,$password);
$result = mysql_db_query("database","select * from table");
while($row = mysql_fetch_object($result)) {
    echo $row->user_id;
    echo $row->fullname;
}
mysql_free_result($result);
?>
      </programlisting>
     </example>
    </para>
    <para>
     Ver tambi&eacute;n: <function>mysql_fetch_array</function> y
     <function>mysql_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-fetch-row">
   <refnamediv>
    <refname>mysql_fetch_row</refname>
    <refpurpose>Devuelve una fila de resultado como matriz</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>array <function>mysql_fetch_row</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve: Una matriz que corresponde a la fila selecionada, o falso
     si no quedan m&aacute;s lineas.
    </para>
    <para>
     <function>mysql_fetch_row</function> seleciona una fila de datos del
     resultado asociado al identificador de resultado especificado.  La
     fila es devuelta como una matriz.  Cada columna del resultdo es guardada en
     un offset de la matriz, empezando por el offset 0.
    </para>
    <para>
     La llamada a <function>mysql_fetch_row</function> deber&iacute;a 
     devolver la pr&oacute;xima fila del resultado, o falso si no quedan
     m&aacute;s filas.
    </para>
    <para>
     Ver tambi&eacute;n: <function>mysql_fetch_array</function>,
     <function>mysql_fetch_object</function>,
     <function>mysql_data_seek</function>,
     <function>mysql_fetch_lengths</function>, and
     <function>mysql_result</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-field-name">
   <refnamediv>
    <refname>mysql_field_name</refname>
    <refpurpose>
     Devuelve el nombre del campo especificado en un resultado
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>mysql_field_name</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int <parameter>indice_del_campo</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_field_name</function> devuelve el nombre del 
     campo especificado. Los argumentos de la funci&oacute;n son el 
     identificador de resultado y el indice del campo. Por ejemplo:
     <literal>mysql_field_name($result,2);</literal>
    </para>
    <para>
     Devolver&aacute; el nombre del segundo campo asociado al identificador
     de resultado.
    </para>
    <para>
     Por razones de compatibilidad puede usarse tambien
     <function>mysql_fieldname</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-field-seek">
   <refnamediv>
    <refname>mysql_field_seek</refname>
    <refpurpose>
     Asigna el puntero del resultado al offset del campo especificado
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_field_seek</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int <parameter>offset_del_campo</parameter></paramdef>
    </funcsynopsis>
    <para>
     Busca el offset del campo especificado.  Si la pr&oacute;xima llamada a
     <function>mysql_fetch_field</function> no incluye un offset de campo,
     se devolver&aacute; ese campo.
    </para>
    <para>
     Ver tambi&eacute;n: <function>mysql_fetch_field</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-field-table">
   <refnamediv>
    <refname>mysql_field_table</refname>
    <refpurpose>
     Devuelve el nombre de la tabla donde esta el campo especificado
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>mysql_field_table</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int <parameter>offset_del_campo</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve el nombre de la tabla del campo. Por razones de compatibilidad
     puede usarse tambien <function>mysql_fieldtable</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-field-type">
   <refnamediv>
    <refname>mysql_field_type</refname>
    <refpurpose>
     Devuelve el tipo del campo especificado en un resultado
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>mysql_field_type</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int <parameter>offset_del_campo</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_field_type</function> es similar a la funci&oacute;n
     <function>mysql_field_name</function>. Los argumentos son
     identicos, pero se devuelve el tipo de campo. El tipo sera
     "int", "real", "string", "blob", o otros detallados en la
     documentaci&oacute;n de MySQL.
     <example>
      <title>mysql field types</title>
      <programlisting role="php">
&lt;?php
mysql_connect("localhost:3306");
mysql_select_db("wisconsin");
$result = mysql_query("SELECT * FROM onek");
$fields = mysql_num_fields($result);
$rows   = mysql_num_rows($result);
$i = 0;
$table = mysql_field_table($result, $i);
echo "Your '".$table."' table has ".$fields." fields and ".$rows." records &lt;BR>";
echo "The table has the following fields &lt;BR>";
while ($i &lt; $fields) {
    $type  = mysql_field_type  ($result, $i);
    $name  = mysql_field_name  ($result, $i);
    $len   = mysql_field_len   ($result, $i);
    $flags = mysql_field_flags ($result, $i);
    echo $type." ".$name." ".$len." ".$flags."&lt;BR>";
    $i++;
}
mysql_close();
?>
      </programlisting>
     </example>
    </para>
    <para>
     Por razones de compatibilidad puede usarse tambien
     <function>mysql_fieldtype</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-field-flags">
   <refnamediv>
    <refname>mysql_field_flags</refname>
    <refpurpose>
     Devuelve los flags asociados con el campo especificado en un resultado
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>mysql_field_flags</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int <parameter>offset_del_campo</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_field_flags</function> devuelve los flags del campo
     especificado. Cada flag es devuelto como una palabra y estan separados
     un unico espacio, se puede dividir el resultado devuelto utilizando
     <function>explode</function>.
    </para>
    <para>Los siguientes flags pueden ser devueltos si tu versi&oacute;n de 
     MySQL los soporta: "not_null", "primary_key",
     "unique_key", "multiple_key", "blob", "unsigned", "zerofill",
     "binary", "enum", "auto_increment", "timestamp".
    </para>
    <para>
     Por razones de compatibilidad puede usarse tambien 
     <function>mysql_fieldflags</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-field-len">
   <refnamediv>
    <refname>mysql_field_len</refname>
    <refpurpose>
     Devuelve la longitud del campo especificado
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_field_len</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int <parameter>offset_del_campo</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_field_len</function> devuelve la longitud del 
     campo especificado.  Por razones de compatibilidad puede usarse
     tambien <function>mysql_fieldlen</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-free-result">
   <refnamediv>
    <refname>mysql_free_result</refname>
    <refpurpose>Libera la memoria del resultado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_free_result</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_free_result</function> solo necesita ser llamada
     si te preocupa usar demasiado memoria durante la ejecuci&oacute;n de
     tu script. Toda la memoria del resultado especificado en el parametro
     del identificador de resultado sera automaticamente liberada.
    </para>
    <para>
     Por razones de compatibilidad puede usarse tambien 
     <function>mysql_freeresult</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-insert-id">
   <refnamediv>
    <refname>mysql_insert_id</refname>
    <refpurpose>
     Devuelve el identificador generado en la &uacute;ltima llamada a INSERT
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_insert_id</function></funcdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_insert_id</function> devuelve el identificador generado
     para un campo de tipo AUTO_INCREMENTED.  Se devolvera el identificador
     genrado por el &uacute;ltimo INSERT para el 
     <parameter>identificador_de_enlace</parameter>.  Si no se especifica el 
     <parameter>identificador_de_enlace</parameter>, se asume por defecto
     el &uacute;ltimo enlace abierto.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-list-fields">
   <refnamediv>
    <refname>mysql_list_fields</refname>
    <refpurpose>Lista los campos del resultado de MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_list_fields</function></funcdef>
     <paramdef>string <parameter>base_de_datos</parameter></paramdef>
     <paramdef>string <parameter>tabla</parameter></paramdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_list_fields</function> lista informaci&oacute;n
     sobre la tabla. Los argumentos son la base de datos y el nombre de 
     la tabla. Se devuelve un puntero que puede ser usado por las 
     funci&oacute;nes <function>mysql_field_flags</function>,
     <function>mysql_field_len</function>,
     <function>mysql_field_name</function>, y
     <function>mysql_field_type</function>.
    </para>
    <para>
     Un identificador de resultado es un entero positivo. La funci&oacute;n
     devuelve -1 si se produce un error. Una cadena de caracteres describiendo
     el error sera introducida en <literal>$phperrmsg</literal>, y a menos que
     la funci&oacute;n sea llamada como <literal>@mysql()</literal> el literal 
     del error tambien sera impreso.
    </para>
    <para>
     Por razones de compatibilidad puede usarse tambien 
     <function>mysql_listfields</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-list-dbs">
   <refnamediv>
    <refname>mysql_list_dbs</refname>
    <refpurpose>
     Lista las bases de datos disponibles en el servidor MySQL
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_list_dbs</function></funcdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_list_dbs</function> devuelve un puntero de resultado
     que contiene las bases disponibles en el actual demonio mysql.
     Utiliza la funci&oacute;n <function>mysql_tablename</function> para
     explotar el puntero de resultado.
    </para>
    <para>
     Por razones de compatibilidad puede usarse tambien 
     <function>mysql_listdbs</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-list-tables">
   <refnamediv>
    <refname>mysql_list_tables</refname>
    <refpurpose>Lista las tablas en una base de datos MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_list_tables</function></funcdef>
     <paramdef>string <parameter>base_de_datos</parameter></paramdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_list_tables</function> toma el nombre de la base y
     devuelve un puntero de resultado como la funci&oacute;n 
     <function>mysql_db_query</function>.  La funci&oacute;n
     <function>mysql_tablename</function> debe ser usada para extraer
     los nombres de las tablas del puntero.
    </para>
    <para>
     Por razones de compatibilidad puede usarse tambien 
     <function>mysql_listtables</function>.
     can also be used.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-num-fields">
   <refnamediv>
    <refname>mysql_num_fields</refname>
    <refpurpose>devuelve el numero de campos de un resultado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_num_fields</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_num_fields</function> devuelve el numero de campos de 
     un identificador de resultado.
    </para>
    <para>
     Ver tambi&eacute;n:
     <function>mysql_db_query</function>,
     <function>mysql_query</function>,
     <function>mysql_fetch_field</function>,
     <function>mysql_num_rows</function>.</para>
    <para>
     Por razones de compatibilidad puede usarse tambien 
     <function>mysql_numfields</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-num-rows">
   <refnamediv>
    <refname>mysql_num_rows</refname>
    <refpurpose>Devuelve el numero de filas de un resultado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_num_rows</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_num_rows</function> Devuelve el numero de filas de un 
     identificador de resultado.
    </para>
    <para>
     Ver tambi&eacute;n:
     <function>mysql_db_query</function>,
     <function>mysql_query</function> and,
     <function>mysql_fetch_row</function>.
    </para>
    <para>
     Por razones de compatibilidad puede usarse tambien
     <function>mysql_numrows</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-pconnect">
   <refnamediv>
    <refname>mysql_pconnect</refname>
    <refpurpose>
     Abre una conexi&oacute;n persistente al servidor MySQL
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_pconnect</function></funcdef>
     <paramdef>string
      <parameter>
       <optional>hostname
        <optional>:puerto</optional>
        <optional>:/camino/al/socket</optional>
       </optional>
      </parameter>
     </paramdef>
     <paramdef>string
      <parameter><optional>usuario</optional></parameter>
     </paramdef>
     <paramdef>string
      <parameter><optional>password</optional></parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Devuelve: un identificador de enlace persistente,
     o falso si se produce un error.
    </para>
    <para>
     <function>mysql_pconnect</function> establece una conexi&oacute;n a 
     un servidor MySQL.  Todos los argumentos son opcionales, y si no 
     existen, se asumen los valores por defecto ('localhost', nombre del
     usuario propietario del proceso, password vacia).
    </para>
    <para>
     El hostname puede incluir un numero de puerto. ej. 
     &quot;hostname:port&quot; o un camino al socket ej. 
     &quot;:/camino/al/socket&quot; para el puerto para el host local.
     <note>
      <para>
       Soporte para &quot;:puerto&quot; fue a&ntilde;adido en 3.0B4.
      </para>
      <para>
       Soporte para &quot;:/camino/al/socket&quot; fue a&ntilde;adido
       en 3.0.10.
      </para>
     </note>
    </para>
    <para>
     <function>mysql_pconnect</function> actua como 
     <function>mysql_connect</function> con dos diferencias fundamentales.
    </para>
    <para>
     Primero, durante la conexi&oacute;n, la funci&oacute;n intenta primero
     encontrar un enlace persistente abierto con el mismo host, usuario y
     password.  Si lo encuentra, devuelve el identificador de enlace en lugar
     de abrir otra conexi&oacute;n.
    </para>
    <para>
     Segundo, la conexi&oacute;n no sera cerrado cuando acabe la 
     ejecuci&oacute;n del script.  El enlace permanecera abierta para ser
     usado en el futuro (<function>mysql_close</function> will not
     cierra el enlace establecido con <function>mysql_pconnect</function>).
    </para>
    <para>
     Este tipo de enlaces son llamados 'persistentes'.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-query">
   <refnamediv>
    <refname>mysql_query</refname>
    <refpurpose>Envia una sentencia SQL a MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_query</function></funcdef>
     <paramdef>string <parameter>sentencia</parameter></paramdef>
     <paramdef>int
      <parameter><optional>identificador_de_enlace</optional></parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_query</function> envia una sentencia a la base activa
     en el servidor asociado al identificador de enlace. Si no es especificado
     un <parameter>identificador_de_enlace</parameter>, se asumira el ultilmo
     enlace abierto.  Si no hay ningun enlace abierto, la funci&oacute;n 
     intenta estalecer un enlace como si se llamara funci&oacute;n 
     <function>mysql_connect</function> sin argumentos, y lo utiliza.
    </para>
    <para>
     La sentencia no puede terminar por punto y coma.
    </para>
    <para>
     <function>mysql_query</function> devuelve TRUE (no-cero) o FALSE
     para indicar si la sentencia se ha ejecutado correctamente o no. Un valor
     TRUE significa que la sentencia era correcta y pudo ser ejecutada en el 
     servidor.  No indica nada sobre el numero de fila devueltas. Es 
     perfectamente posible que la sentencia se ejecute correctamente pero que
     no devuelve ninguna fila.
    </para>
    <para>
     La siguiente sentencia es invalida sintacticamente, asi que 
     <function>mysql_query</function> falla y devuelve FALSE:
     <example>
      <title><function>mysql_query</function></title>
      <programlisting role="php">
&lt;?php
$result = mysql_query ("SELECT * WHERE 1=1")
    or die ("Invalid query");
?>
      </programlisting>
     </example>
    </para>
    <para>
     La siguiente sentencia es invalida semanticamente si 
     <literal>my_col</literal> no es una columna de la tabla
     <literal>my_tbl</literal>, asi que <function>mysql_query</function>
     falla y devuelve FALSE:
     <example>
      <title><function>mysql_query</function></title>
      <programlisting role="php">
&lt;?php
$result = mysql_query ("SELECT my_col FROM my_tbl")
    or die ("Invalid query");
?>
      </programlisting>
     </example>
    </para>
    <para>
     <function>mysql_query</function> fallara tambien y devolvera FALSE
     si no se tiene el permiso de acceso a la tabla especificada en la 
     sentencia.
    </para>
    <para>
     Asumiendo la sentencia tenga exito, se puede llamar a 
     <function>mysql_affected_rows</function> para saber cuantas filas
     fueron afectadas (para DELETE, INSERT, REPLACE, o UPDATE )
     Para las sentencias SELECT, <function>mysql_query</function> devuelve
     un nuevo identificador de resultado que se puede pasar a 
     <function>mysql_result</function>.  Cuando se acabe de utilizar el 
     resultado, se pueden liberar los recursos asociados utilizando
     <function>mysql_free_result</function>.
    </para>
    <para>
     Ver tambi&eacute;n: <function>mysql_affected_rows</function>,
     <function>mysql_db_query</function>,
     <function>mysql_free_result</function>,
     <function>mysql_result</function>,
     <function>mysql_select_db</function>, and
     <function>mysql_connect</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-result">
   <refnamediv>
    <refname>mysql_result</refname>
    <refpurpose>Devuelve datos de un resultado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_result</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int <parameter>numero_de_fila</parameter></paramdef>
     <paramdef>mixed
      <parameter>
       <optional>campo</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_result</function> devuelve el contenido de una celda
     de un resultado MySQL. El campo argumento puede ser el nombre del campo
     o el offset o tabla.nombre_del_campo. Si el nombre de la columna tiene
     un alias ('select foo as bar from...'), utilice el alias en lugar del 
     nombre de la columna.
    </para>
    <para>
     Cuando se trabaja un un gran resultado, debe considerarse la utilizacion
     de una funcion que devuelva una fila entera ya que estas funciones son 
     MUCHO mas rapidas que <function>mysql_result</function>.  Tambien,  
     especificando un offset numerico en lugar del nombre del campo, la 
     ejecucion sera mas rapida.
    </para>
    <para>
     Las llamadas a <function>mysql_result</function> no deben mezclarse
     con llamadas a las otras sentencias que trabajan con un identificador de 
     resultado.
    </para>
    <para>
     Alternativas recomendadas:
     <function>mysql_fetch_row</function>,
     <function>mysql_fetch_array</function>, y
     <function>mysql_fetch_object</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-select-db">
   <refnamediv>
    <refname>mysql_select_db</refname>
    <refpurpose>Selecciona un base de datos MySQL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mysql_select_db</function></funcdef>
     <paramdef>string <parameter>base_de_datos</parameter></paramdef>
     <paramdef>int
      <parameter>
       <optional>identificador_de_enlace</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Devuelve : true si exito, false si error.
    </para>
    <para>
     <function>mysql_select_db</function> establece la base activa que estara
     asociada con el identificador de enlace especificado.  Si no se especifica
     un identificador de enlace, se asume el ultimo enlace abierto. Si no hay
     ningun enlace abierto, la funci&oacute;n intentara establecer un enlace
     como si se llamara a <function>mysql_connect</function>.
    </para>
    <para>
     Toda llamada posterior a <function>mysql_query</function> utilizara la base
     activada.
    </para>
    <para> Ver tambi&eacute;n:
     <function>mysql_connect</function>,
     <function>mysql_pconnect</function>, and
     <function>mysql_query</function>.
    </para>
    <para>
     Por razones de compatibilidad puede usarse tambien 
     <function>mysql_selectdb</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mysql-tablename">
   <refnamediv>
    <refname>mysql_tablename</refname>
    <refpurpose>Devuelve el nombre de la tabla de un campo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>mysql_tablename</function></funcdef>
     <paramdef>int <parameter>id_resultado</parameter></paramdef>
     <paramdef>int <parameter>i</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>mysql_tablename</function> toma un puntero de resultado 
     devuelto por <function>mysql_list_tables</function> asi como un 
     indice (integer) y devuelve el nomnre de una tabla. Se puede usar la 
     funci&oacute;n <function>mysql_num_rows</function> para determinar el 
     nombre de tablas en el puntero de resultado.
     <example>
      <title><function>Mysql_tablename</function> Example</title>
      <programlisting role="php">
&lt;?php
mysql_connect ("localhost:3306");
$result = mysql_list_tables ("wisconsin");
$i = 0;
while ($i &lt; mysql_num_rows ($result)) {
    $tb_names[$i] = mysql_tablename ($result, $i);
    echo $tb_names[$i] . "&lt;BR>";
    $i++;
}
?>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

