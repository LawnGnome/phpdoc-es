<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.fdf">
  <title>Funciones Forms Data Format (Formato de Datos de Formularios)</title>
  <titleabbrev>FDF</titleabbrev>

  <partintro>

   <simpara>
    El Formato de Datos de Formulario (FDF) est&aacute; dise&ntilde;ado para el manejo
    de formularios en archivos PDF. Se aconseja leer la informaci&oacute;n disponible en <ulink url="http://partners.adobe.com/asn/developer/acrosdk/forms.html">http://partners.adobe.com/asn/developer/acrosdk/forms.html</ulink>
    para m&aacute;s informaci&oacute;n sobre lo que es FDF y c&oacute;mo se usa en general.</simpara>

   <note><simpara>
    Actualmente Adobe s&oacute;lo proporciona una versi&oacute;n compatible con libc5 para Linux.
    Las pruebas con glibc2 provocaron un fallo de segmentado. Si alguien es capaz
    de hacerla funcionar, por favor com&eacute;ntelo en esta p&aacute;gina.
   </simpara></note>

   <note><simpara>
    Si tiene problemas configurando php con soporte de fdftk, compruebe
    si el archivo de cabecera FdfTk.h y la librer&iacute;a libFdfTk.so est&aacute;n en
    su lugar correcto. Deber&iacute;an encontrarse respectivamente en fdftk-dir/include
    y en fdftk-dir/lib. Este problema no se dar&aacute; si se limita a desempaqueta
    la distribuc&oacute;n del FtdTk.
   </simpara></note>

   <simpara>
    La idea general del FDF es similar a los formularios HTML. La diferencia
    b&aacute;sicamente est&aacute; en el formato en que se transmiten los datos al servidor
    cuando se pulsa el bot&oacute;n de env&iacute;o (este es realmente 
    el Formato de Datos de Formulario) y el formato del formulario en s&iacute; mismo
    (que es el Formato de Documento Portable, PDF). Procesar lo datos del FDF
    es una de las caracter&iacute;sticas que proporcionan las funciones fdf. Pero a&uacute;n
    hay m&aacute;s. Uno tambi&eacute;n puede tomar un formulario PDF y rellenar los campos de
    entrada con datos sin modificar el formulario en s&iacute; mismo. En dicho caso, lo
    que se hace es crear un documento FDF (<function>fdf_create</function>), fijar
    los valores de cada campo de entrada (<function>fdf_set_value</function>) y 
    asociarlo con un formulario PDF (<function>fdf_set_file</function>). 
    Finalmente, debe ser enviado al navegador con el MimeType application/vnd.fdf.
    El plug-in de Acrobar reader de su navegador reconoce el MimeType, lee el formulario
    PDF asociado y rellena los datos a partir del documento FDF.
    </simpara>

   <simpara>
    Los siguientes ejemplos muestran c&oacute;mo se eval&uacute;an los datos de los formularios.</simpara>
   <simpara></simpara>
    <example>
     <title>Evaluando un documento FDF</title>
     <programlisting>
&lt;?php
// Guarda los datos FDF en un archivo temporal
$fdffp = fopen("test.fdf", "w");
fwrite($fdffp, $HTTP_FDF_DATA, strlen($HTTP_FDF_DATA));
fclose($fdffp);

// Abre archivo temporal y eval&uacute;a los datos
// El formulario pdf conten&iacute;a varios campos de texto con los nombres
// volumen, fecha, comentario, editorial, preparador, y dos casillas de verificaci&oacute;n
// muestra_editorial y muestra_preparador.
$fdf = fdf_open("test.fdf");
$volume = fdf_get_value($fdf, "volumen");
echo "El campo volumen tiene el valor '&lt;B>$volume&lt;/B>'&lt;BR>";

$date = fdf_get_value($fdf, "fecha");
echo "El campo fecha tiene el valor '&lt;B>$date&lt;/B>'&lt;BR>";

$comment = fdf_get_value($fdf, "comentario");
echo "El campo comentario tiene el valor '&lt;B>$comment&lt;/B>'&lt;BR>";

if(fdf_get_value($fdf, "muestra_editorial") == "On") {
  $publisher = fdf_get_value($fdf, "editorial");
  echo "El campo editorial tiene el valor '&lt;B>$publisher&lt;/B>'&lt;BR>";
} else
  echo "No se debe mostrar la editorial.&lt;BR>";

if(fdf_get_value($fdf, "muestra_preparador") == "On") {
  $preparer = fdf_get_value($fdf, "preparador");
  echo "El campo preparador tiene el valor '&lt;B>$preparer&lt;/B>'&lt;BR>";
} else
  echo "No se debe mostrar el preparador.&lt;BR>";
fdf_close($fdf);
?>
     </programlisting>
    </example>

  </partintro>

  <refentry id="function.fdf-open">
   <refnamediv>
    <refname>fdf_open</refname>
    <refpurpose>Abrir un documento FDF</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fdf_open</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_open</function> abre un archivo
     con datos de formulario. Este archivo debe contener los datos
     tal y como se devuelven en un formulario PDF. Actualmente dicho
     archivo debe crearse "manualmente" usando la funci&oacute;n <function>fopen</function> 
     y escribiendo en &eacute;ste el contenido de HTTP_FDF_DATA usando <function>fwrite</function>.
     No existe un mecanismo similar al de los formularios HTML donde se
     crea una variable para cada campo de entrada.</para>

    <para>
    <example>
     <title>Accediendo a los datos del formulario</title>
     <programlisting>
&lt;?php
// Guarda los datos FDF en un archivo temporal
$fdffp = fopen("test.fdf", "w");
fwrite($fdffp, $HTTP_FDF_DATA, strlen($HTTP_FDF_DATA));
fclose($fdffp);

// Abre archivo temporal y eval&uacute;a los datos
$fdf = fdf_open("test.fdf");
...
fdf_close($fdf);
?>
     </programlisting>
    </example></para>

    <para>
     Vea tambi&eacute;n <function>fdf_close</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-close">
   <refnamediv>
    <refname>fdf_close</refname>
    <refpurpose>Cerrar un documento FDF</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>void <function>fdf_close</function></funcdef>
     <paramdef>int <parameter>fdf_document</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_close</function> cierra un documento FDF.</para>

    <para>
     Vea tambi&eacute;n <function>fdf_open</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-create">
   <refnamediv>
    <refname>fdf_create</refname>
    <refpurpose>Crear un documento FDF</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fdf_create</function></funcdef>
     <paramdef>void <parameter></parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_create</function> crea un documento FDF
     nuevo. Esta funci&oacute;n se necesita si se desea rellenar los campos
     de entrada en un documento PDF.</para>
    <para>
    <example>
     <title>Rellenando un documento PDF</title>
     <programlisting>
&lt;?php
$outfdf = fdf_create();
fdf_set_value($outfdf, "volumen", $volume, 0);

fdf_set_file($outfdf, "http:/testfdf/resultlabel.pdf");
fdf_save($outfdf, "outtest.fdf");
fdf_close($outfdf);
Header("Content-type: application/vnd.fdf");
$fp = fopen("outtest.fdf", "r");
fpassthru($fp);
unlink("outtest.fdf");
?>
     </programlisting>
    </example></para>

    <para>
     Vea tambi&eacute;n <function>fdf_close</function>,
              <function>fdf_save</function>,
              <function>fdf_open</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-save">
   <refnamediv>
    <refname>fdf_save</refname>
    <refpurpose>Guardar un documeto FDF</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fdf_save</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_save</function> guarda un documento
     FDF.
     El kit de FDF proporciona una forma de volcar el documento a
     stdout si el par&aacute;metro <parameter>filename</parameter>
     es '.'. Esto no funciona si el PHP se utiliza como un m&oacute;dulo
     del apache.
     En tal caso se deber&aacute; escribir a un fichero y utilizar p. ej.
     <function>fpassthru</function> para visualizarlo.</para>

    <para>
     Vea tambi&eacute;n <function>fdf_close</function> y el ejemplo para
              <function>fdf_create</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-get-value">
   <refnamediv>
    <refname>fdf_get_value</refname>
    <refpurpose>Obtener el valor de un campo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>fdf_get_value</function></funcdef>
     <paramdef>int <parameter>fdf_document</parameter></paramdef>
     <paramdef>string <parameter>fieldname</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_get_value</function> devuelve el 
     valor de un campo.</para>

    <para>
     Vea tambi&eacute;n <function>fdf_set_value</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-value">
   <refnamediv>
    <refname>fdf_set_value</refname>
    <refpurpose>Fijar el valor de un campo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>void <function>fdf_set_value</function></funcdef>
     <paramdef>int <parameter>fdf_document</parameter></paramdef>
     <paramdef>string <parameter>fieldname</parameter></paramdef>
     <paramdef>string <parameter>value</parameter></paramdef>
     <paramdef>int <parameter>isName</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_set_value</function> fija el valor de
     un campo. El par&aacute;metro final determina si el valor del campo se
     deber&aacute; convertir a un Nombre PDF (<parameter>isName</parameter> = 1)
     o convertir en una Cadena PDF (<parameter>isName</parameter> = 0).</para>

    <para>
     Vea tambi&eacute;n <function>fdf_get_value</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-next-field-name">
   <refnamediv>
    <refname>fdf_next_field_name</refname>
    <refpurpose>Obtener el nombre del siguiente campo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>fdf_next_field_name</function></funcdef>
     <paramdef>int <parameter>fdf_document</parameter></paramdef>
     <paramdef>string <parameter>fieldname</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_next_field_name</function> devuelve el nombre
     del campo tras el campo
     <parameter>fieldname</parameter> o el nombre del primer campo si
     el segundo par&aacute;metro es &null;.</para>

    <para>
     Vea tambi&eacute;n <function>fdf_set_field</function>,
              <function>fdf_get_field</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-ap">
   <refnamediv>
    <refname>fdf_set_ap</refname>
    <refpurpose>Ajusta la apariencia de un campo</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>void <function>fdf_set_ap</function></funcdef>
     <paramdef>int <parameter>fdf_document</parameter></paramdef>
     <paramdef>string <parameter>field_name</parameter></paramdef>
     <paramdef>int <parameter>face</parameter></paramdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>int <parameter>page_number</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_set_ap</function> ajusta la apariencia
     de un campo (p. ej. el valor de la clave /AP).
     Los valores posibles de <parameter>face</parameter>
     son 1=FDFNormalAP, 2=FDFRolloverAP, 3=FDFDownAP.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-status">
   <refnamediv>
    <refname>fdf_set_status</refname>
    <refpurpose>Fija el valor de la clave /STATUS</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>void <function>fdf_set_status</function></funcdef>
     <paramdef>int <parameter>fdf_document</parameter></paramdef>
     <paramdef>string <parameter>status</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_set_status</function> fija el valor
     de la clave /STATUS.</para>

    <para>
     Vea tambi&eacute;n <function>fdf_get_status</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-get-status">
   <refnamediv>
    <refname>fdf_get_status</refname>
    <refpurpose>Obtener el valor de la clave /STATUS</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>fdf_get_status</function></funcdef>
     <paramdef>int <parameter>fdf_document</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_get_status</function> devuelve el valor
     de la clave /STATUS.</para>

    <para>
     Vea tambi&eacute;n <function>fdf_set_status</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-file">
   <refnamediv>
    <refname>fdf_set_file</refname>
    <refpurpose>Fijar el valor de la clave /F</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>void <function>fdf_set_file</function></funcdef>
     <paramdef>int <parameter>fdf_document</parameter></paramdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_set_file</function> fija el valor
     de la clave /F. La clave /F es simplemente una referencia a
     un formulario PDF que se va a rellenar con datos.
     En un entorno web es un URL (p.ej. http:/testfdf/resultlabel.pdf).</para>

    <para>
     Vea tambi&eacute;n <function>fdf_get_file</function> y el ejemplo para
              <function>fdf_create</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-get-file">
   <refnamediv>
    <refname>fdf_get_file</refname>
    <refpurpose>Obtener el valor de la clave /F</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>fdf_get_file</function></funcdef>
     <paramdef>int <parameter>fdf_document</parameter></paramdef>
    </funcsynopsis>
    <para>
     La funci&oacute;n <function>fdf_set_file</function> devuelve el valor
     de la clave /F.</para>

    <para>
     Vea tambi&eacute;n <function>fdf_set_file</function>.</para>

   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
