 <reference id="ref.filesystem">
  <title>Funciones del sistema de ficheros</title>
  <titleabbrev>Filesystem</titleabbrev>

  <refentry id="function.basename">
   <refnamediv>
    <refname>basename</refname>
    <refpurpose>
     Devuelve la parte del path correspondiente al nombre del fichero
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>basename</function></funcdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcsynopsis>
    <para>
     Dada una cadena (string) que contiene el path de un fichero,
     esta funci&oacute;n devuelve el nombre base del fichero.
    </para>
    <para>
     En Windows, tanto la barra (<literal>/</literal>) como la barra inversa
     (<literal>\</literal>) pueden usarse como caracter separador en el path. En
     otros entornos, se usa la barra directa
     (<literal>/</literal>).
    </para>
    <para>
     <example>
      <title>Ejemplo de <function>basename</function></title>
      <programlisting role="php">
$path = "/home/httpd/html/index.php3";
$file = basename($path); // $file toma el valor "index.php3"
      </programlisting>
     </example>
    </para>
    <para>
     Ver tambi&eacute;n: <function>dirname</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.chgrp">
   <refnamediv>
    <refname>chgrp</refname>
    <refpurpose>Cambia el grupo de un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>chgrp</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>mixed <parameter>group</parameter></paramdef>
    </funcsynopsis>
    <para>
     Trata de cambiar el grupo al que pertenece el fichero filename 
     al grupo group. S&oacute;lo el superusuario puede cambiar el grupo de
     un fichero arbitrariamente; otros usuarios pueden cambiar el
     grupo del fichero a cualquier grupo del cual el usuario sea
     miembro. 
    </para>
    <para>
     Devuelve &true; en caso de &eacute;xito; en otro caso devuelve &false;.
    </para>
    <para>
     En Windows, no hace nada y devuelve &true;.
    </para>
    <para>
     Ver tambi&eacute;n <function>chown</function> y
     <function>chmod</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.chmod">
   <refnamediv>
    <refname>chmod</refname>
    <refpurpose>Cambia permisos de un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>chmod</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>int <parameter>mode</parameter></paramdef>
    </funcsynopsis>
    <para>
     Trata de cambiar los permisos del fichero especificado por
     <parameter>filename</parameter> a los permisos dados por
     <parameter>mode</parameter>.
    </para>
    <para>
     Cuidado que <parameter>mode</parameter> no es asumido de forma
     autom&aacute;tica como un valor octal. Para asegurar que se hace la
     operaci&oacute;n esperada necesitas anteponer un cero (0) como prefijo
     del par&aacute;metro <parameter>mode</parameter>:
     <informalexample>
      <programlisting role="php">
chmod( "/somedir/somefile", 755 );   // decimal; probablemente incorrecto       
chmod( "/somedir/somefile", 0755 );  // octal; valor correcto de mode
      </programlisting>
     </informalexample>
    </para>
    <para>
     Devuelve &true; en caso de &eacute;xito y &false; en otro caso.
    </para>
    <para>
     Ver tambi&eacute;n <function>chown</function> y
     <function>chgrp</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.chown">
   <refnamediv>
    <refname>chown</refname>
    <refpurpose>Cambia el propietario de un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>chown</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>mixed <parameter>user</parameter></paramdef>
    </funcsynopsis>
    <para>
     Trata de cambiar el propietario del fichero filename al 
     usuario user. S&oacute;lo el superusuario puede cambiar el propietario
     de un fichero.
    </para>
    <para>
     Devuelve &true; en caso de &eacute;xito; en otro caso devuelve &false;.
     <note>
      <simpara>En Windows, no hace nada y devuelve &true;.
      </simpara>
     </note>
    </para>
    <para>
     Ver tambi&eacute;n <function>chown</function> y
     <function>chmod</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.clearstatcache">
   <refnamediv>
    <refname>clearstatcache</refname>
    <refpurpose>Limpia la cache de estado de un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>void <function>clearstatcache</function></funcdef>
     <void/>
    </funcsynopsis>
    <para>
     Invocar la llamada del sistema <systemitem>stat</systemitem> o
     <systemitem>lstat</systemitem> es bastante costoso en la mayor&iacute;a
     de los sistemas. Por lo tanto, el resultado de la &uacute;ltima llamada
     a cualquiera de las funciones de estado (listadas abajo) es
     guardado para usarlo en la pr&oacute;xima llamada de este tipo empleando el
     mismo nombre de fichero. Si deseas forzar un nuevo chequeo del 
     estado del fichero, por ejemplo si el fichero est&aacute; siendo chequeado
     muchas veces y puede cambiar o desaparecer, usa esta funci&oacute;n para
     borrar los resultados almacenados en memoria de la &uacute;ltima llamada.
    </para>
    <para>
     Este valor s&oacute;lo es cacheado durante el tiempo de vida de una petici&oacute;n simple.
    </para>
    <para>
     Entre las funciones afectadas se incluyen <function>stat</function>,
     <function>lstat</function>,
     <function>file_exists</function>,
     <function>is_writeable</function>,
     <function>is_readable</function>,
     <function>is_executable</function>,
     <function>is_file</function>,
     <function>is_dir</function>,
     <function>is_link</function>,
     <function>filectime</function>,
     <function>fileatime</function>,
     <function>filemtime</function>,
     <function>fileinode</function>,
     <function>filegroup</function>,
     <function>fileowner</function>,
     <function>filesize</function>,
     <function>filetype</function>, y
     <function>fileperms</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.copy">
   <refnamediv>
    <refname>copy</refname>
    <refpurpose>Copia un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>copy</function></funcdef>
     <paramdef>string <parameter>source</parameter></paramdef>
     <paramdef>string <parameter>dest</parameter></paramdef>
    </funcsynopsis>
    <para>
     Hace una copia de un fichero. Devuelve &true; si la copia tiene
     &eacute;xito, y &false; en otro caso.
     <example>
      <title>Ejemplo de <function>copy</function></title>
      <programlisting role="php">
if (!copy($file, $file.'.bak')) {
    print("failed to copy $file...&lt;br>\n");
}
      </programlisting>
     </example>
    </para>
    <para>
     Ver tambi&eacute;n: <function>rename</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.delete">
   <refnamediv>
    <refname>delete</refname>
    <refpurpose>Una entrada manual in&uacute;til</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>void <function>delete</function></funcdef>
     <paramdef>string <parameter>file</parameter></paramdef>
    </funcsynopsis>
     <para>
      Esto es una entrada manual in&uacute;til para satisfacer a esas personas
      que est&aacute;n buscando <function>unlink</function> o
      <function>unset</function> en el lugar equivocado.</para>
     <para>
      Ver tambi&eacute;n: <function>unlink</function> para borrar ficheros,
      <function>unset</function> para borrar variables.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dirname">
   <refnamediv>
    <refname>dirname</refname>
    <refpurpose>Devuelve la parte del path correspondiente al directorio</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>dirname</function></funcdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcsynopsis>
    <para>
     Dada una cadena (string) conteniendo el path a un fichero, esta funci&oacute;n 
     devolver&aacute; el nombre del directorio.</para>
    <para>
     En Windows, tanto la barra (<literal>/</literal>) como la barra inversa
     (<literal>\</literal>) son usadas como separadores de caracteres.  En
     otros entornos, debe usarse la barra directa
     (<literal>/</literal>).</para>
    <para>
     <example>
      <title>Ejemplo de <function>dirname</function></title>
      <programlisting role="php">
$path = "/etc/passwd";
$file = dirname($path); // $file toma el valor "/etc"
      </programlisting>
     </example>
    </para>
    <para>
     Ver tambi&eacute;n: <function>basename</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.diskfreespace">
   <refnamediv>
    <refname>diskfreespace</refname>
    <refpurpose>Devuelve el espacio disponible en un directorio</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>float <function>diskfreespace</function></funcdef>
     <paramdef>string <parameter>directory</parameter></paramdef>
    </funcsynopsis>
    <para>
     Dada una cadena (string) conteniendo el nombre de un directorio,
     esta funci&oacute;n devolver&aacute; el n&uacute;mero de bytes disponibles en el disco
     correspondiente.
    </para>
    <para>
     <example>
      <title>Ejemplo de <function>diskfreespace</function></title>
      <programlisting role="php">
$df = diskfreespace("/"); // $df contiene el numero de bytes 
                          // disponibles en "/"
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fclose">
   <refnamediv>
    <refname>fclose</refname>
    <refpurpose>Cierra el apuntador a un fichero abierto</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>fclose</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
    </funcsynopsis>
    <para>
     Se cierra el fichero apuntado por fp.
    </para>
    <para>
     Devuelve &true; en caso de &eacute;xito y &false; en caso de fallo.
    </para>
    <para>
     El apuntador al fichero debe ser v&aacute;lido y debe apuntarse a un
     fichero abierto con &eacute;xito con <function>fopen</function> o con
     <function>fsockopen</function>.
    </para> 
   </refsect1>
  </refentry>

  <refentry id="function.feof">
   <refnamediv>
    <refname>feof</refname>
    <refpurpose>Verifica si el apuntador a un fichero est&aacute; al final del fichero (end-of-file)</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>feof</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve &true; si el apuntador del fichero est&aacute; en EOF o si ocurre
     un error; en otro caso devuelve &false;.
    </para>
    <para>
     The file pointer must be valid, and must point to a file
     El apuntador al fichero debe ser v&aacute;lido, y debe apuntar a un
     fichero abierto con &eacute;xito por <function>fopen</function>,
     <function>popen</function>, o <function>fsockopen</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fgetc">
   <refnamediv>
    <refname>fgetc</refname>
    <refpurpose>Obtiene un caracter del fichero apuntado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>fgetc</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve una cadena (string) conteniendo un simple caracter
     leido del fichero apuntado por fp. Devuelve &false; para EOF 
     (como hace <function>feof</function>).</para>
    <para>
     El apuntador al fichero debe ser valido, y debe apuntar a un
     fichero abierto con &eacute;xito por <function>fopen</function>,
     <function>popen</function>, o <function>fsockopen</function>.
    </para>
    <para> 
     Ver tambi&eacute;n <function>fread</function>, <function>fopen</function>,
     <function>popen</function>, <function>fsockopen</function>, y
     <function>fgets</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fgetcsv">
   <refnamediv>
    <refname>fgetcsv</refname>
    <refpurpose>
     Obtiene una l&iacute;nea del fichero apuntado y extrae los campos CSV
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>array <function>fgetcsv</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
     <paramdef>int <parameter>length</parameter></paramdef>
     <paramdef>string 
      <parameter>
       <optional>delimiter</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <simpara>
     Parecida a fgets() excepto que fgetcsv() parsea la l&iacute;nea que lee
     buscando campos en formato CSV y devuelve un array conteniendo los
     campos leidos. El delimitador de campo es una coma, a menos que se
     especifique otro delimitador con el tercer par&aacute;metro opcional.
    </simpara>
    <simpara>
     fp debe ser un apuntador v&aacute;lido a un fichero abierto con &eacute;xito por
     <function>fopen</function>, <function>popen</function>, o
     <function>fsockopen</function>
    </simpara>
    <simpara>
     la longitud debe ser mayor que la l&iacute;nea m&aacute;s larga que pueda encontrarse
     en le fichero CSV (permitiendo arrastrar caracteres de fin de l&iacute;nea)
    </simpara>
    <simpara>
     fgetcsv() devuelve &false; en caso de error, incluyendo el fin de fichero.
    </simpara>
    <simpara>
     NOTA: Una l&iacute;nea en blanco en un fichero CSV se devuelve como un array
     que contiene un &uacute;nico campo nulo, y esto no ser&aacute; tratado como un error.
    </simpara>
    <example>
     <title>
      Ejemplo de <function>fgetcsv</function> - Leer e imprimir el contenido
      completo de un fichero CSV
     </title>
     <programlisting role="php">
$row = 1;
$fp = fopen ("test.csv","r");
while ($data = fgetcsv ($fp, 1000, ",")) {
    $num = count ($data);
    print "&lt;p> $num fields in line $row: &lt;br>";
    $row++;
    for ($c=0; $c<$num; $c++) {
        print $data[$c] . "&lt;br>";
    }
}
fclose ($fp);
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.fgets">
   <refnamediv>
    <refname>fgets</refname>
    <refpurpose>Obtiene una l&iacute;nea del fichero apuntado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>fgets</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
     <paramdef>int <parameter>length</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve una cadena de como mucho length - 1 bytes leidos del
     fichero apuntado por fp. La lectura acaba cuando son leidos
     length - 1 bytes, cuando se llega a una nueva l&iacute;nea (el caracter
     de nueva l&iacute;nea se incluye en el valor devuelto), o cuando se llega 
     a un EOF (lo que ocurra primero).
    </para>
    <para>
     Si ocurre un error, devuelve &false;.
    </para>
    <para>
     Fallos Comunes:
    </para>
    <simpara>
     Los que hayan usado la semantica de 'C' de la funci&oacute;n fgets deben darse cuenta
     de la diferencia que hay en como el EOF es devuelto por esta funci&oacute;n.
    </simpara>
    <simpara>
     El apuntador al fichero debe ser v&aacute;lido, y debe apuntar a un
     fichero abierto con &eacute;xito con <function>fopen</function>,
     <function>popen</function>, o
     <function>fsockopen</function>.
    </simpara>
    <para>
     A continuaci&oacute;n un ejemplo sencillo:
     <example> 
      <title>Leyendo un fichero l&iacute;nea por l&iacute;nea</title>
      <programlisting role="php">
$fd = fopen ("/tmp/inputfile.txt", "r");
while (!feof($fd)) {
    $buffer = fgets($fd, 4096);
    echo $buffer;
}
fclose ($fd);
      </programlisting>
     </example>
    </para>
    <para> 
     Ver tambi&eacute;n <function>fread</function>, <function>fopen</function>,
     <function>popen</function>, <function>fgetc</function>, y
     <function>fsockopen</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fgetss">
   <refnamediv>
    <refname>fgetss</refname>
    <refpurpose>
     Obtiene una l&iacute;nea del fichero apuntado y quita las etiquetas HTML
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>fgetss</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
     <paramdef>int <parameter>length</parameter></paramdef>
     <paramdef>string 
      <parameter>
       <optional>allowable_tags</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Id&eacute;ntica a <function>fgets</function>, excepto que fgetss
     trata de quitar cualquier etiqueta HTML y PHP del texto que
     lee.
    </para>
    <para>
     Se puede utilizar el tercer par&aacute;metro opcional para especificar
     etiquetas que no deben de quitarse.
     <note>
      <para>
       <parameter>allowable_tags</parameter> fue a&ntilde;adido en PHP 3.0.13,
       PHP4B3.
      </para> 
     </note>
    </para>
    <para>
     Ver tambi&eacute;n <function>fgets</function>, <function>fopen</function>,
     <function>fsockopen</function>, <function>popen</function>, y
     <function>strip_tags</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.file">
   <refnamediv>
    <refname>file</refname> 
    <refpurpose>lee un fichero completo hacia un array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>array <function>file</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>int 
      <parameter><optional>use_include_path</optional></parameter>
     </paramdef>
    </funcsynopsis>
    <para> 
     Id&eacute;ntica a <function>readfile</function>, excepto que
     <function>file</function> devuelve el fichero en un array. Cada
     elemento del array corresponde a una l&iacute;nea del fichero, con el
     caracter de nueva l&iacute;nea incluido.
    </para>
    <para>
     Se puede utilizar el segundo par&aacute;metro opcional y ponerle el valor
     "1", si tambi&eacute;n se quiere buscar el fichero en el <link
     linkend="ini.include-path">include_path</link>.
    </para>
    <para> 
     Ver tambi&eacute;n <function>readfile</function>,
     <function>fopen</function>, y <function>popen</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.file-exists">
   <refnamediv>
    <refname>file_exists</refname>
    <refpurpose>Verifica si un fichero existe</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>file_exists</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     Devuelve &true; si el fichero especificado por
     <parameter>filename</parameter> existe; y &false; en otro caso.
    </simpara>
    <para>
     El resultado de esta funci&oacute;n es cacheado. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fileatime">
   <refnamediv>
    <refname>fileatime</refname>
    <refpurpose>Obtiene la &uacute;ltima fecha de acceso a un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fileatime</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Devuelve la fecha a la que el fichero fue accedido por &uacute;ltima vez,
     o &false; en caso de error.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.filectime">
   <refnamediv>
    <refname>filectime</refname>
    <refpurpose>Obtiene la fecha de cambio del inode del fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>filectime</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve el momento en el que el fichero fue cambiado por &uacute;ltima
     vez, o &false; en caso de error.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.filegroup">
   <refnamediv>
    <refname>filegroup</refname>
    <refpurpose>Obtiene el grupo de un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>filegroup</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>    
     Devuelve el identificador (ID) de grupo del propietario del fichero,
     o &false; en caso de un error. El ID del grupo es devuelto en formato
     num&eacute;rico, usar <function>posix_getgrgid</function> para obtener el 
     nombre del grupo.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fileinode">
   <refnamediv>
    <refname>fileinode</refname>
    <refpurpose>Obtiene el inode del fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fileinode</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Devuelve el n&uacute;mero de inode del fichero, o &false; en caso de un
     error.</para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.filemtime">
   <refnamediv>
    <refname>filemtime</refname>
    <refpurpose>Obtiene la fecha de modificaci&oacute;n del fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>filemtime</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve el momento en el que el fichero fue modificado por
     &uacute;ltima vez, o &false; en caso de un error.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fileowner">
   <refnamediv>
    <refname>fileowner</refname>
    <refpurpose>Obtiene el propietario del fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fileowner</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>    
     Devuelve el identificador (ID) de usuario del propietario del
     fichero, o &false; en caso de error. El ID de usuario se devuelve
     en formato num&eacute;rico, usar <function>posix_getpwuid</function> para
     obtener el nombre del usuario.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fileperms">
   <refnamediv>
    <refname>fileperms</refname>
    <refpurpose>Obtiene los permisos del fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fileperms</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>    
     Devuelve los permisos del fichero, o &false; en caso de error.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.filesize">
   <refnamediv>
    <refname>filesize</refname>
    <refpurpose>Obtiene el tama&ntilde;o del fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>filesize</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Devuelve el tama&ntilde;o del fichero, o &false; en caso de error.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.filetype">
   <refnamediv>
    <refname>filetype</refname>
    <refpurpose>Obtiene el tipo de fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>filetype</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>    
     Devuelve el tipo de fichero. Valores posibles son fifo, char,
     dir, block, link, file, y unknown.</para> <para> Devuelve &false;
     si ocurre un error.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.flock">
   <refnamediv>
    <refname>flock</refname>
    <refpurpose>Bloqueo de ficheros portable y asesorado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>bool <function>flock</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
     <paramdef>int <parameter>operation</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     PHP soporta un m&eacute;todo portable de bloquear ficheros completos de
     manera asesorada (lo que significa que todos los programas que acceden
     tienen que usar el mismo modo de bloqueo o &eacute;ste no funcionar&aacute;).
    </simpara>
    <simpara>
     <function>flock</function> opera sobre <parameter>fp</parameter>
     el cual debe ser un apuntador a un fichero
     abierto. <parameter>operation</parameter> toma uno de los siguientes
     valores:
    </simpara>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        Para que adquiera un bloqueo compartido (lectura),
	fija <parameter>operation</parameter> a 1.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Para adquirir un bloqueo exclusivo (escritura),
	fija <parameter>operation</parameter> a 2.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Para liberar un bloqueo (compartido o exclusivo),
	fija <parameter>operation</parameter> a 3.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Si no quieres que <function>flock</function> bloquee mientras
	est&aacute; activado, suma 4 al valor de <parameter>operation</parameter>.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <simpara>
     <function>flock</function> permite establece un modelo simple
     de lectura/escritura el cual puede usarse en pr&aacute;cticamente
     cualquier plataforma (incluyendo la mayoria de sistemas Unix e
     incluso Windows).
    </simpara>
    <simpara>
     <function>flock</function> devuelve &true; en caso de &eacute;xito y &false;
     en caso de error (ej. cuando no se puede establecer un bloqueo).
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.fopen">
   <refnamediv>
    <refname>fopen</refname>
    <refpurpose>Abre un fichero o una URL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fopen</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>string <parameter>mode</parameter></paramdef>
     <paramdef>int 
      <parameter>
       <optional>use_include_path</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <simpara>
     Si <parameter>filename</parameter> comienza con "http://" (no es
     sensible a may&uacute;sculas), se abre una conexi&oacute;n HTTP 1.0 hacia el
     servidor especificado y se devuelve un apuntador de fichero al comienzo
     del texto de respuesta.
    </simpara>
    <simpara>
     No maneja redirecciones HTTP, por eso se debe incluir una barra
     final cuando se trata de directorios.
    </simpara>
    <simpara>
     Si <parameter>filename</parameter> comienza con "ftp://" (no es
     sensible a may&uacute;sculas), se abre una conexi&oacute;n ftp hacia el servidor
     especificado y se devuelve un apuntador al fichero requerido. Si el
     servidor no soporta ftp en modo pasivo, esto fallar&aacute;. Se pueden
     abrir fichero via ftp para leer o para escribir (pero no ambas
     cosas simult&aacute;neamente).
    </simpara>
    <simpara>
     Si <parameter>filename</parameter> no comienza con nada de lo anterior,
     el fichero se abre del sistema de ficheros, y se devuelve un apuntador 
     al fichero abierto.
    </simpara>
    <simpara>
     Si el abrir el fichero falla, la funci&oacute;n devuelve &false;.
    </simpara>
    <para>
     <parameter>mode</parameter> puede ser cualquiera de lo siguiente:
     <itemizedlist>
      <listitem>
       <simpara>
	'r' - Abre para s&oacute;lo lectura; sit&uacute;a el apuntador del fichero al
	comienzo del mismo.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	'r+' - Abre para lectura y escritura; situa el apuntador del fichero
	al comienzo del fichero.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	'w' - Abre para s&oacute;lo escritura; sit&uacute;a el apuntador del fichero al
	comienzo del fichero y trunca el fichero con longitud cero.
        Si el fichero no existe, trata de crearlo.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	'w+' - Abre el fichero para lectura y escritura; sit&uacute;a el apuntador
	del fichero al comienzo del fichero y trunca el fichero con longitud
	cero.  Si el fichero no existe, trata de crearlo.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	'a' - Abre s&oacute;lo para escribir (a&ntilde;adir); sit&uacute;a el apuntador del fichero al 
	final del mismo. Si el fichero no existe, trata de crearlo. 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	'a+' - Abre para lectura y escritura (a&ntilde;adiendo); sit&uacute;a el apuntador
        del fichero al final del mismo. Si el fichero no existe, trata de crearlo.
       </simpara>
      </listitem>
     </itemizedlist>
     Adem&aacute;s, <parameter>mode</parameter> puede contener la letra
     'b'. Esto es &uacute;til para sistemas que diferencian entre ficheros
     binarios y de texto (ej. es in&uacute;til en Unix). Si no se necesita,
     ser&aacute; ignorado.
    </para>
    <para>
     Puede usarse el tercer par&aacute;metro opcional y fijarlo a "1", si
     tambi&eacute;n se quiere buscar el fichero en el <link
     linkend="ini.include-path">include_path</link>.
    </para>
    <para>
     <example>
      <title>Ejemplo de <function>fopen()</function></title>
      <programlisting role="php">
$fp = fopen("/home/rasmus/file.txt", "r");
$fp = fopen("http://www.php.net/", "r");
$fp = fopen("ftp://user:password@example.com/", "w");
      </programlisting>
     </example>
    </para>
    <simpara>
     Si experimentas problemas a la hora de leer y escribir a
     ficheros y estas usando la version de PHP como m&oacute;dulo para el
     servidor, recuerda que debes asegurar que los ficheros y directorios
     que estas usando son accesibles al proceso servidor.
    </simpara>
    <para>
     En la plataforma Windows, ten cuidado de escribir correctamente
     las barras invertidas en el path del fichero (poni&eacute;ndolas dobles), 
     o usa barras directas.
     <informalexample>
      <programlisting role="php"> 
$fp = fopen("c:\\data\\info.txt", "r");
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     Ver tambi&eacute;n <function>fclose</function>,
     <function>fsockopen</function>, y <function>popen</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.fpassthru">
   <refnamediv>
    <refname>fpassthru</refname> 
    <refpurpose>
     Saca todos los datos restantes del fichero apuntado
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fpassthru</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     Lee hasta el EOF del fichero apuntado y escribe los resultados a
     la salida est&aacute;ndar (stdout).
    </simpara>
    <simpara>
     Si ocurre un error, <function>fpassthru</function> devuelve
     &false;.
    </simpara>
    <simpara>
     El apuntador al fichero debe ser v&aacute;lido, y debe apuntar a un
     fichero abierto con &eacute;xito por <function>fopen</function>,
     <function>popen</function>, o <function>fsockopen</function>.
     El fichero se cierra cuando <function>fpassthru</function> termina
     de leerlo (dejando <parameter>fp</parameter> sin ninguna utilidad).
    </simpara>
    <simpara>
     Si s&oacute;lo quieres volcar el contenido de un fichero a stdout puedes
     If you just want to dump the contents of a file to stdout you may
     usar la funci&oacute;n <function>readfile</function>, la cual te libra
     de la llamada a <function>fopen</function>.
    </simpara>
    <simpara>
     Ver tambi&eacute;n <function>readfile</function>,
     <function>fopen</function>, <function>popen</function>, y
     <function>fsockopen</function>
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.fputs">
   <refnamediv>
    <refname>fputs</refname>
    <refpurpose>Escribe en el fichero apuntado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fputs</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
     <paramdef>string <parameter>str</parameter></paramdef>
     <paramdef>int 
      <parameter>
       <optional>length</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     <function>fputs</function> es un alias de
     <function>fwrite</function>, y es id&eacute;ntico a &eacute;l en todo.  Notar
     que el par&aacute;metro <parameter>length</parameter> es opcional y si
     no se pone la cadena entera ser&aacute; escrita.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fread">
   <refnamediv>
    <refname>fread</refname>
    <refpurpose>Lee ficheros en plan binario</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>fread</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
     <paramdef>int <parameter>length</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     <function>fread</function> lee hasta
     <parameter>length</parameter> bytes del apuntador de fichero
     referenciado por <parameter>fp</parameter>. La lectura acaba 
     cuando <parameter>length</parameter> bytes se han leido o se alcanza
     EOF, lo que ocurra primero.
    </simpara> 
    <para>
     <informalexample>
      <programlisting role="php">
// Mete el contenido de un fichero en una cadena
$filename = "/usr/local/something.txt";
$fd = fopen ($filename, "r");
$contents = fread ($fd, filesize ($filename));
fclose ($fd);
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     Ver tambi&eacute;n <function>fwrite</function>, <function>fopen</function>,
     <function>fsockopen</function>, <function>popen</function>,
     <function>fgets</function>, <function>fgetss</function>,
     <function>file</function>, y <function>fpassthru</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.fseek">
   <refnamediv>
    <refname>fseek</refname>
    <refpurpose>Sit&uacute;a el apuntador a un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fseek</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
     <paramdef>int <parameter>offset</parameter></paramdef>
    </funcsynopsis>
    <para>
     Fija el indicador de posici&oacute;n del fichero referenciado por fp a
     tantos bytes como indica offset. Es equivalente a la llamada (en C)
     <literal>fseek(fp, offset, SEEK_SET)</literal>.
    </para>
    <para>
     Si va bien, devuelve 0; en otro caso, devuelve -1. Tener en cuenta que
     situarse m&aacute;s alla de EOF no se considera un error.
    </para>
    <para>
     No puede usarse sobre apuntadores de ficheros devueltos por
     <function>fopen</function> si usan los formatos "http://" or "ftp://".
    </para>
    <para>
     Ver tambi&eacute;n <function>ftell</function> y
     <function>rewind</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ftell">
   <refnamediv>
    <refname>ftell</refname>
    <refpurpose>Pregunta por la posici&oacute;n del apuntador de lectura/escritura de un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>ftell</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve la posici&oacute;n del apuntador de fichero referenciado por fp;
     es decir, la distancia en la secuencia del fichero.
    </para>
    <para>
     Si ocurre un error, devuelve &false;.
    </para>
    <para>
     El apuntador al fichero debe ser v&aacute;lido, y debe referirse a
     The file pointer must be valid, and must point to a file
     un fichero abierto con &eacute;xito por <function>fopen</function> o
     <function>popen</function>.
    </para>
    <para> 
     Ver tambi&eacute;n <function>fopen</function>, <function>popen</function>,
     <function>fseek</function> y <function>rewind</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fwrite">
   <refnamediv>
    <refname>fwrite</refname>
    <refpurpose>Escribe ficheros en plan binario</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>fwrite</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
     <paramdef>string <parameter>string</parameter></paramdef>
     <paramdef>int 
      <parameter>
       <optional>length</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <simpara>
     <function>fwrite</function> escribe el contenido de
     <parameter>string</parameter> al fichero apuntado por
     <parameter>fp</parameter>. Si se da el argumento 
     <parameter>length</parameter>, la escritura acaba antes de
     que <parameter>length</parameter> bytes sean escritos o se
     alcance el final de <parameter>string</parameter>, lo que
     ocurra primero.
    </simpara>
    <simpara>
     Tener en cuenta que si se da el argumento <parameter>length</parameter>,
     entonces la opci&oacute;n de configuraci&oacute;n <link
     linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link>
     ser&aacute; ignorada y los caracteres de barra no se quitar&aacute;n de la
     cadena <parameter>string</parameter>.
    </simpara>
    <simpara>
     Ver tambi&eacute;n <function>fread</function>, <function>fopen</function>,
     <function>fsockopen</function>, <function>popen</function>, y
     <function>fputs</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.set-file-buffer">
   <refnamediv>
    <refname>set_file_buffer</refname>
    <refpurpose>
     Fija el buffer de fichero del fichero apuntado
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcdef>int <function>fwrite</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
     <paramdef>int <parameter>buffer</parameter></paramdef>
    </funcsynopsis>
    <simpara>
     <function>set_file_buffer</function> fija el buffer para operaciones
     de escritura en el apuntador de fichero <parameter>fp</parameter> con
     <parameter>buffer</parameter> bytes.  Si
     <parameter>buffer</parameter> es 0 entonces las operaciones de escritura
     no usan un buffer intermedio.
    </simpara>
    <simpara>
     La funci&oacute;n devuelve 0 en caso de &eacute;xito, o EOF si la petici&oacute;n no se puede
     realizar.
    </simpara>
    <simpara>
     Tener en cuenta que por defecto cualquier fopen hace una llamada a set_file_buffer
     de 8K.
    </simpara>
    <simpara>
     Ver tambi&eacute;n <function>fopen</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.is-dir">
   <refnamediv>
    <refname>is_dir</refname>
    <refpurpose>Dice si el fichero nombrado es un directorio</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>bool <function>is_dir</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve &true; si el nombre del fichero existe y es un directorio.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
    <para>
     Ver tambi&eacute;n <function>is_file</function> y
     <function>is_link</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.is-executable">
   <refnamediv>
    <refname>is_executable</refname>
    <refpurpose>Dice si el fichero nombrado es ejecutable</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>bool <function>is_executable</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve &true; si el fichero indicado existe y es ejecutable.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
    <para>
     Ver tambi&eacute;n <function>is_file</function> y
     <function>is_link</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.is-file">
   <refnamediv>
    <refname>is_file</refname>
    <refpurpose>
     Dice si el fichero nombrado es un fichero regular
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>bool <function>is_file</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve &true; si el fichero nombrado existe y es un fichero regular.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
    <para>
     Ver tambi&eacute;n <function>is_dir</function> y
     <function>is_link</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.is-link">
   <refnamediv>
    <refname>is_link</refname>
    <refpurpose>
     Dice si el fichero indicado es un enlace simb&oacute;lico
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>bool <function>is_link</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve &true; si el fichero indicado existe y es un enlace simb&oacute;lico.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
    <para>
     Ver tambi&eacute;n <function>is_dir</function> y
     <function>is_file</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.is-readable">
   <refnamediv>
    <refname>is_readable</refname>
    <refpurpose>
     Dice si el fichero indicado se puede leer
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>bool <function>is_readable</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve &true; si el fichero indicado existe y se puede leer.
    </para>
    <para>
     Recuerda que PHP puede acceder al fichero con el identificador
     de usuario con el que el servidor web se ejecuta (a menudo 'nobody').
     No se tienen en cuenta las limitaciones de modos seguros.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
    <para>
     Ver tambi&eacute;n <function>is_writeable</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.is-writeable">
   <refnamediv>
    <refname>is_writeable</refname>
    <refpurpose>Dice si se puede escribir en el fichero indicado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>bool <function>is_writeable</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Devuelve &true; si el fichero indicado existe y se puede escribir
     en &eacute;l. El argumento filename puede ser el nombre de un directorio,
     lo que permite verificar si un directorio tiene permiso de escritura.
    </para>
    <para>
     Recuerda que PHP puede acceder al fichero con el identificador
     de usuario con el que el servidor web se ejecuta (a menudo 'nobody').
     No se tienen en cuenta las limitaciones de modos seguros.
    </para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
    <para>
     Ver tambi&eacute;n <function>is_readable</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.link">
   <refnamediv>
    <refname>link</refname>
    <refpurpose>Crea un enlace fuerte</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>link</function></funcdef>
     <paramdef>string <parameter>target</parameter></paramdef>
     <paramdef>string <parameter>link</parameter></paramdef>
    </funcsynopsis>
    <para>
    <function>link</function> crea un enlace fuerte.</para>
    <para>
     Ver tambi&eacute;n <function>symlink</function> para crear enlaces d&eacute;biles,
     y <function>readlink</function> junto con
     <function>linkinfo</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.linkinfo">
   <refnamediv>
    <refname>linkinfo</refname>
    <refpurpose>Consigue informaci&oacute;n sobre un enlace</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>linkinfo</function></funcdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>linkinfo</function> da el campo st_dev de la
     extructura stat de UNIX C devuelto por la llamada al sistema lstat.
     Esta funci&oacute;n se usa para verificar si un enlace (apuntado por
     <parameter>path</parameter>) existe realmente (usando el mismo m&eacute;todo
     que la macro S_ISLNK definida en stat.h).  Devuelve 0 o &false; en
     caso de error.
    </para>
    <para>
     Ver tambi&eacute;n <function>symlink</function>, <function>link</function>,
     y <function>readlink</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mkdir">
   <refnamediv>
    <refname>mkdir</refname>
    <refpurpose>Crea un directorio</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>mkdir</function></funcdef>
     <paramdef>string <parameter>pathname</parameter></paramdef>
     <paramdef>int <parameter>mode</parameter></paramdef>
    </funcsynopsis>
    <para>
     Trata de crear el directorio especificado por pathname.
    </para>
    <para>
     Ten en cuenta que debes especifiar el modo como un n&uacute;mero octal,
     lo que significa que debes anteponerle un 0 al n&uacute;mero.
     <informalexample>
      <programlisting role="php">
mkdir ("/path/to/my/dir", 0700);
      </programlisting>
     </informalexample>
    </para>
    <para>
     Devuelve &true; en caso de &eacute;xito y &false; en caso de fallo.
    </para>
    <para>
     Ver tambi&eacute;n <function>rmdir</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pclose">
   <refnamediv>
    <refname>pclose</refname>
    <refpurpose>Cierra el fichero de proceso apuntado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>pclose</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Cierra un fichero que representa un tuberia (pipe)
     abierta con <function>popen</function>.
    </para> 
    <para> 
     El apuntador al fichero debe ser v&aacute;lido, y debe haber sido devuelto
     por una llamada con &eacute;xito a <function>popen</function>.
    </para> 
    <para>
     Devuelve el estado de terminaci&oacute;n del proceso que estaba
     ejecut&aacute;ndose.
    </para>
    <para>
     Ver tambi&eacute;n <function>popen</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.popen">
   <refnamediv>
    <refname>popen</refname>
    <refpurpose>Abre el fichero de proceso apuntado</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>popen</function></funcdef>
     <paramdef>string <parameter>command</parameter></paramdef>
     <paramdef>string <parameter>mode</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Abre una tuber&iacute;a (pipe) a un proceso ejecutado haciendo fork al
     comando dado por command
    </para>
    <para> 
     Devuelve un apuntador de fichero id&eacute;ntico al devuelto por
     <function>fopen</function>, excepto que este es unidireccional (s&oacute;lo
     puede usarse o para leer o para escribir) y debe cerrarse con
     <function>pclose</function>. Este apuntador puede usarse con
     <function>fgets</function>, <function>fgetss</function>, y
     <function>fputs</function>.
    </para>
    <para>
     Si ocurre un error, devuelve &false;.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
$fp = popen ("/bin/ls", "r");
      </programlisting>
     </informalexample>
    </para>
    <para>
     Ver tambi&eacute;n <function>pclose</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readfile">
   <refnamediv>
    <refname>readfile</refname>
    <refpurpose>Muestra el contenido de un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>readfile</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>int 
      <parameter>
       <optional>use_include_path</optional>
      </parameter>
     </paramdef>
    </funcsynopsis>
    <para>
     Lee un fichero y lo escribe a la salida est&aacute;ndar.
    </para>
    <para>
     Devuelve el n&uacute;mero de bytes leidos del fichero. Si ocurre un 
     error, se devuelve &false; y a menos que la funci&oacute;n fuera llamada
     como @readfile, se imprime un mensaje de error
    </para>
    <para>
     Si <parameter>filename</parameter> comienzo por "http://"
     (no es sensible a may&uacute;sculas), se abre una conexi&oacute;n HTTP 1.0 al
     servidor especificado y el texto de la respuesta se escribe
     a la salida est&aacute;ndar.
    </para>
    <para>
     No maneja redirecciones HTTP, por eso se debe incluir una barra
     final cuando se trata de directorios.
    </para>
    <para>
     Si <parameter>filename</parameter> comienza con "ftp://"
     (no es sensible a may&uacute;sculas), se abre una conexi&oacute;n ftp al servidor
     especificado y el fichero que se pide se escribe en la salida est&aacute;ndar.
     Si el servidor no soporta ftp en modo pasivo, la funci&oacute;n fallar&aacute;.
    </para>
    <para>
     Si <parameter>filename</parameter> no comienza con ninguna de las 
     cadenas anteriores, el fichero ser&aacute; abierto del sistema de ficheros
     y su contenido escrito en la salida est&aacute;ndar.
    </para>
    <para>
     Se puede usar el segundo par&aacute;metro opcional y fijarlo a "1", si
     si quieres que tambi&eacute;n se busque el fichero en el <link
     linkend="ini.include-path">include_path</link>.
    </para>
    <para>
     Ver tambi&eacute;n <function>fpassthru</function>,
     <function>file</function>, <function>fopen</function>,
     <function>include</function>, <function>require</function>, y
     <function>virtual</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readlink">
   <refnamediv>
    <refname>readlink</refname>
    <refpurpose>Devuelve el objetivo de un enlace simb&oacute;lico</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>readlink</function></funcdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcsynopsis>
    <para>
    <function>readlink</function> hace lo mismo que la funci&oacute;n C
    readlink C y devuelve el contenido del path del enlace simb&oacute;lico
    o 0 en caso de error.
    </para>
    <para>
     Ver tambi&eacute;n <function>symlink</function>,
     <function>readlink</function> y
     <function>linkinfo</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.rename">
   <refnamediv>
    <refname>rename</refname>
    <refpurpose>Renombra un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>rename</function></funcdef>
     <paramdef>string <parameter>oldname</parameter></paramdef>
     <paramdef>string <parameter>newname</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Trata de renombrar <parameter>oldname</parameter> como
     <parameter>newname</parameter>.
    </para> 
    <para> 
     Devuelve &true; en caso de &eacute;xito y &false; en caso de fallo.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.rewind">
   <refnamediv>
    <refname>rewind</refname>
    <refpurpose>Rebobina la posici&oacute;n del apuntador al fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>rewind</function></funcdef>
     <paramdef>int <parameter>fp</parameter></paramdef>
    </funcsynopsis>
    <para>    
     Fija el indicador de posici&oacute;n del fichero dado por fp al comienzo de
     del fichero.</para> <para> Si ocurre un error, devuelve 0.</para>
     <para> El apuntador al fichero debe ser v&aacute;lido, y debe apuntar a un fichero
     abierto con &eacute;xito por <function>fopen</function>.
    </para>
    <para>
     Ver tambi&eacute;n <function>fseek</function> y
     <function>ftell</function>.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.rmdir">
   <refnamediv>
    <refname>rmdir</refname>
    <refpurpose>Elimina un directorio</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>rmdir</function></funcdef>
     <paramdef>string <parameter>dirname</parameter></paramdef>
    </funcsynopsis>
    <para> 
     Trata de eliminar el directorio indicado por pathname. El directorio
     debe estar vacio, y los permisos relevantes deben permitir esto.
    </para> 
    <para> 
     Si ocurre un error, devuelve 0.
    </para>
    <para>
     Ver tambi&eacute;n <function>mkdir</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.stat">
   <refnamediv>
    <refname>stat</refname>
    <refpurpose>Da informaci&oacute;n sobre un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>array <function>stat</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Recoje los datos sobre el fichero indicado por filename.</para> 
    <para>
     Devuelve un array conteniendo los datos del fichero con los
     siguientes elementos:
     <orderedlist>
      <listitem><simpara>dispositivo (device)</simpara></listitem>
      <listitem><simpara>inode</simpara></listitem>
      <listitem><simpara>modo de protecci&oacute;n del inode</simpara></listitem>
      <listitem><simpara>n&uacute;mero de enlaces</simpara></listitem>
      <listitem><simpara>id de usuario del propietario</simpara></listitem>
      <listitem><simpara>id de grupo del propietario</simpara></listitem>
      <listitem><simpara>tipo de dispositivo si es un inode device *</simpara></listitem>
      <listitem><simpara>tama&ntilde;o en bytes</simpara></listitem>
      <listitem><simpara>fecha del &uacute;ltimo acceso access</simpara></listitem>
      <listitem><simpara>fecha de la &uacute;ltima modificaci&oacute;n</simpara></listitem>
      <listitem><simpara>fecha del &uacute;ltimo cambio</simpara></listitem>
      <listitem><simpara>tama&ntilde;o del bloque para el sistema I/O *</simpara></listitem>
      <listitem><simpara>n&uacute;mero de bloques ocupados</simpara></listitem>
     </orderedlist>
     * - s&oacute;lo v&aacute;lido en sistemas que soportan el tipo st_blksize --otros
     sistemas (como Windows) devuelven -1</para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.lstat">
   <refnamediv>
    <refname>lstat</refname>
    <refpurpose>
     Da informaci&oacute;n sobre un fichero o enlace simb&oacute;lico
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>array <function>lstat</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Re&uacute;ne los datos del fichero o enlace simb&oacute;lico indicado por
     filename.  Esta funci&oacute;n es id&eacute;ntica a la funci&oacute;n
     <function>stat</function> excepto que si el nombre en el par&aacute;metro
     <parameter>filename</parameter> es un enlace simb&oacute;lico, son devueltos
     los datos (status) del enlace simb&oacute;lico, y no los del fichero al que
     apunta el enlace simb&oacute;lico.
    </para>
    <para>
     Devuelve un array conteniendo los datos del fichero con los
     siguientes elementos:
     <orderedlist>
      <listitem><simpara>dispositivo (device)</simpara></listitem>
      <listitem><simpara>inode</simpara></listitem>
      <listitem><simpara>n&uacute;mero de enlaces</simpara></listitem>
      <listitem><simpara>id de usuario del propietario</simpara></listitem>
      <listitem><simpara>id de grupo del propietario</simpara></listitem>
      <listitem><simpara>tipo de disposivo si es un inode device *</simpara></listitem>
      <listitem><simpara>tama&ntilde;o en bytes</simpara></listitem>
      <listitem><simpara>fecha del &uacute;ltimo acceso</simpara></listitem>
      <listitem><simpara>fecha de la &uacute;ltima modificaci&oacute;n</simpara></listitem>
      <listitem><simpara>fecha del &uacute;ltimo cambio</simpara></listitem>
      <listitem><simpara>tama&ntilde;o de bloque para el sistema I/O *</simpara></listitem>
      <listitem><simpara>n&uacute;mero de bloques ocupados</simpara></listitem>
     </orderedlist>
     * - s&oacute;lo v&aacute;lido en sistemas que soportan el tipo st_blksize --otros
     sistemas (como Windows) devuelven -1</para>
    <para>
     Los resultados de esta funci&oacute;n son cacheados. Ver
     <function>clearstatcache</function> para m&aacute;s detalles.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.symlink">
   <refnamediv>
    <refname>symlink</refname>
    <refpurpose>Crea un enlace simb&oacute;lico</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>symlink</function></funcdef>
     <paramdef>string <parameter>target</parameter></paramdef>
     <paramdef>string <parameter>link</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>symlink</function> crea un enlace simb&oacute;lico
     del objetivo <parameter>target</parameter> con el
     nombre especificado por <parameter>link</parameter>.
    </para>
    <para>
     Ver tambi&eacute;n <function>link</function> para crear enlaces fuertes,
     y <function>readlink</function> junto con
     <function>linkinfo</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.tempnam">
   <refnamediv>
    <refname>tempnam</refname>
    <refpurpose>Crea un fichero de nombre &uacute;nico</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>string <function>tempnam</function></funcdef>
     <paramdef>string <parameter>dir</parameter></paramdef>
     <paramdef>string <parameter>prefix</parameter></paramdef>
    </funcsynopsis>
    <para>
     Crea un fichero temporal de nombre &uacute;nico en el directorio especificado.
     Si el directorio no existe <function>tempnam</function> puede generar
     un fichero en el directorio temporal del sistema.
    </para>
    <para>
     El comportamiento de la funci&oacute;n <function>tempnam</function>
     depende del sistema. En Windows la variable de entorno TMP
     se impone sobre el par&aacute;metro <parameter>dir</parameter>, en Linux
     la variable de entorno TMPDIR tiene preferencia, mientras que en
     SVR4 siempre se usar&aacute; el par&aacute;metro <parameter>dir</parameter> si
     si el directorio al que apunta existe. Consulta la documentaci&oacute;n del
     sistema sobre la funci&oacute;n tempnam(3) en caso de duda.
    </para>
    <para>
     Devuelve el nombre del nuevo fichero temporal, o una cadena nula en
     caso de fallo.
     <example>
      <title>Ejemplo de <function>tempnam</function></title>
      <programlisting role="php">
$tmpfname = tempnam ("/tmp", "FOO");
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.touch">
   <refnamediv>
    <refname>touch</refname>
    <refpurpose>Fija la fecha de modificaci&oacute;n de un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>touch</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>int <parameter>time</parameter></paramdef>
    </funcsynopsis>
    <para>
     Trata de fijar la fecha de modificaci&oacute;n del fichero indicado por
     filename al valor dado por time. Si no se pone la opci&oacute;n time, se
     utiliza la fecha actual.
    </para>
    <para>
     Si el fichero no existe, ser&aacute; creado.
    </para>
    <para>
     Devuelve &true; en caso de &eacute;xito y &false; en otro caso.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.umask">
   <refnamediv>
    <refname>umask</refname>
    <refpurpose>Cambia la umask actual</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>umask</function></funcdef>
     <paramdef>int <parameter>mask</parameter></paramdef>
    </funcsynopsis>
    <para>
     <function>umask</function> fija las umask PHP con la mascara & 0777 y
     y devuelve la antigua umask. Cuando PHP se est&aacute; usando como un m&oacute;dulo
     del servidor, la umask se restaura cuando cada petici&oacute;n es finalizada.
    </para>
    <para>
     <function>umask</function> sin argumentos s&oacute;lamente devuelve la
     umask actual.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.unlink">
   <refnamediv>
    <refname>unlink</refname>
    <refpurpose>Borra un fichero</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descripci&oacute;n</title>
    <funcsynopsis>
     <funcdef>int <function>unlink</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
    </funcsynopsis>
    <para>
     Borra el fichero <parameter>filename</parameter>.  Es similar a la funci&oacute;n
     unlink() del Unix C.
    </para>
    <para>
     Devuelve 0 o &false; en caso de error.
    </para>
    <para>
     Ver tambi&eacute;n <function>rmdir</function> para borrar directorios.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
