<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 324522 Maintainer: andresdzphp Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

 <appendix xml:id="reserved" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Lista de Palabras Reservadas</title> 
  <para>
   A continuación se muestra un listado de los identificadores predefinidos en PHP. Ninguno
   de estos identificadores puede usarse como identificador en
   sus scripts. Estas listas incluyen tanto palabras clave como variables predefinidas,
   constantes, y nombres de clases. Estas listas no sin ni exhaustivas ni
   completas.
  </para>

  <sect1 xml:id="reserved.keywords">
  <title>Lista de Palabras Clave</title>
   <simpara>
    Estas palabras tienen un significado especial en PHP. Algunas representan
    cosas que parecen funciones, otras parecen a constantes, etc --pero
    no lo son, en realidad: son constructores del lenguaje. No se puede usar ninguna
    de las siguientes palabras en constantes, nombres de clases, nombres de funciones o métodos.
    Se pueden usar como nombres de variables, pero puede dar lugar a confusiones.
   </simpara>

   <table>
    <title>Palabras clave de PHP</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <link linkend="language.oop5.abstract">abstract</link> (disponible desde PHP 5)
       </entry>
       <entry>
        <link linkend="language.operators.logical">and</link>
       </entry>
       <entry>
        <function>array</function>
       </entry>
       <entry>
        <link linkend="control-structures.foreach">as</link>
       </entry>
       <entry>
        <link linkend="control-structures.break">break</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.switch">case</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">catch</link> (disponible desde PHP 5)
       </entry>
       <entry>
        cfunction (sólo en PHP 4)
       </entry>
       <entry>
        <link linkend="keyword.class">class</link>
       </entry>
       <entry>
        <link linkend="language.oop5.cloning">clone</link> (disponible desde PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.constants">const</link>
       </entry>
       <entry>
        <link linkend="control-structures.continue">continue</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">declare</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">default</link>
       </entry>
       <entry>
        <link linkend="control-structures.do.while">do</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.else">else</link>
       </entry>
       <entry>
        <link linkend="control-structures.elseif">elseif</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">enddeclare</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endfor</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endforeach</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.alternative-syntax">endif</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endswitch</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endwhile</link>
       </entry>
       <entry>
        <link linkend="keyword.class">extends</link>
       </entry>
       <entry>
        <link linkend="language.oop5.final">final</link> (disponible desde PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.for">for</link>
       </entry>
       <entry>
        &foreach;
       </entry>
       <entry>
        <link linkend="functions.user-defined">function</link>
       </entry>
       <entry>
        <link linkend="language.variables.scope">global</link>
       </entry>
       <entry>
        <link linkend="control-structures.goto">goto</link> (disponible desde PHP 5.3)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.if">if</link>
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">implements</link> (disponible desde PHP 5)
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">interface</link> (disponible desde PHP 5)
       </entry>
       <entry>
        <link linkend="language.operators.type">instanceof</link> (disponible desde PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces">namespace</link> (disponible desde PHP 5.3)
       </entry>
       <entry>
        <link linkend="keyword.class">new</link>
       </entry>
       <entry>
        old_function (sólo en PHP 4)
       </entry>
       <entry>
        <link linkend="language.operators.logical">or</link>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">private</link> (disponible desde PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.visibility">protected</link> (disponible desde PHP 5)
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">public</link> (disponible desde PHP 5)
       </entry>
       <entry>
        <link linkend="language.variables.scope">static</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">switch</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">throw</link> (disponible desde PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.exceptions">try</link> (disponible desde PHP 5)
       </entry>
       <entry>
        <link linkend="language.namespaces">use</link>
       </entry>
       <entry>
        <link linkend="keyword.class">var</link>
       </entry>
       <entry>
        <link linkend="control-structures.while">while</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">xor</link>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <table>
    <title>Constantes en tiempo de compilación</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <link linkend="language.constants.predefined">__CLASS__</link>
       </entry>
       <entry> 
        <link linkend="language.constants.predefined">__DIR__</link> (disponible desde PHP 5.3)
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FILE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__LINE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FUNCTION__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__METHOD__</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces">__NAMESPACE__</link> (disponible desde PHP 5.3)
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <table>
    <title>Constructores del lenguaje</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <function>die</function>
       </entry>
       <entry>
        <function>echo</function>
       </entry>
       <entry>
        <function>empty</function>
       </entry>
       <entry>
        <function>exit</function>
       </entry>
       <entry>
        <function>eval</function>
       </entry>
      </row>
      <row>
       <entry>
        <function>include</function>
       </entry>
       <entry>
        <function>include_once</function>
       </entry>
       <entry>
        <function>isset</function>
       </entry>
       <entry>
        <function>list</function>
       </entry>
       <entry>
        <function>require</function>
       </entry>
      </row>
      <row>
       <entry>
        <function>require_once</function>
       </entry>
       <entry>
        <function>return</function>
       </entry>
       <entry>
        <function>print</function>
       </entry>
       <entry>
        <function>unset</function>
       </entry>
       <entry>
        <function>__halt_compiler</function>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect1>

  <sect1 xml:id="reserved.classes">
   <title>Clases Predefinidas</title>
   <para>
    Esta sección enumera las clases predefinidas estándar. Existen más clases
    que se describen en sus respectivas secciones que son definidas por otras extensiones.
   </para>

   <sect2 xml:id="reserved.classes.standard">
    <title>Clases Definidas Estándar</title>

    <simpara>
     Estas clases están definidas en el conjunto estándar de funciones que se incluyen
     en las distribuciones de PHP.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>Directory</classname></term>
      <listitem>
       <simpara>
        Creado por <function>dir</function>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>stdClass</classname></term>
      <listitem>
       <simpara>
        Creada al <link linkend="language.types.object.casting">inicializar
        objetos</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>__PHP_Incomplete_Class</classname></term>
      <listitem>
       <simpara>
        Posiblemente creada por <function>unserialize</function>.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>
   
   <sect2 xml:id="reserved.classes.php5">
    <title>Clases predefinidas desde PHP 5</title>
    
    <simpara>
     Estas clases predefinidas están presentes desde
     PHP 5.0.0.
    </simpara>
    
    <variablelist>
     <varlistentry>
      <term><classname>Exception</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>php_user_filter</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 xml:id="reserved.classes.closure">
    <title>Funciones Anónimas</title>
    
    <simpara>
     La clase final ya predefinida <classname>Closure</classname> está presente desde
     PHP 5.3.0. Se utiliza para representar las <link
     linkend="functions.anonymous">funciones anónimas</link>.
    </simpara>
    <simpara>
     Para más información, visite <link linkend="class.closure">Clase closure</link>.
    </simpara>
   </sect2>

   <sect2 xml:id="reserved.classes.special">
    <title>Clases especiales</title>
    
    <simpara>
     Los siguientes identificadores no pueden usarse como nombres de clase, dado que tienen
     un propósito especial.
    </simpara>
    
    <variablelist>
     <varlistentry>
      <term><classname>self</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">Clase
         actual</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>static</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.late-static-bindings">Clase actual en
        tiempo de ejecución</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>parent</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">Clase
        padre</link>.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>

  &appendices.reserved.constants;

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
