<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330656 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<!-- Based on UPGRADING version 322438. Work in progess !-->

<appendix xml:id="migration55" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Migrar de PHP 5.4.x a PHP 5.5.x</title>
 <simpara>
  &manual.migration.seealso;
  <link linkend="migration5">5.0.x</link>,
  <link linkend="migration51">5.1.x</link>,
  <link linkend="migration52">5.2.x</link>,
  <link linkend="migration53">5.3.x</link> y
  <link linkend="migration53">5.4.x</link>.
 </simpara>
 
 <sect1 xml:id="migration55.changes">
  <title>Lo que ha cambiado en PHP 5.5.x</title>
  <simpara>
   La mayoria de las mejoras de PHP 5.5.x no tienen impacto en el código existente. Existen
   <link linkend="migration55.incompatible">varias incompatibilidades</link>
   y <link linkend="migration55.new-features">nuevas características</link> que deberían
   ser consideradas, ya que el código debería probarse antes de cambiar de versión
   de PHP en ambientes de producción.   
  </simpara>
  <simpara>
   Para sistemas que se actualicen desde una versión anterior de PHP, la documentación
   correspondiente está disponible en:   
  </simpara>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="migration54">Notas de actualización para PHP 5.4.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration53">Notas de actualización para PHP 5.3.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration52">Notas de actualización para PHP 5.2.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration51">Notas de actualización para PHP 5.1.x</link>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="migration5">Migrar de PHP 4 a PHP 5</link>.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>
 
 <sect1 xml:id="migration55.incompatible">
  <title>Cambios incompatibles con versiones anteriores</title>
  <simpara>
   Aunque la mayoría del código de PHP 5 existente debería funtionar sin cambios, se ha
   de tomar nota de algunos cambios incompatibles con versiones anteriores:   
  </simpara>
  
  <sect2 xml:id="migration55.incompatible.windows">
   <title>Eliminado el soporte para Windows XP y 2003</title>
   
   <para>
    El soporte para Windows XP y 2003 ha sido eliminado. Las construcciones de PHP para
    Windows ahora requieren Windows Vista o superior.    
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.incompatible.case">
   <title>La no consideración de mayúsculas/minúsculas ya no es específica de la configuración regional</title>
   
   <para>
    Todas las comparaciones que no estiman las mayúsculas/minúsculas de funciones, clases y nombres de constantes,
    ahora se realizar de una manera independiente de la configuración regional según las reglas de ASCII.
    Esto mejora el soporte para idiomas que usan el alfabeto latino con reglas de cotejamiento
    no usuales, tales como el turco o el azerí.
   </para>
   <para>
    Esto podría causar problemas para el código que usa comparaciones que no consideran las mayúsculas/minúsculas para
    caracteres distintos a los de ASCII en conjuntos de caracteres multibyte (incluyendo UTF-8), como
    carecteres acentuados en muchos idiomas europeos. Si se tiene un código base distinto
    del inglés y que no sea ASCII, se necesitará probar que no se está confiando
    inadvertidamente en este comportamiento antes de utilizar PHP 5.5 para
    sistemas de producción.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.incompatible.pack">
   <title>Cambios de <function>pack</function> y <function>unpack</function></title>
   
   <para>
    Se introdujeron cambios en <function>pack</function> y
    <function>unpack</function> para hacerlos mas compatibles con Perl:
   </para>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>pack</function> ahora admite el código de formato "Z", el cual
      tiene un comportamiento idéntico al de "a".
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>unpack</function> ahora admite el códio de formato "Z" para cadenas con
      relleno NULL, y se comporta como lo hacía "a" en versiones anteriores: eliminará
      los bytes NULL sobrantes.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>unpack</function> ahora mantiene los bytes NULL sobrantes cuando se usa
      el código de formato "a".      
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>unpack</function> ahora elimina los espacios en blanco ASCII sobrantes
      cuando se usa el código de formato "A".
     </simpara>
    </listitem>
   </itemizedlist>
   
   <para>
    Escribir código retrocompatible que use el código de formato "a" con
    <function>unpack</function> requiere el uso de
    <function>version_compare</function>, debido a la rotura de
    retrocompatibilidad.
   </para>
   <para>
    Por ejemplo:
   </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
// Código anterior:
$data = unpack('a5', $packed);

// Código nuevo:
if (version_compare(PHP_VERSION, '5.5.0-dev', '>=')) {
  $data = unpack('Z5', $packed);
} else {
  $data = unpack('a5', $packed);
}
?>
]]>
    </programlisting>
   </informalexample>
  </sect2>
  
  <sect2 xml:id="migration55.incompatible.self-parent-static">
   <title><literal>self</literal>, <literal>parent</literal> y <literal>static</literal> ahora nunca consideran las mayúsculas/minúsculas</title>
   
   <para>
    Antes de PHP 5.5, existían casos donde las palabras clave
    <link linkend="language.oop5.paamayim-nekudotayim">self</link>,
    <link linkend="language.oop5.paamayim-nekudotayim">parent</link>, y
    <link linkend="language.oop5.late-static-bindings">static</link>
    eran tratadas de forma que consideraban las mayúsculas/minúsculas. Ahora se ha
    solucionado, y esta palabras clave siempre son manejadas para no considerarlas:
    <literal>SELF::CONSTANT</literal> ahora es tratada de forma idéntica a
    <literal>self::CONSTANT</literal>.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.incompatible.guid">
   <title>Eliminados los GUIDs de logos de PHP</title>
   
   <para>
    Los GUIDs que anteriormente resultaban en la generación de PHP de varios logos han
    sido eliminados. Esto incluye la eliminación de las funciones que devuelven esots
    GUIDs. Las funciones eliminadas son:
   </para>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>php_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>php_egg_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>php_real_logo_guid</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>zend_logo_guid</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.incompatible.execution">
   <title>Cambios en la ejecución interna</title>
   
   <para>
    Los autores de extensiones debería observar que la función <command>zend_execute()</command>
    ya no puede ser sobrescrita, y que se han hecho numerosos cambios
    a la estructura <literal>execute_data</literal> y funciones y métodos
    relacionados que manejan códigos de operaciones.
   </para>
   
   <para>
    A la mayoría de los autores de extensiones esto no les afecta, pero aquellos que escriban
    extensiones que dependan fuertemente del Motor Zend deberían leer
    <link linkend="migration55.internals">las notas sobre estos cambios</link>.
   </para>
  </sect2>
 </sect1>
 
 <sect1 xml:id="migration55.new-features">
  <title>Nuevas caracteristicas</title>
  
  <sect2 xml:id="migration55.new-features.generators">
   <title>Se han añadido los <link linkend="language.generators">Generadores</link></title>
   
   <para>
    El soporte para <link linkend="language.generators">generadores</link> ha sido
    añadido mediante la palabra clave <command>yield</command>. Los generadores proporcionan una
    manera sencilla de implementar iteradores simples sin la carga adicional o la complejidad
    de implementar una clase que implemente la interfaz
    <classname>Iterator</classname>.
   </para>
   
   <para>
    Un ejemplo sencillo que reimplementa la función <function>range</function>
    como un generador (al menos para valores positivos de
    <literal>step</literal>):
   </para>
   
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function xrange($start, $limit, $step = 1) {
    for ($i = $start; $i <= $limit; $i += $step) {
        yield $i;
    }
}

echo 'Single digit odd numbers: ';

/*
 * Note that an array is never created or returned,
 * which saves memory.
 */
foreach (xrange(1, 9, 2) as $number) {
    echo "$number ";
}

echo "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Single digit odd numbers: 1 3 5 7 9 
]]>
    </screen>
   </informalexample>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.finally">
   <title><link linkend="language.exceptions"><literal>finally</literal></link> keyword added</title>
   
   <para>
    <literal>try</literal>-<literal>catch</literal> blocks now support a
    <link linkend="language.exceptions"><literal>finally</literal></link>
    block for code that should be run regardless of whether an exception has
    been thrown or not.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.password">
   <title>New password hashing API</title>
   
   <para>
    A <link linkend="book.password">new password hashing API</link> that makes
    it easier to securely hash and manage passwords using the same underlying
    library as <function>crypt</function> in PHP has been added. See the
    documentation for <function>password_hash</function> for more detail.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.foreach-list">
   <title><link linkend="control-structures.foreach"><literal>foreach</literal></link> now supports <function>list</function></title>
   
   <para>
    The <link linkend="control-structures.foreach">foreach</link> control
    structure now supports unpacking nested arrays into separate variables via
    the <function>list</function> construct. For example:
   </para>
   
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$array = [
    [1, 2],
    [3, 4],
];

foreach ($array as list($a, $b)) {
    echo "A: $a; B: $b\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
A: 1; B: 2
A: 3; B: 4
]]>
    </screen>
   </informalexample>
   
   <para>
    Further documentation is available on the
    <link linkend="control-structures.foreach.list">foreach</link> manual
    page.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.empty">
   <title><function>empty</function> supports arbitrary expressions</title>
   
   <para>
    Passing an arbitrary expression instead of a variable to
    <function>empty</function> is now supported. For example:
   </para>
   
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function always_false() {
    return false;
}

if (empty(always_false())) {
    echo "This will be printed.\n";
}

if (empty(true)) {
    echo "This will not be printed.\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
This will be printed.
]]>
    </screen>
   </informalexample>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.const-dereferencing">
   <title><type>array</type> and <type>string</type> literal dereferencing</title>
   
   <para>
    <type>Array</type> and <type>string</type> literals can now be
    dereferenced directly to access individual elements and characters:
    
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
echo 'Array dereferencing: ';
echo [1, 2, 3][0];
echo "\n";

echo 'String dereferencing: ';
echo 'PHP'[0];
echo "\n";
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Array dereferencing: 1
String dereferencing: P
]]>
     </screen>
    </informalexample>
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.class-name">
   <title>Class name resolution via <link linkend="language.oop5.basic.class.class">::class</link></title>
   
   <para>
    It is possible to use <literal>ClassName::class</literal> to get a fully
    qualified name of class <literal>ClassName</literal>. For example:
    
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
namespace Name\Space;
class ClassName {}

echo ClassName::class;

echo "\n";
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Name\Space\ClassName
]]>
     </screen>
    </informalexample>
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.opcache">
   <title><link linkend="book.opcache">OPcache</link> extension added</title>
   
   <para>
    The Zend Optimiser+ opcode cache has been added to PHP as the new
    <link linkend="book.opcache">OPcache extension</link>.
    OPcache improves PHP performance by storing precompiled script bytecode in
    shared memory, thereby removing the need for PHP to load and parse scripts
    on each request. See
    <link linkend="opcache.installation">the installation instructions</link>
    for more detail on enabling and using OPcache.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.non-scalar-iterator-keys">
   <title><link linkend="control-structures.foreach"><literal>foreach</literal></link> now supports non-scalar keys</title>
   
   <para>
    <link linkend="control-structures.foreach">foreach</link> now supports
    keys of any type. While non-scalar keys cannot occur in native PHP arrays,
    it is possible for <methodname>Iterator::key</methodname> to return a
    value of any type, and this will now be handled correctly.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.windows-apache">
   <title>Apache 2.4 handler supported on Windows</title>
   
   <para>
    The Apache 2.4 handler SAPI is now supported on Windows.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.gd">
   <title>Improvements to GD</title>
   
   <para>
    Various improvements have been made to the GD extension, these include:
   </para>
   
   <itemizedlist>
    <listitem>
     <simpara>
      Flipping support using the new <function>imageflip</function> 
      function.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Advanced cropping support using the <function>imagecrop</function> &amp; 
      <function>imagecropauto</function> functions.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      WebP read and write support using <function>imagecreatefromwebp</function> 
      &amp; <function>imagewebp</function> respectively.
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 
 <sect1 xml:id="migration55.deprecated">
  <title>Deprecated features in PHP 5.5.x</title>
  
  <sect2 xml:id="migration55.deprecated.mysql">
   <title><link linkend="book.mysql">ext/mysql</link> deprecation</title>
   
   <para>
    The <link linkend="book.mysql">original MySQL extension</link> is now
    deprecated, and will generate <constant>E_DEPRECATED</constant> errors
    when connecting to a database. Instead, use the
    <link linkend="book.mysqli">MySQLi</link> or
    <link linkend="ref.pdo-mysql">PDO_MySQL</link> extensions.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.deprecated.preg-replace-e">
   <title><function>preg_replace</function> <literal>/e</literal> modifier</title>
   
   <para>
    The <function>preg_replace</function> <literal>/e</literal> modifier is
    now deprecated. Instead, use the
    <function>preg_replace_callback</function> function.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.deprecated.intl">
   <title><link linkend="book.intl">intl</link> deprecations</title>
   
   <para>
    <methodname>IntlDateFormatter::setTimeZoneID</methodname> and
    <function>datefmt_set_timezone_id</function> are now deprecated. Instead,
    use the <methodname>IntlDateFormatter::setTimeZone</methodname> method and
    <function>datefmt_set_timezone</function> function, respectively.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.deprecated.mcrypt">
   <title><link linkend="book.mcrypt">mcrypt</link> deprecations</title>
   
   <simpara>
    The following functions have been deprecated:
   </simpara>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>mcrypt_cbc</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_cfb</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_ecb</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mcrypt_ofb</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 
 <sect1 xml:id="migration55.changed-functions">
  <title>Changed Functions</title>
  
  <sect2 xml:id="migration55.changed-functions.core">
   <title>PHP Core</title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>set_error_handler</function> can now be called with &null; as
      an argument to reset the error handler.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      When called with &null;, <function>set_error_handler</function> and
      <function>set_exception_handler</function> now return the previous error
      or exception handler, respectively.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>json_encode</function> now accepts <parameter>depth</parameter>
      parameter.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      The behaviour of <function>pack</function> and
      <function>unpack</function> with the "a" and "A" format codes has
      changed.
      <link linkend="migration55.incompatible.pack">Detailed notes on these changes are available.</link>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.changed-functions.intl">
   <title><link linkend="book.intl">intl</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>MessageFormatter::format</methodname> and related functions
      now accept named arguments and mixed numeric and named arguments when PHP
      is linked to ICU 4.8 or later.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>MessageFormatter::format</methodname> and related functions
      no longer error when an insufficient number of arguments have been
      provided. Instead, the placeholders will not be substituted.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>MessageFormatter::format</methodname> and
      <methodname>MessageFormatter::parse</methodname> are no longer limited to
      second precision when dealing with times.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::__construct</methodname> and
      <function>datefmt_create</function> now accept
      <classname>IntlTimeZone</classname> and
      <classname>DateTimeZone</classname> objects for the
      <parameter>timezone</parameter> argument, and
      <classname>IntlCalendar</classname> objects for the
      <parameter>calendar</parameter> argument. Furthermore, if the time zone
      is omitted and the <parameter>calendar</parameter> doesn't specify a time
      zone, PHP's default time zone from
      <function>date_default_timezone_get</function> is now used instead of the
      default ICU time zone.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getCalendar</methodname> and
      <function>datefmt_get_calendar</function> return false if the
      <classname>IntlDateFormatter</classname> object was created with an
      <classname>IntlCalendar</classname> instance instead of one of the
      <classname>IntlDateFormatter</classname> constants.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::setCalendar</methodname> and
      <function>datefmt_set_calendar</function> now accept
      <classname>IntlCalendar</classname> objects in addition to the
      <classname>IntlDateFormatter</classname> constants.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::format</methodname> and
      <function>datefmt_format</function> now accept
      <classname>IntlCalendar</classname> objects.
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 
 <sect1 xml:id="migration55.new-functions">
  <title>New Functions</title>
  
  <sect2 xml:id="migration55.new-functions.core">
   <title>PHP Core</title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>array_column</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>boolval</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>json_last_error_msg</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_get_info</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_hash</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_needs_rehash</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>password_verify</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.hash">
   <title><link linkend="book.hash">Hash</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>hash_pbkdf2</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.openssl">
   <title><link linkend="book.openssl">OpenSSL</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>openssl_pbkdf2</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.curl">
   <title><link linkend="book.curl">cURL</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>curl_escape</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_file_create</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_multi_setopt</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_multi_strerror</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_pause</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_reset</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_share_close</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_share_init</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_share_setopt</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_strerror</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>curl_unescape</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.gd">
   <title><link linkend="book.image">GD</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>imageaffinematrixconcat</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imageaffinematrixget</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imagecrop</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imagecropauto</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imageflip</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imagepalettetotruecolor</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>imagescale</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.mysqli">
   <title><link linkend="book.mysqli">MySQLi</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>mysqli_begin_transaction</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mysqli_release_savepoint</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>mysqli_savepoint</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.pgsql">
   <title><link linkend="book.pgsql">PostgreSQL</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>pg_escape_literal</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>pg_escape_identifier</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.sockets">
   <title><link linkend="book.sockets">Sockets</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>socket_sendmsg</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>socket_recvmsg</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>socket_cmsg_space</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>  
  
  <sect2 xml:id="migration55.new-functions.cli">
   <title><link linkend="features.commandline">CLI</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>cli_get_process_title</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>cli_set_process_title</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-functions.intl">
   <title><link linkend="book.intl">Intl</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <function>datefmt_format_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_calendar_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_timezone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_set_timezone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>datefmt_get_calendar_object</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_create_instance</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_keyword_values_for_locale</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_now</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_available_locales</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_add</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_after</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_before</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_roll</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_clear</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_field_difference</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_actual_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_actual_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_day_of_week_type</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_first_day_of_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_greatest_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_least_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_locale</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_maximum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_minimal_days_in_first_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_minimum</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_type</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_weekend_transition</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_in_daylight_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_equivalent_to</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_lenient</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_set</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_is_weekend</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_first_day_of_week</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_lenient</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_equals</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_repeated_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_skipped_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_repeated_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_set_skipped_wall_time_option</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_from_date_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_to_date_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_error_code</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlcal_get_error_message</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_create_instance</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_set_gregorian_change</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_get_gregorian_change</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intlgregcal_is_leap_year</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_default</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_gmt</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_unknown</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_enumeration</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_count_equivalent_ids</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_create_time_zone_id_enumeration</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_canonical_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_region</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_tz_data_version</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_equivalent_id</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_use_daylight_time</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_offset</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_raw_offset</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_has_same_rules</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_display_name</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_dst_savings</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_from_date_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_to_date_time_zone</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_error_code</function>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <function>intltz_get_error_message</function>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-features.spl">
   <title><link linkend="book.spl">SPL</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>SplFixedArray::__wakeup</methodname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 
 <sect1 xml:id="migration55.classes">
  <title>New Classes and Interfaces</title>
  
  <sect2 xml:id="migration55.classes.curl">
   <title><link linkend="book.curl">cURL</link></title>
   <itemizedlist>
    <listitem>
     <simpara>
      <classname>CURLFile</classname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.classes.datetime">
   <title><link linkend="book.datetime">Date and Time</link></title>
   <itemizedlist>
    <listitem>
     <simpara>
      <classname>DateTimeImmutable</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>DateTimeInterface</classname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.classes.intl">
   <title><link linkend="book.intl">Intl</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <classname>IntlCalendar</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlGregorianCalendar</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlTimeZone</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlBreakIterator</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlRuleBasedBreakIterator</classname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <classname>IntlCodePointBreakIterator</classname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 
 <sect1 xml:id="migration55.new-methods">
  <title>New Methods</title>
  
  <sect2 xml:id="migration55.new-methods.mysqli">
   <title><link linkend="book.mysqli">MySQLi</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>mysqli::begin_transaction</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>mysqli::release_savepoint</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>mysqli::savepoint</methodname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.new-methods.intl">
   <title><link linkend="book.intl">Intl</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::formatObject</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getCalendarObject</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::getTimeZone</methodname>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <methodname>IntlDateFormatter::setTimeZone</methodname>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>
 
 <sect1 xml:id="migration55.extensions-other">
  <title>Other changes to extensions</title>
  
  <sect2 xml:id="migration55.extensions-other.intl">
   <title><link linkend="book.intl">Intl</link></title>
   
   <para>
    The <link linkend="book.intl">intl</link> extension now requires ICU 4.0
    or later.
   </para>
  </sect2>
 </sect1>
 
 <sect1 xml:id="migration55.global-constants">
  <title>New Global Constants</title>
  
  <sect2 xml:id="migration55.global-constants.gd">
   <title><link linkend="book.image">GD</link></title>
   
   <itemizedlist>
    <listitem>
     <simpara>
      <constant>IMG_AFFINE_TRANSLATE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_AFFINE_SCALE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_AFFINE_ROTATE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_AFFINE_SHEAR_HORIZONTAL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_AFFINE_SHEAR_VERTICAL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CROP_DEFAULT</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CROP_TRANSPARENT</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CROP_BLACK</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CROP_WHITE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CROP_SIDES</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_FLIP_BOTH</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_FLIP_HORIZONTAL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_FLIP_VERTICAL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BELL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BESSEL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BICUBIC</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BICUBIC_FIXED</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BLACKMAN</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BOX</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_BSPLINE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_CATMULLROM</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_GAUSSIAN</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_GENERALIZED_CUBIC</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_HERMITE</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_HAMMING</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_HANNING</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_MITCHELL</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_POWER</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_QUADRATIC</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_SINC</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_NEAREST_NEIGHBOUR</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_WEIGHTED4</constant>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <constant>IMG_TRIANGLE</constant>
     </simpara>
    </listitem>
   </itemizedlist>
  </sect2>
  
  <sect2 xml:id="migration55.global-constants.mysqli">
   <title><link linkend="book.mysqli">MySQLi</link></title>
   
   <para>
    The <constant>MYSQLI_SERVER_PUBLIC_KEY</constant> option has been added
    for use with <function>mysqli_options</function>.
   </para>
  </sect2>
 </sect1>
 
 <sect1 xml:id="migration55.ini">
  <title>Changes to INI file handling</title>
  
  <sect2 xml:id="migrations55.ini.intl">
   <title><link linkend="book.intl">Intl</link></title>
   
   <para>
    The <literal>intl.use_exceptions</literal> configuration directive has
    been added, which controls the behaviour of intl when global errors occur
    in conjunction with the already extant <literal>intl.error_level</literal>
    configuration directive.
   </para>
  </sect2>
  
  <sect2 xml:id="migration55.ini.mysqlnd">
   <title><link linkend="book.mysqlnd">MySQLnd</link></title>
   
   <para>
    The <link linkend="ini.mysqlnd.sha256-server-public-key">mysqlnd.sha256_server_public_key</link>
    configuration directive has been added to allow
    <link linkend="book.mysqli">mysqli</link> to use the new MySQL
    authentication protocol.
   </para>
  </sect2>
 </sect1>
 
 <sect1 xml:id="migration55.internals">
  <title>Changes to PHP Internals</title>
  
  <itemizedlist>
   <listitem>
    <simpara>
     Extensions cannot override <command>zend_execute()</command> any more and
     should override <command>zend_execute_ex()</command> instead.
     <literal>EG(current_execute_data)</literal> is already initialized in
     <command>zend_execute_ex()</command>, so for compatibility extensions may
     need to use
     <literal>EG(current_execute_data)-&gt;prev_execute_data</literal> instead.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Removed <literal>EG(arg_types_stack)</literal>,
     <literal>EX(fbc)</literal>, <literal>EX(called_scope)</literal> and
     <literal>EX(current_object)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Added <literal>op_array-&gt;nested_calls</literal>, which is calculated
     at compile time.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Added <literal>EX(call_slots)</literal>, which is an array to store
     information about syntaticaly nested calls (e.g.
     <literal>foo(bar())</literal>) and is preallocated together with
     <literal>execute_data</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Added <literal>EX(call)</literal>, which is a pointer to a current
     calling function, and is an element of <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Opcodes
     <link linkend="internals2.opcodes.init-method-call">INIT_METHOD_CALL</link>,
     <link linkend="internals2.opcodes.init-static-method-call">ZEND_INIT_STATIC_METHOD_CALL</link>,
     <link linkend="internals2.opcodes.init-fcall-by-name">ZEND_INIT_FCALL_BY_NAME</link>
     and
     <link linkend="internals2.opcodes.init-ns-fcall-by-name">ZEND_INIT_NS_FCALL_BY_NAME</link>
     use <literal>result.num</literal> as an index in
     <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Opcode <link linkend="internals2.opcodes.new">ZEND_NEW</link> uses
     <literal>extended_value</literal> as an index in
     <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Opcodes <link linkend="internals2.opcodes.do-fcall">ZEND_DO_FCALL</link>
     and
     <link linkend="internals2.opcodes.do-fcall-by-name">ZEND_DO_FCALL_BY_NAME</link>
     use <literal>op2.num</literal> as an index in
     <literal>EX(call_slots)</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Added <literal>op_array-&gt;used_stack</literal>, which is calculated at
     compile time; the corresponding stack space is preallocated together with
     <literal>execute_data</literal>. As a result, the ZEND_SEND* and
     ZEND_DO_FCALL* opcodes no longer need to check for stack overflow.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Removed <literal>execute_data-&gt;Ts</literal> field. The VM temporary
     variables are always allocated immediately before the
     <literal>execute_data</literal> structure, and are now accessed by their
     offset from the <literal>execute_data</literal> base pointer instead of
     via <literal>execute_data-&gt;Ts</literal>.  The compiler stores new
     offsets in <literal>op_array-&gt;opcodes[*].op?.num</literal>.  The
     <command>EX_TMP_VAR()</command> and <command>EX_TMP_VAR_NUM()</command>
     macros can be used to access temporary variables by offset or number. You
     can convert the number to an offset using <command>EX_TMP_VAR_NUM(0,
     num)</command> or offset to number using
     <command>(EX_TMP_VAR_NUM(0,0)-EX_TMP_VAR(0,offset))</command>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Removed the <literal>execute_data-&gt;CVs</literal> field. The VM
     compiled variables are always allocated immediately after the
     <literal>execute_data</literal> structure, and are now accessed by the
     offset from the <literal>execute_data</literal> base pointer instead of
     via <literal>execute_data-&gt;CVs</literal>. You can use the
     <command>EX_CV_NUM()</command> macro to access compiled variables by
     number.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect1>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
