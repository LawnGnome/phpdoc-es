<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 310835 Maintainer: yago Status: ready -->
<appendix xml:id="history" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Historia de PHP y proyectos relacionados</title>
 <para>
   PHP ha recorrido un largo camino en los últimos años.
  Crecer hasta ser uno de los más importantes lenguajes de
  programación en entornos Web no ha sido tarea fácil.
  Aquellos interesados en ver brevemente cómo creció PHP
  hasta lo que es hoy en día, sigan leyendo. Antiguas versiones
  de PHP están disponibles en el <link
  xlink:href="&url.php.museum;">Museo de PHP</link>.
 </para>
 
 <sect1 xml:id="history.php">
  <title>Historia de PHP</title>
  
  <sect2 xml:id="history.phpfi">
   <title>PHP/FI</title>
   <para>
    PHP proviene de un programa anterior, llamado PHP/FI.
    PHP/FI fue creado por Rasmus Lerdorf en 1995, inicialmente como un
    simple conjunto de scripts de Perl para controlar quién accedia a su
    curriculum online. Llamó a ese conjunto de scripts 'Personal
    Home Page Tools'. Según se requería, Rasmus fue añadiendo más 
    funcionalidad escrita en C que era capaz de comunicarse con bases de 
    datos y permitía a los usuarios desarrollar sencillas aplicaciones
    Web dinámicas. Rasmus decidió <link
    xlink:href="&url.php.release1.0.0;">liberar</link> el código
    fuente de PHP/FI para que cualquiera pudiese utilizarlo,
    así como arreglar errores y mejorar el código.
   </para>
   <para>
    PHP/FI, que se mantuvo para páginas personales y como intérprete
    de formularios, incluidas algunas de las funciones básicas de PHP
    tal y como lo conocemos hoy. Tenía variables como las de Perl, 
    interpretación automática de variables de formulario y sintaxis
    incrustada HTML. La sintaxis por sí misma era similar a la de Perl, 
    aunque mucho más limitada, simple y algo inconsistente.
   </para>
   <para>    
    En 1997, PHP/FI 2.0,  la segunda vez que se escribió la implentación en C,
    tuvo un seguimiento estimado de varios miles de usuarios en todo el mundo,
    aproximadamente 50.000 dominios tenían PHP/FI instalado, sumando alrededor 
    del 1% de los dominios de Internet. Mientras había mucha gente contribuyendo
    con líneas de código a este proyecto, en su mayor parte era todavía el
    proyecto de una sola persona.       
   </para>
   <para>
    PHP/FI 2.0 no se liberó oficialmente hasta Noviembre de 1997,
    después de estar la mayoría del tiempo en versión beta. Después de poco
    tiempo de liberarse aparecieron las primeras versiones alpha de PHP 3.0.
   </para>
   <para>
    <example>
     <title>Ejemplo de código PHP/FI</title>
     <programlisting role="html">
<![CDATA[
<!--include /text/header.html-->

<!--getenv HTTP_USER_AGENT-->
<!--ifsubstr $exec_result Mozilla-->
  Hey, ¡está usando Netscape!<p>
<!--endif-->

<!--sql database select * from table where user='$username'-->
<!--ifless $numentries 1-->
  Lo siento, esta entrada no existe<p>
<!--endif exit-->
  Bienvenido <!--$user-->!<p>
  Tiene <!--$index:0--> créditos restantes en su cuenta.<p>

<!--include /text/footer.html-->
]]>
     </programlisting>
    </example>
   </para>
  </sect2>

  <sect2 xml:id="history.php3">
   <title>PHP 3</title>
   <para>    
    PHP 3.0 era la primera versión que más se parece al PHP que 
    conocemos hoy. Fué reescrito completamente por Andi Gutmans 
    and Zeev Suraski en 1997, después de que dieran cuenta que
    PHP/FI no era suficiente para el desarrollo de una 
    aplicacción eCommerce cuando estaban trabajando para un
    proyecto universitario. En un esfuerzo para cooperar y empezar
    a construir sobre la base de usuarios de PHP/FI
    Andi, Rasmus y Zeev anunciaron PHP 3.0 como el oficial sucesor
    de PHP/FI 2.0. y el desarrollo de PHP/FI finalizó.
   </para>
   <para>
    Una de las mejores características de PHP 3.0 era su
    gran extensibilidad. Además de proveer a los usuarios finales
    de una sólida infraestructura para muchísimas
    bases de datos, protocolos y APIs, las características de
    extensibilidad de PHP 3.0 atrajeron a docenas de desarrolladores
    a unirse y enviar nuevos módulos de extensión. Sin duda,
    ésta fue la clave del enorme éxito de PHP 3.0. Otras características
    clave introducidas en PHP 3.0 fueron el soporte de sintáxis
    orientado a objetos y una sintáxis de lenguaje mucho más potente
    y consistente.
   </para>
   <para>
    El nuevo lenguaje fue liberado bajo un nuevo nombre, que se deshacía 
    de la implicación de uso personal limitado que tenía el
    nombre PHP/FI 2.0. Fué nombrado 'PHP' a secas, con el significado
    de ser un acrónimo recursivo - PHP: Hypertext Preprocessor.
   </para>
   <para>
    A finales de 1998, PHP creció hasta una base de instalación de
    decenas de millares de usuarios (estimados) y cientos de miles de
    sitios Web informando de su instalación. En su apogeo, PHP 3.0
    estaba instalado en aproximadamente un 10% de los servidores Web
    en Internet.
   </para>
   <para>
    PHP 3.0 se liberó oficialmente en Junio de 1998, después
    de unos 9 meses de testing público.
   </para>
  </sect2>

  <sect2 xml:id="history.php4">
   <title>PHP 4</title>
   <para>
    En el invierno de 1998, poco después del lanzamiento oficial
    de PHP 3.0, Andi Gutmans y Zeev Suraski comenzaron a
    trabajar en reescribir el núcleo de PHP. Los objetivos
    de diseño fueron mejorar la ejecución de aplicaciones
    complejas y mejorar la modularidad del código base de PHP.
    Estas aplicaciones se hicieron posibles por las nuevas
    características de PHP 3.0 y el apoyo de una gran variedad
    de bases de datos y APIs de terceros, pero PHP 3.0
    no fue diseñado para el mantenimiento tan complejo de
    aplicaciones eficientemente.
   </para>
   <para>
    El nuevo motor, apodado 'Motor Zend' (proviene de sus
    apellidos, Zeev y Andi), alcanzó estos objetivos de
    diseño satisfactoriamente, y se introdujo por primera vez a
    mediados de 1999. PHP 4.0, basado en este motor, y acoplado
    con un gran rango de nuevas características adicionales, fue
    oficialmente liberado en Mayo de 2000, casi dos años después
    que su predecesor, PHP 3.0. Además de la mejora
    de rendimiento de esta versión, PHP 4.0 incluía otras características
    clave como el soporte para la mayoría de los servidores Web,
    sesiones HTTP, buffers de salida, formas más seguras
    de controlar las entradas de usuario y muchas nuevas 
    construcciones de lenguaje.
   </para>
   <para>
    A día de hoy, PHP es usado por cientos de miles de desarrolladores
    (estimado), y varios millones de sitios web informan que lo tienen
    instalado, lo que cuenta alrededor del 20% de dominios en Internet. 
   </para>
   <para>
    El equipo de desarrollo de PHP incluye docenas de programadores,
    así como otras docenas de personas trabajando en proyectos 
    relacionados con PHP como PEAR y el proyecto de documentación.
   </para>
  </sect2>

  <sect2 xml:id="history.php5">
   <title>PHP 5</title>
   <para>
    PHP 5 fué lanzado en Julio del 2004 después de un largo desarrollo y
    varios pre-releases. Está básicamente impulsado por su núcleo,
    <literal>Zend Engine 2.0</literal> que contiene un nuevo modelo de 
    objectos y docenas de nuevas opciones.
   </para>
  </sect2>
 </sect1>
 
 <sect1 xml:id="history.php.related">
  <title>Historia de los proyectos relacionados con PHP</title>
  
  <!-- Hope Stig and/or Egon can do this
  
  <sect2 xml:id="history.phpdoc">
   <title>PHP Documentation Project</title>
   <para>
   </para>
  </sect2>
  
  -->

  <sect2 xml:id="history.pear">
   <title>PEAR</title>
   <para>
    <link xlink:href="&url.php.pear;">PEAR</link>, la <literal>extensión de PHP y 
    repositorio de aplicaciones</literal> (originalmente, extensión de PHP y
    repositorio add-on) es la base de clases para PHP y en un futuro seguramente
    será la forma de distribuir extensiones PHP entre desarrolladores.
   </para>
   <para>
    PEAR nació de las discusiones mantenidas en el PHP Developers'
    Meeting (PDM) transcurrido en Enero de 2000 en Tel Aviv. Fue
    creado por Stig S. Bakken, y lo dedicó a su primogénita, Malin Bakken.
   </para>
   <para>
    Hasta principios de 2000, PEAR fue creciendo hasta ser un gran y
    significativo proyecto con un gran número de programadores
    trabajando en la implementación común, funcionalidad reutilizable
    para el beneficio de toda la comunidad PHP. PEAR hoy incluye
    una gran variedad de clases de infraestructura
    para acceso a bases de datos, caché de contenido, cálculos
    matemáticos, comercio electrónico y mucho más.
   </para>
   <para>
    Más información sobre PEAR se puede encontrar en <link
    xlink:href="&url.php.pear.manual;">el manual</link>.
   </para>
  </sect2>

  <sect2 xml:id="history.phpqa">
   <title>Garantía de calidad de PHP</title>
   <para>
    La <link xlink:href="&url.php.prerelease;">Iniciativa para la
    Garantía de Calidad de PHP</link> se configuró en
    el verano de 2000 en respuesta a los que criticaban que las
    versiones de PHP se liberaban sin que fueran comprobadas
    suficientemente para entornos de producción. El equipo
    ahora consiste en un grupo central de desarrolladores con un buen
    entendimiento del código base de PHP. Estos desarrolladores
    están mucho tiempo localizando y solucionando problemas con PHP.
    Además, hay muchos miembros de otros equipos que testean y
    prueban estas soluciones usando una gran variedad de plataformas.
   </para>
  </sect2>

  <sect2 xml:id="history.phpgtk">
   <title>PHP-GTK</title>
   <para>
    <link xlink:href="&url.php.gtk;">PHP-GTK</link> es la solución
    PHP para escribir las aplicaciones GUI del lado del
    cliente. Andrei Zmievski nos recuerda la planificación y la
    creación del proceso de PHP-GTK:
   </para>
   <blockquote>
    <para>
     Programar GUI siempre ha estado entre mis intereses, y
     he encontrado que Gtk+ es una herramienta muy buena,
     salvo que programar con ella en C es algo tedioso. Tras
     presenciar las implementaciones de PyGtk y GTK-Perl,
     decidí ver si PHP se podría hacer con la interfaz Gtk+,
     incluso mínimamente. En Agosto de 2000
     empecé a tener más tiempo libre, con lo que comencé
     a experimentar. Mi principal guía fue la implementación
     PyGtk con características completas bastante buenas
     y con un buen interfaz orientado a objetos. James Henstridge,
     el autor de PyGtk, proveyó mucha ayuda adicional durante
     esos estados iniciales.
    </para>
    <para>
     Escribir las interfaces de todas las funciones Gtk+ estaba fuera
     de cuestión, por lo que mantuve la idea de generador de código,
     similar a cómo PyGtk lo hizo. El generador de código es un
     programa PHP que lee un conjunto de ficheros <filename>.defs</filename>
     que contienen las clases Gtk+, constantes e información de métodos 
     y genera código C que interactúa PHP con ellos. Lo que no se puede
     generar automáticamente puede escribirse a mano en ficheros
     <filename>.overrides</filename>.
    </para>
    <para>
     Trabajar en el generador de código y la infraestructura llevó algo
     de tiempo, porque pude dedicar poco tiempo a PHP-GTK durante
     el otoño de 2000. Después mostré PHP-GTK a Frank Kromann,
     que se interesó y empezó a ayudarme con el trabajo del generador
     de código y con la implementación para Win32. Cuando escribimos
     el primer programa Hola Mundo y funcionó, fue extremadamente
     excitante. Llevó un par de meses más llevar el proyecto a una condición
     presentable y la versión inicial se liberó el 1 de Marzo de 2001. La
     historia rápidamente llegó a SlashDot.
    </para>
    <para>
     Dándome cuenta que PHP-GTK podría extenderse, configuré listas
     de correo separadas y repositorios CVS para ello, así como
     el sitio web gtk.php.net con la ayuda de Colin Viebrock. La
     documentación también tenía que hacerse y James Moore
     se únio al proyecto para ayudar en esto.
    </para>
    <para>
     Desde su lanzamiento PHP-GTK fue ganando popularidad.
     Tenemos nuestro propio equipo de documentación, el manual
     sigue mejorando, la gente ha comenzado a escribir extensiones
     para PHP-GTK, y con ello más y mejores aplicaciones.
    </para>
   </blockquote>
  </sect2>
 </sect1>

 <sect1 xml:id="history.php.books">
  <title>Libros sobre PHP</title>
  <para>
    Según crecía PHP, empezó a ser reconocido como una popular
    plataforma de desarrollo web. Una de las más interesantes formas
    de ver esta tendencia fué observando los libros de PHP que
    han ido publicando a lo largo de los años.
  </para>
  <para>
    Por lo que nosotros sabemos, el primer libro dedicado a PHP fue
    'PHP - tvorba interaktivních internetových aplikací' (<emphasis>PHP
   - Creando aplicaciones interactivas en internet</emphasis>) - un libro
    checo publicado en 1999, cuyo autor fue Jirka Koseksiendo.  Al mes
    siguiente le siguió un libro alemán cuyos autores fueron Egon
    Schmid, Christian Cartus y Richard Blume. El primer libro en
    Inglés sobre PHP se publicó poco después, y fue 'Core PHP Programming' 
    de Leon Atkinson. Los dos libros cubrían PHP 3.0.
  </para>
  <para>
    Mientras estos libros fueron los primeros de su tipo - fueron
    seguidos por un gran número de libros de una multitud de
    autores y editores. ¡Existen más 400 libros en inglés,
    100 libros en alemán, y más de 50 libros en
    francés o español! Además, se pueden encontrar libros sobre PHP
    en la mayoría de las demás lenguas, incluyendo
    coreano, japonés y hebreo.
  </para>
  <para>
    Evidentemente, este gran número de libros, escritos por diferentes
    autores, publicados por muchos editores, y  su disponibilidad en tantas
    lenguas - son un fuerte testimonio del éxito mundial de PHP.
  </para>
 </sect1>
 
 <sect1 xml:id="history.php.publications">
  <title>Publicaciones sobre PHP</title>
  <para>
    Por lo que sabemos, el primer artículo sobre PHP en una
    revista impresa se publicó en la version checa de
    Computerworld en la primavera de 1998, y cubría PHP
    3.0. Como con los libros, fue el primero en una serie de muchos
    artículos publicados sobre PHP en varias revistas
    importantes.
  </para>
  <para>
    Artículos sobre PHP han aparecido en Dr. Dobbs, Linux
    Enterprise, Linux Magazine y muchas otras. Artículos sobre
    migración de aplicaciones basadas en PHP bajo Windows ¡han
    aparecido incluso en el <acronym>MSDN</acronym> de 
   <productname>Microsoft</productname>!
  </para>
 </sect1>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
