<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.13 Maintainer: lboshell Status: ready -->
<appendix xml:id="transports" xmlns="http://docbook.org/ns/docbook">
 <title>Lista de Transportes de Sockets Soportados</title>
 <para>
  La siguiente es una lista de los varios transportes de socket estilo
  URL que PHP tiene integrados para su uso con funciones de sockets
  basados en secuencias, tales como <function>fsockopen</function>, y
  <function>stream_socket_client</function>. Estos transportes
  <emphasis>no</emphasis> se aplican a la <link
  linkend="ref.sockets">Extensi&oacute;n de Sockets</link>.
 </para>

 <para>
  Para una lista de transportes instalados con su versi&oacute;n de
  PHP use <function>stream_get_transports</function>.
 </para>

 <section xml:id="transports.inet">
  <title>Dominio de Internet: TCP, UDP, SSL, y TLS</title>
  <simpara>
   PHP 3, PHP 4, PHP 5. <literal>ssl://</literal> y
   <literal>tls://</literal> a partir de PHP 4.3.0,
   <literal>sslv2://</literal> y <literal>sslv3://</literal> a partir
   de PHP 5.0.2
  </simpara>

  <note>
   <simpara>
    Si no se especifica un transporte, se
    asumir&aacute; <literal>tcp://</literal>
   </simpara>
  </note>

  <itemizedlist>
   <listitem><simpara><literal>127.0.0.1</literal></simpara></listitem>
   <listitem><simpara><literal>fe80::1</literal></simpara></listitem>
   <listitem><simpara><literal>www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://127.0.0.1</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://fe80::1</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>udp://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>ssl://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>sslv2://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>sslv3://www.example.com</literal></simpara></listitem>
   <listitem><simpara><literal>tls://www.example.com</literal></simpara></listitem>
  </itemizedlist>

  <simpara>
   Los sockets del Dominio de Internet esperan un n&uacute;mero de
   puerto junto con una direcci&oacute;n de destino. En el caso de
   <function>fsockopen</function>, &eacute;ste es especificado en un
   segundo par&aacute;metro y por lo tanto no tiene impacto sobre el
   formato de la URL de transporte. Sin embargo, en el caso de
   <function>stream_socket_client</function> y funciones relacionadas,
   as&iacute; como ocurre con URLs tradicionales, el n&uacute;mero de
   puerto se especifica como un sufijo del URL de transporte
   delimitado con el signo dos puntos.
  </simpara>

  <itemizedlist>
   <listitem><simpara><literal>tcp://127.0.0.1:80</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://[fe80::1]:80</literal></simpara></listitem>
   <listitem><simpara><literal>tcp://www.example.com:80</literal></simpara></listitem>
  </itemizedlist>

  <note>
   <title>Direcciones IPv6 num&eacute;ricas con n&uacute;meros de
   puerto</title>
   <simpara>
    En el segundo ejemplo anterior, mientras que los ejemplos IPv4 y
    con nombre de dominio fueron modificados solo ligeramente con la
    adici&oacute;n de sus dos puntos y n&uacute;mero de puerto, la
    direcci&oacute;n IPv6 es rodeada por corchetes cuadrados:
    <literal>[fe80::1]</literal>. Esto es para poder distinguir entre
    los dos puntos usados en una direcci&oacute;n IPv6 y aquellos
    usados para delimitar el n&uacute;mero de puerto.
   </simpara>
  </note>

  <simpara>
   Los transportes <literal>ssl://</literal> y
   <literal>tls://</literal> (disponibles &uacute;nicamente cuando se
    compila el soporte para openssl con PHP) son extensiones del
   transporte <literal>tcp://</literal> el cual incluye
   encripci&oacute;n SSL. A partir de PHP 4.3.0 el soporte OpenSSL
   debe ser compilado est&aacute;ticamente con PHP, a partir de PHP
   5.0.0 puede ser compilado como m&oacute;dulo o
   est&aacute;ticamente.
  </simpara>

  <simpara>
   <literal>ssl://</literal> intentar&aacute; negociar una
   conexi&oacute;n SSL V2 o SSL V3 dependiendo de las capacidades y
   preferencias del host remoto. <literal>sslv2://</literal> y
   <literal>sslv3://</literal> seleccionar&aacute;n el protocolo SSL
   V2 o SSL V3 expl&iacute;citamente.
  </simpara>

  <para>
   <table>
    <title>
     Opciones de contexto para los transportes
     <literal>ssl://</literal> y <literal>tls://</literal> (a partir
     de PHP 4.3.2)
    </title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>Nombre</entry>
       <entry>Uso</entry>
       <entry>Predeterminado</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><literal>verify_peer</literal></entry>
       <entry>
        &true; o &false;.
        Requerir verificaci&oacute;n del certificado SSL usado.
       </entry>
       <entry>&false;</entry>
      </row>
      <row>
       <entry><literal>allow_self_signed</literal></entry>
       <entry>
        &true; o &false;.
        Permitir certificados firmados por uno mismo.
       </entry>
       <entry>&false;</entry>
      </row>
      <row>
       <entry><literal>cafile</literal></entry>
       <entry>
        Ubicaci&oacute;n del archivo de Autoridad de Certificado en un
        sistema de archivos local, el cual debe ser usado con la
        opci&oacute;n de contexto <literal>verify_peer</literal> para
        verificar la identidad del conector remoto.
       </entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>capath</literal></entry>
       <entry>
        Si no se especifica <literal>cafile</literal> o el certificado
        no se encuentra all&iacute;, el directorio apuntado
        por <literal>capath</literal> es usado para buscar un
        certificado apropiado. <literal>capath</literal> debe ser un
        directorio de certificados correctamente habilitado mediante
        resumen criptogr&aacute;fico.
       </entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>local_cert</literal></entry>
       <entry>
        Ruta al archivo de certificado local en el sistema de
        archivos. Debe ser un archivo codificado mediante PEM, el cual
        contenga su certificado y llave privada. Opcionalmente, puede
        contener la cadena de expendedores del certificado.
       </entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>passphrase</literal></entry>
       <entry>
        La contrase&ntilde;a con la que el
        archivo <literal>local_cert</literal> fue codificado.
       </entry>
       <entry></entry>
      </row>
      <row>
       <entry><literal>CN_match</literal></entry>
       <entry>
        El nombre com&uacute;n (Common Name) que estamos
        esperando. PHP realizar&aacute; comparaciones limitadas de
        comodines. Si el nombre com&uacute;n no produce coincidencias,
        el intento de conexi&oacute;n fallar&aacute;.
       </entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>

  <note>
   <simpara>
   Debido a que <literal>ssl://</literal> es el transporte base para
   las envolturas <link
   linkend="wrappers.http"><literal>https://</literal></link> y <link
   linkend="wrappers.ftp"><literal>ftps://</literal></link>, cualquier
   opci&oacute;n de contexto que se aplique
   a <literal>ssl://</literal> tambi&eacute;n se aplica a
   <literal>https://</literal> y <literal>ftps://</literal>.
   </simpara>
  </note>
 </section>

 <section xml:id="transports.unix">
  <title>Dominio Unix: Unix y UDG</title>
  <simpara>
   <literal>unix://</literal> a partir de PHP 3,
   <literal>udg://</literal> a partir de PHP 5
  </simpara>

  <itemizedlist>
   <listitem><simpara><literal>unix:///tmp/misock</literal></simpara></listitem>
   <listitem><simpara><literal>udg:///tmp/misock</literal></simpara></listitem>
  </itemizedlist>

  <simpara>
   <literal>unix://</literal> provee acceso a una conexi&oacute;n
   secuencial de sockets en el dominio Unix. <literal>udg://</literal>
   provee un transporte alternativo a un socket del dominio Unix,
   usando el protocolo de datagramas de usuario.
  </simpara>

  <simpara>
   Los sockets de dominio Unix, a diferencia de los sockets del
   dominio de Internet, no esperan un n&uacute;mero de puerto. En el
   caso de <function>fsockopen</function>, el par&aacute;metro
   <parameter>num_puerto</parameter> debe ser definido como 0.
  </simpara>
 </section>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
